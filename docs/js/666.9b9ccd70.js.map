{"version":3,"file":"js/666.9b9ccd70.js","mappings":"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","sources":["webpack://zhiyuxinsheng/./src/stores/task.js","webpack://zhiyuxinsheng/./src/components/PlantDialog.vue","webpack://zhiyuxinsheng/./src/components/WeatherCanvas.vue","webpack://zhiyuxinsheng/./src/components/WeatherCanvas.vue?0937"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref, computed } from 'vue'\nimport { usePlantStore } from './plant'\nimport { taskApi } from '../services/api'\nimport { ElMessage } from 'element-plus'\n\nexport const useTaskStore = defineStore('task', () => {\n  // 所有任务数据\n  const tasks = ref([])\n  const systemTasks = ref([])\n  const completedTasks = ref([])\n  const loading = ref(false)\n  \n  // 计算属性：待完成任务\n  const pendingTasks = computed(() => tasks.value.filter(task => !task.completed))\n  \n  // 获取所有任务\n  const fetchTasks = async () => {\n    try {\n      loading.value = true\n      const response = await taskApi.getTasks()\n      tasks.value = response.tasks.filter(task => !task.completed)\n      completedTasks.value = response.tasks.filter(task => task.completed)\n    } catch (error) {\n      ElMessage.error('获取任务列表失败')\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 获取系统任务\n  const fetchSystemTasks = async () => {\n    try {\n      loading.value = true\n      const response = await taskApi.getSystemTasks()\n      systemTasks.value = response.tasks\n    } catch (error) {\n      ElMessage.error('获取系统任务失败')\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 添加任务\n  const addTask = async (task) => {\n    try {\n      const response = await taskApi.createTask({\n        title: task.title,\n        description: task.description || '',\n        deadline: task.deadline || '',\n        important: task.important || false\n      })\n      \n      // 添加到本地状态\n      tasks.value.push(response.task)\n      \n      // 不再给创建任务增加经验值\n      ElMessage.success('任务创建成功')\n    } catch (error) {\n      ElMessage.error('创建任务失败')\n    }\n  }\n  \n  // 完成任务\n  const completeTask = async (id) => {\n    try {\n      const response = await taskApi.completeTask(id)\n      \n      // 从任务列表中移除\n      const task = tasks.value.find(t => t._id === id)\n      if (task) {\n        // 将任务移动到已完成列表\n        completedTasks.value.unshift({\n          ...task,\n          completed: true,\n          completedAt: new Date().toISOString()\n        })\n        // 从待办任务中移除\n        tasks.value = tasks.value.filter(t => t._id !== id)\n      }\n      \n      // 增加植物经验值\n      const plantStore = usePlantStore()\n      if (plantStore.plants && plantStore.plants.length > 0) {\n        // 获取主植物\n        const mainPlant = plantStore.plants.find(p => p.isMainPlant)\n        if (mainPlant) {\n          const plantId = mainPlant._id || mainPlant.id\n          if (plantId) {\n            // 根据任务是否重要，增加不同的经验值\n            // 普通任务25点，重要任务50点\n            const expAmount = task && task.important ? 50 : 25;\n            await plantStore.gainExperience(plantId, expAmount)\n            \n            // 显示具体获得的经验值\n            ElMessage.success(`任务已完成，获得 ${expAmount} 点经验值！`)\n          }\n        }\n      } else {\n        ElMessage.success('任务已完成')\n      }\n    } catch (error) {\n      ElMessage.error('完成任务失败')\n    }\n  }\n  \n  // 完成系统任务\n  const completeSystemTask = async (id) => {\n    try {\n      const plantStore = usePlantStore()\n      if (!plantStore.currentPlant) {\n        ElMessage.warning('请先添加一个植物')\n        return false\n      }\n      \n      const response = await taskApi.completeSystemTask(id)\n      \n      // 更新任务状态\n      const index = systemTasks.value.findIndex(t => t._id === id)\n      if (index !== -1) {\n        systemTasks.value[index].completed = true\n      }\n      \n      // 如果后端已经处理了经验值奖励，则显示相应的提示\n      if (response.rewards) {\n        ElMessage.success(`完成任务获得 ${response.rewards.experience} 点经验`)\n      } \n      // 如果后端没有处理经验值奖励，则在前端处理\n      else {\n        // 获取主植物\n        const plantId = plantStore.currentPlant._id || plantStore.currentPlant.id\n        if (plantId) {\n          // 系统任务固定增加35点经验值\n          const expAmount = 35;\n          await plantStore.gainExperience(plantId, expAmount)\n          ElMessage.success(`完成系统任务获得 ${expAmount} 点经验值`)\n        }\n      }\n      \n      return true\n    } catch (error) {\n      if (error.response?.status === 400) {\n        ElMessage.warning('今天已经完成过此任务')\n      } else {\n        ElMessage.error('完成系统任务失败')\n      }\n      return false\n    }\n  }\n  \n  // 移除任务\n  const removeTask = async (id) => {\n    try {\n      // 检查ID是否有效\n      if (!id) {\n        ElMessage.error('任务ID无效，无法删除')\n        return\n      }\n      \n      await taskApi.deleteTask(id)\n      tasks.value = tasks.value.filter(task => task._id !== id)\n      ElMessage.success('任务已删除')\n    } catch (error) {\n      console.error('删除任务失败:', error)\n      ElMessage.error('删除任务失败')\n    }\n  }\n  \n  // 删除已完成任务\n  const removeCompletedTask = async (id) => {\n    try {\n      // 检查ID是否有效\n      if (!id) {\n        ElMessage.error('任务ID无效，无法删除')\n        return\n      }\n      \n      await taskApi.deleteTask(id)\n      completedTasks.value = completedTasks.value.filter(task => task._id !== id)\n      ElMessage.success('任务已删除')\n    } catch (error) {\n      console.error('删除任务失败:', error)\n      ElMessage.error('删除任务失败')\n    }\n  }\n  \n  // 更新任务\n  const updateTask = async (updatedTask) => {\n    try {\n      const { _id, title, description, deadline, important } = updatedTask\n      \n      const response = await taskApi.updateTask(_id, {\n        title,\n        description,\n        deadline,\n        important\n      })\n      \n      // 更新本地状态\n      const index = tasks.value.findIndex(t => t._id === _id)\n      if (index !== -1) {\n        tasks.value[index] = response.task\n      }\n      \n      ElMessage.success('任务已更新')\n    } catch (error) {\n      ElMessage.error('更新任务失败')\n    }\n  }\n  \n  // 切换任务重要性\n  const toggleTaskImportance = async (id) => {\n    const task = tasks.value.find(t => t._id === id)\n    if (task) {\n      await updateTask({\n        ...task,\n        important: !task.important\n      })\n    }\n  }\n\n  return {\n    tasks,\n    systemTasks,\n    completedTasks,\n    pendingTasks,\n    loading,\n    \n    fetchTasks,\n    fetchSystemTasks,\n    addTask,\n    completeTask,\n    completeSystemTask,\n    removeTask,\n    removeCompletedTask,\n    updateTask,\n    toggleTaskImportance\n  }\n}) ","import script from \"./PlantDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PlantDialog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PlantDialog.vue?vue&type=style&index=0&id=ac86cebe&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ac86cebe\"]])\n\nexport default __exports__","<template>\r\n  <canvas ref=\"canvas\" class=\"weather-canvas\"></canvas>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted, watch } from 'vue'\r\n\r\nconst props = defineProps({\r\n  weather: {\r\n    type: String,\r\n    required: true,\r\n    default: 'sunny',\r\n    validator: (value) => ['sunny', 'rainy', 'cloudy'].includes(value)\r\n  },\r\n  width: {\r\n    type: Number,\r\n    default: 300\r\n  },\r\n  height: {\r\n    type: Number,\r\n    default: 300\r\n  }\r\n})\r\n\r\nconst canvas = ref(null)\r\nlet ctx = null\r\nlet animationFrameId = null\r\nlet particles = []\r\nlet gradientBg = null\r\n\r\n// 初始化画布和粒子\r\nconst initCanvas = () => {\r\n  if (!canvas.value) return\r\n  \r\n  const dpr = window.devicePixelRatio || 1\r\n  ctx = canvas.value.getContext('2d')\r\n  \r\n  // 设置画布尺寸\r\n  canvas.value.width = props.width * dpr\r\n  canvas.value.height = props.height * dpr\r\n  \r\n  // 适应高分辨率显示器\r\n  ctx.scale(dpr, dpr)\r\n  \r\n  // 重置粒子数组\r\n  particles = []\r\n  \r\n  // 创建背景渐变\r\n  createBackgroundGradient()\r\n  \r\n  // 根据天气类型初始化不同的粒子\r\n  if (props.weather === 'rainy') {\r\n    initRain()\r\n  } else if (props.weather === 'sunny') {\r\n    initSun()\r\n  } else if (props.weather === 'cloudy') {\r\n    initClouds()\r\n  }\r\n  \r\n  // 开始动画循环\r\n  startAnimation()\r\n}\r\n\r\n// 创建背景渐变\r\nconst createBackgroundGradient = () => {\r\n  if (props.weather === 'sunny') {\r\n    gradientBg = ctx.createLinearGradient(0, 0, 0, props.height)\r\n    gradientBg.addColorStop(0, 'rgba(135, 206, 250, 0.3)')\r\n    gradientBg.addColorStop(1, 'rgba(135, 206, 250, 0)')\r\n  } else if (props.weather === 'rainy') {\r\n    gradientBg = ctx.createLinearGradient(0, 0, 0, props.height)\r\n    gradientBg.addColorStop(0, 'rgba(105, 105, 105, 0.2)')\r\n    gradientBg.addColorStop(1, 'rgba(105, 105, 105, 0)')\r\n  } else if (props.weather === 'cloudy') {\r\n    gradientBg = ctx.createLinearGradient(0, 0, 0, props.height)\r\n    gradientBg.addColorStop(0, 'rgba(200, 200, 200, 0.2)')\r\n    gradientBg.addColorStop(1, 'rgba(200, 200, 200, 0)')\r\n  }\r\n}\r\n\r\n// 雨天效果\r\nconst initRain = () => {\r\n  // 雨滴数量和类型\r\n  const raindropsCount = 180\r\n  \r\n  for (let i = 0; i < raindropsCount; i++) {\r\n    const isSplash = Math.random() > 0.9\r\n    \r\n    if (isSplash) {\r\n      // 水花粒子\r\n      particles.push({\r\n        type: 'splash',\r\n        x: Math.random() * props.width,\r\n        y: props.height - 10,\r\n        radius: Math.random() * 3 + 1,\r\n        speedX: Math.random() * 3 - 1.5,\r\n        speedY: -Math.random() * 5 - 2,\r\n        gravity: 0.2,\r\n        life: Math.random() * 30 + 30,\r\n        opacity: 0.7\r\n      })\r\n    } else {\r\n      // 雨滴\r\n      particles.push({\r\n        type: 'raindrop',\r\n        x: Math.random() * props.width,\r\n        y: Math.random() * props.height - props.height,\r\n        length: Math.random() * 20 + 10,\r\n        speed: Math.random() * 12 + 8,\r\n        thickness: Math.random() * 1.8 + 0.5,\r\n        windOffset: Math.sin(Math.random() * Math.PI) * 0.5\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\n// 晴天效果\r\nconst initSun = () => {\r\n  // 太阳 - 尺寸减小30%\r\n  particles.push({\r\n    type: 'sun',\r\n    x: props.width * 0.75,\r\n    y: props.height * 0.25,\r\n    radius: props.width * 0.1, // 从0.15减小到0.1\r\n    rayLength: props.width * 0.08, // 从0.12减小到0.08\r\n    rayCount: 12,\r\n    rotation: 0,\r\n    rotationSpeed: 0.002,\r\n    pulse: 0,\r\n    pulseSpeed: 0.03\r\n  })\r\n  \r\n  // 光点\r\n  for (let i = 0; i < 40; i++) {\r\n    particles.push({\r\n      type: 'sparkle',\r\n      x: Math.random() * props.width,\r\n      y: Math.random() * props.height,\r\n      radius: Math.random() * 3 + 1,\r\n      alpha: Math.random() * 0.5 + 0.3,\r\n      speed: Math.random() * 0.5 + 0.2,\r\n      pulse: Math.random() * Math.PI * 2\r\n    })\r\n  }\r\n  \r\n  // 小云朵装饰\r\n  for (let i = 0; i < 3; i++) {\r\n    particles.push({\r\n      type: 'smallCloud',\r\n      x: Math.random() * props.width,\r\n      y: Math.random() * (props.height * 0.4),\r\n      radius: Math.random() * 20 + 15,\r\n      speed: Math.random() * 0.3 + 0.1,\r\n      opacity: Math.random() * 0.2 + 0.1\r\n    })\r\n  }\r\n}\r\n\r\n// 多云效果\r\nconst initClouds = () => {\r\n  // 大云朵\r\n  for (let i = 0; i < 5; i++) {\r\n    particles.push({\r\n      type: 'bigCloud',\r\n      x: Math.random() * props.width * 1.5 - props.width * 0.25,\r\n      y: Math.random() * (props.height * 0.6),\r\n      radius: Math.random() * 60 + 40,\r\n      speed: Math.random() * 0.4 + 0.1,\r\n      opacity: Math.random() * 0.5 + 0.4,\r\n      details: Math.floor(Math.random() * 3) + 3\r\n    })\r\n  }\r\n  \r\n  // 小云朵\r\n  for (let i = 0; i < 8; i++) {\r\n    particles.push({\r\n      type: 'smallCloud',\r\n      x: Math.random() * props.width * 1.5 - props.width * 0.25,\r\n      y: Math.random() * (props.height * 0.8),\r\n      radius: Math.random() * 30 + 15,\r\n      speed: Math.random() * 0.6 + 0.2,\r\n      opacity: Math.random() * 0.4 + 0.2\r\n    })\r\n  }\r\n}\r\n\r\n// 更新雨天粒子\r\nconst updateRain = () => {\r\n  ctx.clearRect(0, 0, props.width, props.height)\r\n  \r\n  // 绘制背景\r\n  ctx.fillStyle = gradientBg\r\n  ctx.fillRect(0, 0, props.width, props.height)\r\n  \r\n  particles.forEach((particle, index) => {\r\n    if (particle.type === 'raindrop') {\r\n      // 绘制雨滴\r\n      const rainAlpha = Math.min(1, particle.speed / 15)\r\n      ctx.strokeStyle = `rgba(174, 194, 224, ${rainAlpha})`\r\n      ctx.lineCap = 'round'\r\n      \r\n      ctx.beginPath()\r\n      ctx.lineWidth = particle.thickness\r\n      ctx.moveTo(particle.x, particle.y)\r\n      ctx.lineTo(\r\n        particle.x + particle.windOffset,\r\n        particle.y + particle.length\r\n      )\r\n      ctx.stroke()\r\n      \r\n      particle.y += particle.speed\r\n      particle.x += particle.windOffset * 0.5\r\n      \r\n      // 如果雨滴落到画布底部，有概率创建水花\r\n      if (particle.y > props.height) {\r\n        if (Math.random() > 0.7) {\r\n          // 创建水花效果\r\n          for (let i = 0; i < 3; i++) {\r\n            particles.push({\r\n              type: 'splash',\r\n              x: particle.x,\r\n              y: props.height - 5,\r\n              radius: Math.random() * 2 + 1,\r\n              speedX: Math.random() * 3 - 1.5,\r\n              speedY: -Math.random() * 3 - 2,\r\n              gravity: 0.15,\r\n              life: Math.random() * 20 + 10,\r\n              opacity: 0.7\r\n            })\r\n          }\r\n        }\r\n        // 重置雨滴位置\r\n        particle.y = -particle.length\r\n        particle.x = Math.random() * props.width\r\n        particle.windOffset = Math.sin(Math.random() * Math.PI) * 0.5\r\n      }\r\n    } else if (particle.type === 'splash') {\r\n      // 绘制水花\r\n      ctx.fillStyle = `rgba(174, 194, 224, ${particle.opacity})`\r\n      ctx.beginPath()\r\n      ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2)\r\n      ctx.fill()\r\n      \r\n      // 更新水花位置\r\n      particle.x += particle.speedX\r\n      particle.y += particle.speedY\r\n      particle.speedY += particle.gravity\r\n      particle.life--\r\n      particle.opacity = particle.life / 40\r\n      \r\n      // 移除消失的水花\r\n      if (particle.life <= 0) {\r\n        particles.splice(index, 1)\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 更新晴天粒子\r\nconst updateSun = () => {\r\n  ctx.clearRect(0, 0, props.width, props.height)\r\n  \r\n  // 绘制渐变背景\r\n  ctx.fillStyle = gradientBg\r\n  ctx.fillRect(0, 0, props.width, props.height)\r\n\r\n  particles.forEach((particle, index) => {\r\n    if (particle.type === 'sun') {\r\n      // 绘制太阳\r\n      const sun = particle\r\n      \r\n      // 脉动效果 - 只用于光芒和光晕效果，太阳本体大小保持稳定\r\n      sun.pulse += sun.pulseSpeed\r\n      // 将脉动因子设为常数1，不再变化太阳大小\r\n      const pulseFactor = 1\r\n      \r\n      // 外围光晕 - 调整为更温和的颜色\r\n      const outerGlow = ctx.createRadialGradient(\r\n        sun.x, sun.y, sun.radius * 0.5,\r\n        sun.x, sun.y, sun.radius * 3.5\r\n      )\r\n      outerGlow.addColorStop(0, 'rgba(255, 220, 130, 0.3)') \r\n      outerGlow.addColorStop(0.5, 'rgba(255, 210, 100, 0.15)') \r\n      outerGlow.addColorStop(1, 'rgba(255, 210, 100, 0)')\r\n      \r\n      ctx.fillStyle = outerGlow\r\n      ctx.beginPath()\r\n      ctx.arc(sun.x, sun.y, sun.radius * 3.5, 0, Math.PI * 2)\r\n      ctx.fill()\r\n      \r\n      // 中间光晕 - 光晕可以有轻微脉动\r\n      const glowPulse = 1 + Math.sin(sun.pulse * 0.5) * 0.05 // 非常轻微的脉动\r\n      \r\n      const middleGlow = ctx.createRadialGradient(\r\n        sun.x, sun.y, sun.radius * 0.2,\r\n        sun.x, sun.y, sun.radius * 2 * glowPulse\r\n      )\r\n      middleGlow.addColorStop(0, 'rgba(255, 220, 130, 0.7)') \r\n      middleGlow.addColorStop(0.5, 'rgba(255, 190, 80, 0.3)')\r\n      middleGlow.addColorStop(1, 'rgba(255, 180, 80, 0)')\r\n      \r\n      ctx.fillStyle = middleGlow\r\n      ctx.beginPath()\r\n      ctx.arc(sun.x, sun.y, sun.radius * 2 * glowPulse, 0, Math.PI * 2)\r\n      ctx.fill()\r\n      \r\n      // 太阳本体 - 调整为更柔和的黄色系，大小保持稳定\r\n      const sunCenter = sun.x - sun.radius * 0.3\r\n      const sunCenterY = sun.y - sun.radius * 0.3\r\n      \r\n      const sunGradient = ctx.createRadialGradient(\r\n        sunCenter, sunCenterY, 0,\r\n        sun.x, sun.y, sun.radius\r\n      )\r\n      sunGradient.addColorStop(0, '#FFF8E1') // 更柔和的乳白色中心\r\n      sunGradient.addColorStop(0.4, '#FFECB3') // 淡黄色\r\n      sunGradient.addColorStop(0.8, '#FFD54F') // 温和的黄色\r\n      sunGradient.addColorStop(1, '#FFB300') // 柔和的琥珀色边缘\r\n      \r\n      ctx.fillStyle = sunGradient\r\n      ctx.beginPath()\r\n      ctx.arc(sun.x, sun.y, sun.radius, 0, Math.PI * 2)\r\n      ctx.fill()\r\n      \r\n      // 太阳光芒 - 光芒长度可以有变化，但起点固定\r\n      ctx.strokeStyle = 'rgba(255, 213, 79, 0.7)' // 更柔和的黄色\r\n      \r\n      for (let i = 0; i < sun.rayCount; i++) {\r\n        const angle = (i * (Math.PI * 2) / sun.rayCount) + sun.rotation\r\n        // 光芒长度随时间变化，但不影响太阳大小\r\n        const rayLength = sun.rayLength * (0.85 + Math.sin(sun.pulse * 0.8 + i * 0.3) * 0.15)\r\n        \r\n        const startX = sun.x + Math.cos(angle) * (sun.radius + 2)\r\n        const startY = sun.y + Math.sin(angle) * (sun.radius + 2)\r\n        const endX = sun.x + Math.cos(angle) * (sun.radius + rayLength)\r\n        const endY = sun.y + Math.sin(angle) * (sun.radius + rayLength)\r\n        \r\n        ctx.lineWidth = 2 + Math.sin(sun.pulse + i * 0.5) * 1.5 // 光芒宽度变化\r\n        ctx.globalAlpha = 0.7 + Math.sin(sun.pulse + i * 0.3) * 0.2\r\n        \r\n        ctx.beginPath()\r\n        ctx.moveTo(startX, startY)\r\n        ctx.lineTo(endX, endY)\r\n        ctx.stroke()\r\n      }\r\n      \r\n      // 次要短光芒 - 同样只有长度变化，不影响太阳本体\r\n      ctx.strokeStyle = 'rgba(255, 213, 79, 0.5)' // 更柔和的黄色\r\n      ctx.lineWidth = 1.5\r\n      \r\n      for (let i = 0; i < sun.rayCount * 2; i++) {\r\n        const angle = (i * (Math.PI * 2) / (sun.rayCount * 2)) + sun.rotation * 1.5\r\n        const rayLength = sun.rayLength * 0.4 * (0.7 + Math.sin(sun.pulse * 1.2 + i * 0.5) * 0.3)\r\n        \r\n        const startX = sun.x + Math.cos(angle) * (sun.radius + 2)\r\n        const startY = sun.y + Math.sin(angle) * (sun.radius + 2)\r\n        const endX = sun.x + Math.cos(angle) * (sun.radius + rayLength)\r\n        const endY = sun.y + Math.sin(angle) * (sun.radius + rayLength)\r\n        \r\n        ctx.globalAlpha = 0.2 + Math.cos(sun.pulse * 0.8 + i) * 0.2\r\n        \r\n        ctx.beginPath()\r\n        ctx.moveTo(startX, startY)\r\n        ctx.lineTo(endX, endY)\r\n        ctx.stroke()\r\n      }\r\n      \r\n      // 三角形光晕 - 位置可以轻微变化，但基于固定太阳半径\r\n      ctx.fillStyle = 'rgba(255, 230, 160, 0.3)' // 更柔和的颜色\r\n      \r\n      for (let i = 0; i < 8; i++) {\r\n        const angle = (i * (Math.PI * 2) / 8) + sun.rotation * 0.7\r\n        const distance = sun.radius * (1.6 + Math.sin(sun.pulse * 0.9) * 0.15)\r\n        \r\n        const point1X = sun.x + Math.cos(angle) * distance\r\n        const point1Y = sun.y + Math.sin(angle) * distance\r\n        \r\n        const point2X = sun.x + Math.cos(angle + 0.2) * (distance * 0.7)\r\n        const point2Y = sun.y + Math.sin(angle + 0.2) * (distance * 0.7)\r\n        \r\n        const point3X = sun.x + Math.cos(angle - 0.2) * (distance * 0.7)\r\n        const point3Y = sun.y + Math.sin(angle - 0.2) * (distance * 0.7)\r\n        \r\n        ctx.globalAlpha = 0.15 + Math.sin(sun.pulse + i * 0.7) * 0.1 // 透明度变化\r\n        \r\n        ctx.beginPath()\r\n        ctx.moveTo(point1X, point1Y)\r\n        ctx.lineTo(point2X, point2Y)\r\n        ctx.lineTo(point3X, point3Y)\r\n        ctx.closePath()\r\n        ctx.fill()\r\n      }\r\n      \r\n      // 太阳表面光斑 - 位置变化，大小保持稳定\r\n      ctx.fillStyle = 'rgba(255, 250, 230, 0.7)' // 更柔和的亮点\r\n      \r\n      for (let i = 0; i < 3; i++) {\r\n        const spotAngle = sun.rotation * 2 + i * Math.PI / 2.5\r\n        const spotDistance = sun.radius * 0.5 * Math.random()\r\n        const spotX = sun.x + Math.cos(spotAngle) * spotDistance\r\n        const spotY = sun.y + Math.sin(spotAngle) * spotDistance\r\n        const spotSize = sun.radius * (0.04 + Math.random() * 0.06)\r\n        \r\n        ctx.globalAlpha = 0.2 + Math.random() * 0.3\r\n        \r\n        ctx.beginPath()\r\n        ctx.arc(spotX, spotY, spotSize, 0, Math.PI * 2)\r\n        ctx.fill()\r\n      }\r\n      \r\n      // 重置全局透明度\r\n      ctx.globalAlpha = 1\r\n      \r\n      // 更新太阳旋转\r\n      sun.rotation += sun.rotationSpeed * (1 + Math.sin(sun.pulse * 0.3) * 0.1)\r\n    } else if (particle.type === 'sparkle') {\r\n      // 更新漂浮光点 - 增强星光闪烁效果\r\n      const sparkle = particle\r\n      sparkle.pulse += 0.08 + Math.random() * 0.02\r\n      \r\n      // 更有变化的闪烁\r\n      const alphaFactor = 0.5 + Math.sin(sparkle.pulse) * 0.5\r\n      \r\n      // 不同亮度的星光\r\n      if (Math.random() > 0.97) {\r\n        // 偶尔出现更亮的闪烁\r\n        ctx.fillStyle = `rgba(255, 255, 250, ${sparkle.alpha * 1.5})`\r\n        ctx.shadowColor = 'rgba(255, 255, 200, 0.8)'\r\n        ctx.shadowBlur = 5\r\n      } else {\r\n        ctx.fillStyle = `rgba(255, 255, 220, ${sparkle.alpha * alphaFactor})`\r\n        ctx.shadowBlur = 0\r\n      }\r\n      \r\n      ctx.beginPath()\r\n      ctx.arc(sparkle.x, sparkle.y, sparkle.radius * (0.8 + alphaFactor * 0.4), 0, Math.PI * 2)\r\n      ctx.fill()\r\n      \r\n      // 重置阴影\r\n      ctx.shadowBlur = 0\r\n      \r\n      // 光点移动路径更自然（轻微的正弦波动）\r\n      sparkle.y += sparkle.speed\r\n      sparkle.x += Math.sin(sparkle.pulse * 0.2) * 0.3\r\n      \r\n      // 重置到顶部\r\n      if (sparkle.y > props.height) {\r\n        sparkle.y = 0\r\n        sparkle.x = Math.random() * props.width\r\n      }\r\n    } else if (particle.type === 'smallCloud') {\r\n      // 绘制小云朵\r\n      drawCloud(particle.x, particle.y, particle.radius, particle.opacity)\r\n      \r\n      particle.x += particle.speed\r\n      \r\n      // 当云移出画布时，重置位置\r\n      if (particle.x > props.width + particle.radius) {\r\n        particle.x = -particle.radius * 2\r\n        particle.y = Math.random() * (props.height / 2)\r\n      }\r\n    }\r\n  })\r\n}\r\n\r\n// 更新多云粒子\r\nconst updateClouds = () => {\r\n  ctx.clearRect(0, 0, props.width, props.height)\r\n  \r\n  // 绘制渐变背景\r\n  ctx.fillStyle = gradientBg\r\n  ctx.fillRect(0, 0, props.width, props.height)\r\n  \r\n  // 按大小排序云朵绘制（小的在前，大的在后）\r\n  particles.sort((a, b) => a.radius - b.radius)\r\n  \r\n  particles.forEach(cloud => {\r\n    if (cloud.type === 'bigCloud') {\r\n      // 绘制大云朵\r\n      drawDetailedCloud(cloud.x, cloud.y, cloud.radius, cloud.opacity, cloud.details)\r\n    } else {\r\n      // 绘制小云朵\r\n      drawCloud(cloud.x, cloud.y, cloud.radius, cloud.opacity)\r\n    }\r\n    \r\n    cloud.x += cloud.speed\r\n    \r\n    // 当云移出画布时，重置位置\r\n    if (cloud.x > props.width + cloud.radius) {\r\n      cloud.x = -cloud.radius * 2\r\n      cloud.y = Math.random() * (props.height * 0.6)\r\n      // 随机调整下一次的高度\r\n      cloud.radius = cloud.type === 'bigCloud' \r\n        ? Math.random() * 60 + 40 \r\n        : Math.random() * 30 + 15\r\n    }\r\n  })\r\n}\r\n\r\n// 绘制基本云朵\r\nconst drawCloud = (x, y, radius, opacity) => {\r\n  ctx.fillStyle = `rgba(220, 220, 220, ${opacity})`\r\n  \r\n  // 绘制云朵（由多个圆形组成）\r\n  ctx.beginPath()\r\n  ctx.arc(x, y, radius * 0.5, 0, Math.PI * 2)\r\n  ctx.arc(x + radius * 0.35, y - radius * 0.2, radius * 0.4, 0, Math.PI * 2)\r\n  ctx.arc(x + radius * 0.75, y, radius * 0.45, 0, Math.PI * 2)\r\n  ctx.arc(x + radius * 0.4, y + radius * 0.2, radius * 0.35, 0, Math.PI * 2)\r\n  ctx.fill()\r\n  \r\n  // 云朵亮边\r\n  ctx.fillStyle = `rgba(250, 250, 250, ${opacity * 0.6})`\r\n  ctx.beginPath()\r\n  ctx.arc(x, y - radius * 0.12, radius * 0.35, 0, Math.PI * 2)\r\n  ctx.arc(x + radius * 0.35, y - radius * 0.3, radius * 0.25, 0, Math.PI * 2)\r\n  ctx.fill()\r\n}\r\n\r\n// 绘制详细云朵\r\nconst drawDetailedCloud = (x, y, radius, opacity, details) => {\r\n  // 绘制云朵阴影\r\n  ctx.fillStyle = `rgba(180, 180, 180, ${opacity * 0.5})`\r\n  ctx.beginPath()\r\n  ctx.arc(x + 5, y + 5, radius * 0.6, 0, Math.PI * 2)\r\n  ctx.arc(x + radius * 0.35 + 5, y - radius * 0.2 + 5, radius * 0.5, 0, Math.PI * 2)\r\n  ctx.arc(x + radius * 0.75 + 5, y + 5, radius * 0.55, 0, Math.PI * 2)\r\n  ctx.fill()\r\n  \r\n  // 绘制主体云朵\r\n  ctx.fillStyle = `rgba(220, 220, 220, ${opacity})`\r\n  ctx.beginPath()\r\n  ctx.arc(x, y, radius * 0.6, 0, Math.PI * 2)\r\n  ctx.arc(x + radius * 0.35, y - radius * 0.2, radius * 0.5, 0, Math.PI * 2)\r\n  ctx.arc(x + radius * 0.75, y, radius * 0.55, 0, Math.PI * 2)\r\n  ctx.arc(x + radius * 0.4, y + radius * 0.3, radius * 0.45, 0, Math.PI * 2)\r\n  \r\n  // 添加额外的细节\r\n  for (let i = 0; i < details; i++) {\r\n    const offsetX = Math.cos(i * Math.PI / 4) * radius * 0.6\r\n    const offsetY = Math.sin(i * Math.PI / 4) * radius * 0.4\r\n    ctx.arc(x + offsetX, y + offsetY, radius * 0.3, 0, Math.PI * 2)\r\n  }\r\n  \r\n  ctx.fill()\r\n  \r\n  // 绘制云朵亮边\r\n  ctx.fillStyle = `rgba(250, 250, 250, ${opacity * 0.7})`\r\n  ctx.beginPath()\r\n  ctx.arc(x, y - radius * 0.15, radius * 0.4, 0, Math.PI * 2)\r\n  ctx.arc(x + radius * 0.35, y - radius * 0.35, radius * 0.3, 0, Math.PI * 2)\r\n  ctx.fill()\r\n}\r\n\r\n// 动画循环\r\nconst animate = () => {\r\n  if (props.weather === 'rainy') {\r\n    updateRain()\r\n  } else if (props.weather === 'sunny') {\r\n    updateSun()\r\n  } else if (props.weather === 'cloudy') {\r\n    updateClouds()\r\n  }\r\n  \r\n  animationFrameId = requestAnimationFrame(animate)\r\n}\r\n\r\n// 开始动画\r\nconst startAnimation = () => {\r\n  if (animationFrameId) {\r\n    cancelAnimationFrame(animationFrameId)\r\n  }\r\n  animate()\r\n}\r\n\r\n// 监听天气变化\r\nwatch(() => props.weather, (newWeather) => {\r\n  if (animationFrameId) {\r\n    cancelAnimationFrame(animationFrameId)\r\n  }\r\n  particles = []\r\n  \r\n  // 更新背景渐变\r\n  createBackgroundGradient()\r\n  \r\n  if (newWeather === 'rainy') {\r\n    initRain()\r\n  } else if (newWeather === 'sunny') {\r\n    initSun()\r\n  } else if (newWeather === 'cloudy') {\r\n    initClouds()\r\n  }\r\n  \r\n  startAnimation()\r\n})\r\n\r\n// 组件挂载时初始化\r\nonMounted(() => {\r\n  initCanvas()\r\n  \r\n  // 监听窗口大小变化，重新调整画布\r\n  window.addEventListener('resize', initCanvas)\r\n})\r\n\r\n// 组件卸载时清理\r\nonUnmounted(() => {\r\n  if (animationFrameId) {\r\n    cancelAnimationFrame(animationFrameId)\r\n  }\r\n  window.removeEventListener('resize', initCanvas)\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.weather-canvas {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 100;\r\n  pointer-events: none; /* 允许点击穿透到下层元素 */\r\n}\r\n</style> ","import script from \"./WeatherCanvas.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WeatherCanvas.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./WeatherCanvas.vue?vue&type=style&index=0&id=5cceed66&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5cceed66\"]])\n\nexport default __exports__"],"names":["useTaskStore","defineStore","tasks","ref","systemTasks","completedTasks","loading","pendingTasks","computed","value","filter","task","completed","fetchTasks","async","response","taskApi","getTasks","error","ElMessage","fetchSystemTasks","getSystemTasks","addTask","createTask","title","description","deadline","important","push","success","completeTask","id","find","t","_id","unshift","completedAt","Date","toISOString","plantStore","usePlantStore","plants","length","mainPlant","p","isMainPlant","plantId","expAmount","gainExperience","completeSystemTask","currentPlant","warning","index","findIndex","rewards","experience","status","removeTask","deleteTask","console","removeCompletedTask","updateTask","updatedTask","toggleTaskImportance","__exports__","props","__props","canvas","ctx","animationFrameId","particles","gradientBg","initCanvas","dpr","window","devicePixelRatio","getContext","width","height","scale","createBackgroundGradient","weather","initRain","initSun","initClouds","startAnimation","createLinearGradient","addColorStop","raindropsCount","i","isSplash","Math","random","type","x","y","radius","speedX","speedY","gravity","life","opacity","speed","thickness","windOffset","sin","PI","rayLength","rayCount","rotation","rotationSpeed","pulse","pulseSpeed","alpha","details","floor","updateRain","clearRect","fillStyle","fillRect","forEach","particle","rainAlpha","min","strokeStyle","lineCap","beginPath","lineWidth","moveTo","lineTo","stroke","arc","fill","splice","updateSun","sun","outerGlow","createRadialGradient","glowPulse","middleGlow","sunCenter","sunCenterY","sunGradient","angle","startX","cos","startY","endX","endY","globalAlpha","distance","point1X","point1Y","point2X","point2Y","point3X","point3Y","closePath","spotAngle","spotDistance","spotX","spotY","spotSize","sparkle","alphaFactor","shadowColor","shadowBlur","drawCloud","updateClouds","sort","a","b","cloud","drawDetailedCloud","offsetX","offsetY","animate","requestAnimationFrame","cancelAnimationFrame","watch","newWeather","onMounted","addEventListener","onUnmounted","removeEventListener"],"sourceRoot":""}
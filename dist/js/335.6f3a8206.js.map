{"version":3,"file":"js/335.6f3a8206.js","mappings":"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","sources":["webpack://zhiyuxinsheng/./src/stores/task.js","webpack://zhiyuxinsheng/./src/views/Task.vue","webpack://zhiyuxinsheng/./node_modules/date-fns/parseISO.js","webpack://zhiyuxinsheng/./src/views/Task.vue?5a2d"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref, computed } from 'vue'\nimport { usePlantStore } from './plant'\nimport { taskApi } from '../services/api'\nimport { ElMessage } from 'element-plus'\n\nexport const useTaskStore = defineStore('task', () => {\n  // 所有任务数据\n  const tasks = ref([])\n  const systemTasks = ref([])\n  const completedTasks = ref([])\n  const loading = ref(false)\n  \n  // 计算属性：待完成任务\n  const pendingTasks = computed(() => tasks.value.filter(task => !task.completed))\n  \n  // 获取所有任务\n  const fetchTasks = async () => {\n    try {\n      loading.value = true\n      const response = await taskApi.getTasks()\n      tasks.value = response.tasks.filter(task => !task.completed)\n      completedTasks.value = response.tasks.filter(task => task.completed)\n    } catch (error) {\n      ElMessage.error('获取任务列表失败')\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 获取系统任务\n  const fetchSystemTasks = async () => {\n    try {\n      loading.value = true\n      const response = await taskApi.getSystemTasks()\n      systemTasks.value = response.tasks\n    } catch (error) {\n      ElMessage.error('获取系统任务失败')\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 添加任务\n  const addTask = async (task) => {\n    try {\n      const response = await taskApi.createTask({\n        title: task.title,\n        description: task.description || '',\n        deadline: task.deadline || '',\n        important: task.important || false\n      })\n      \n      // 添加到本地状态\n      tasks.value.push(response.task)\n      \n      // 不再给创建任务增加经验值\n      ElMessage.success('任务创建成功')\n    } catch (error) {\n      ElMessage.error('创建任务失败')\n    }\n  }\n  \n  // 完成任务\n  const completeTask = async (id) => {\n    try {\n      const response = await taskApi.completeTask(id)\n      \n      // 从任务列表中移除\n      const task = tasks.value.find(t => t._id === id)\n      if (task) {\n        // 将任务移动到已完成列表\n        completedTasks.value.unshift({\n          ...task,\n          completed: true,\n          completedAt: new Date().toISOString()\n        })\n        // 从待办任务中移除\n        tasks.value = tasks.value.filter(t => t._id !== id)\n      }\n      \n      // 增加植物经验值\n      const plantStore = usePlantStore()\n      if (plantStore.plants && plantStore.plants.length > 0) {\n        // 获取主植物\n        const mainPlant = plantStore.plants.find(p => p.isMainPlant)\n        if (mainPlant) {\n          const plantId = mainPlant._id || mainPlant.id\n          if (plantId) {\n            // 根据任务是否重要，增加不同的经验值\n            // 普通任务25点，重要任务50点\n            const expAmount = task && task.important ? 50 : 25;\n            await plantStore.gainExperience(plantId, expAmount)\n            \n            // 显示具体获得的经验值\n            ElMessage.success(`任务已完成，获得 ${expAmount} 点经验值！`)\n          }\n        }\n      } else {\n        ElMessage.success('任务已完成')\n      }\n    } catch (error) {\n      ElMessage.error('完成任务失败')\n    }\n  }\n  \n  // 完成系统任务\n  const completeSystemTask = async (id) => {\n    try {\n      const plantStore = usePlantStore()\n      if (!plantStore.currentPlant) {\n        ElMessage.warning('请先添加一个植物')\n        return false\n      }\n      \n      const response = await taskApi.completeSystemTask(id)\n      \n      // 更新任务状态\n      const index = systemTasks.value.findIndex(t => t._id === id)\n      if (index !== -1) {\n        systemTasks.value[index].completed = true\n      }\n      \n      // 如果后端已经处理了经验值奖励，则显示相应的提示\n      if (response.rewards) {\n        ElMessage.success(`完成任务获得 ${response.rewards.experience} 点经验`)\n      } \n      // 如果后端没有处理经验值奖励，则在前端处理\n      else {\n        // 获取主植物\n        const plantId = plantStore.currentPlant._id || plantStore.currentPlant.id\n        if (plantId) {\n          // 系统任务固定增加35点经验值\n          const expAmount = 35;\n          await plantStore.gainExperience(plantId, expAmount)\n          ElMessage.success(`完成系统任务获得 ${expAmount} 点经验值`)\n        }\n      }\n      \n      return true\n    } catch (error) {\n      if (error.response?.status === 400) {\n        ElMessage.warning('今天已经完成过此任务')\n      } else {\n        ElMessage.error('完成系统任务失败')\n      }\n      return false\n    }\n  }\n  \n  // 移除任务\n  const removeTask = async (id) => {\n    try {\n      // 检查ID是否有效\n      if (!id) {\n        ElMessage.error('任务ID无效，无法删除')\n        return\n      }\n      \n      await taskApi.deleteTask(id)\n      tasks.value = tasks.value.filter(task => task._id !== id)\n      ElMessage.success('任务已删除')\n    } catch (error) {\n      console.error('删除任务失败:', error)\n      ElMessage.error('删除任务失败')\n    }\n  }\n  \n  // 删除已完成任务\n  const removeCompletedTask = async (id) => {\n    try {\n      // 检查ID是否有效\n      if (!id) {\n        ElMessage.error('任务ID无效，无法删除')\n        return\n      }\n      \n      await taskApi.deleteTask(id)\n      completedTasks.value = completedTasks.value.filter(task => task._id !== id)\n      ElMessage.success('任务已删除')\n    } catch (error) {\n      console.error('删除任务失败:', error)\n      ElMessage.error('删除任务失败')\n    }\n  }\n  \n  // 更新任务\n  const updateTask = async (updatedTask) => {\n    try {\n      const { _id, title, description, deadline, important } = updatedTask\n      \n      const response = await taskApi.updateTask(_id, {\n        title,\n        description,\n        deadline,\n        important\n      })\n      \n      // 更新本地状态\n      const index = tasks.value.findIndex(t => t._id === _id)\n      if (index !== -1) {\n        tasks.value[index] = response.task\n      }\n      \n      ElMessage.success('任务已更新')\n    } catch (error) {\n      ElMessage.error('更新任务失败')\n    }\n  }\n  \n  // 切换任务重要性\n  const toggleTaskImportance = async (id) => {\n    const task = tasks.value.find(t => t._id === id)\n    if (task) {\n      await updateTask({\n        ...task,\n        important: !task.important\n      })\n    }\n  }\n\n  return {\n    tasks,\n    systemTasks,\n    completedTasks,\n    pendingTasks,\n    loading,\n    \n    fetchTasks,\n    fetchSystemTasks,\n    addTask,\n    completeTask,\n    completeSystemTask,\n    removeTask,\n    removeCompletedTask,\n    updateTask,\n    toggleTaskImportance\n  }\n}) ","<template>\r\n  <div class=\"task-page\">\r\n    <div class=\"container\">\r\n      <div class=\"task-header\">\r\n        <h1>任务管理</h1>\r\n        <div class=\"task-actions\">\r\n          <el-button type=\"primary\" @click=\"openTaskForm\">\r\n            <el-icon><Plus /></el-icon> 新建任务\r\n          </el-button>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 系统任务 -->\r\n      <div class=\"system-tasks-card card\">\r\n        <div class=\"card-header\">\r\n          <h2>每日任务</h2>\r\n          <div class=\"task-info\">\r\n            完成任务可以获得经验值，帮助植物成长\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"tasks-list system-tasks\">\r\n          <div\r\n            v-for=\"task in taskStore.systemTasks\"\r\n            :key=\"task._id\"\r\n            class=\"task-item\"\r\n            :class=\"{ 'completed': task.completed }\"\r\n          >\r\n            <div class=\"task-icon\">{{ task.icon }}</div>\r\n            <div class=\"task-content\">\r\n              <div class=\"task-title\">{{ task.title }}</div>\r\n              <div class=\"task-description\">{{ task.description }}</div>\r\n            </div>\r\n            <div class=\"task-actions\">\r\n              <el-button\r\n                :type=\"task.completed ? 'success' : 'primary'\"\r\n                :disabled=\"task.completed\"\r\n                @click=\"completeSystemTask(task._id)\"\r\n              >\r\n                {{ task.completed ? '已完成' : '完成' }}\r\n              </el-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 用户任务 -->\r\n      <div class=\"user-tasks-card card\">\r\n        <div class=\"card-header\">\r\n          <h2>我的任务</h2>\r\n          <div class=\"task-status\">\r\n            <span>{{ taskStore.pendingTasks.length }} 个待完成</span>\r\n          </div>\r\n        </div>\r\n        \r\n        <div v-if=\"taskStore.pendingTasks.length === 0\" class=\"empty-tasks\">\r\n          <el-empty description=\"暂无任务，点击右上角添加新任务吧！\" />\r\n        </div>\r\n        \r\n        <div v-else class=\"tasks-list user-tasks\">\r\n          <div\r\n            v-for=\"task in taskStore.pendingTasks\"\r\n            :key=\"task._id\"\r\n            class=\"task-item\"\r\n            :class=\"{ 'important': task.important }\"\r\n          >\r\n            <div class=\"task-content\">\r\n              <div class=\"task-title\">{{ task.title }}</div>\r\n              <div class=\"task-description\">{{ task.description }}</div>\r\n              <div class=\"task-meta\">\r\n                <span v-if=\"task.deadline\" class=\"task-deadline\">\r\n                  <el-icon><Clock /></el-icon>\r\n                  {{ formatDate(task.deadline) }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div class=\"task-actions\">\r\n              <el-button-group>\r\n                <el-button\r\n                  type=\"primary\"\r\n                  @click=\"completeUserTask(task._id)\"\r\n                >\r\n                  完成\r\n                </el-button>\r\n                <el-button\r\n                  type=\"default\"\r\n                  @click=\"editTask(task)\"\r\n                >\r\n                  编辑\r\n                </el-button>\r\n                <el-button\r\n                  type=\"danger\"\r\n                  @click=\"deleteTask(task._id)\"\r\n                >\r\n                  删除\r\n                </el-button>\r\n              </el-button-group>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n      <!-- 已完成任务 -->\r\n      <div class=\"completed-tasks-card card\" v-if=\"taskStore.completedTasks.length > 0\">\r\n        <div class=\"card-header\">\r\n          <h2>已完成任务</h2>\r\n          <div class=\"completed-count\">\r\n            {{ taskStore.completedTasks.length }} 个任务\r\n          </div>\r\n        </div>\r\n        \r\n        <div class=\"tasks-list completed-tasks\">\r\n          <div\r\n            v-for=\"task in taskStore.completedTasks\"\r\n            :key=\"task._id\"\r\n            class=\"task-item completed\"\r\n          >\r\n            <div class=\"task-content\">\r\n              <div class=\"task-title\">{{ task.title }}</div>\r\n              <div class=\"task-meta\">\r\n                <span class=\"completed-at\">\r\n                  完成于 {{ formatDate(task.completedAt) }}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <!-- 任务表单对话框 -->\r\n    <el-dialog\r\n      v-model=\"showTaskForm\"\r\n      :title=\"editingTask ? '编辑任务' : '新建任务'\"\r\n      width=\"500px\"\r\n    >\r\n      <el-form :model=\"taskForm\" label-position=\"top\">\r\n        <el-form-item label=\"任务标题\" required>\r\n          <el-input v-model=\"taskForm.title\" placeholder=\"输入任务标题\" />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"任务描述\">\r\n          <el-input\r\n            v-model=\"taskForm.description\"\r\n            type=\"textarea\"\r\n            :rows=\"3\"\r\n            placeholder=\"输入任务描述\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item label=\"截止日期\">\r\n          <el-date-picker\r\n            v-model=\"taskForm.deadline\"\r\n            type=\"datetime\"\r\n            placeholder=\"选择截止日期\"\r\n            value-format=\"YYYY-MM-DDTHH:mm:ss\"\r\n            format=\"YYYY-MM-DD HH:mm\"\r\n            style=\"width: 100%\"\r\n          />\r\n        </el-form-item>\r\n        \r\n        <el-form-item>\r\n          <el-checkbox v-model=\"taskForm.important\">标记为重要</el-checkbox>\r\n        </el-form-item>\r\n      </el-form>\r\n      \r\n      <template #footer>\r\n        <span class=\"dialog-footer\">\r\n          <el-button @click=\"showTaskForm = false\">取消</el-button>\r\n          <el-button type=\"primary\" @click=\"saveTask\">\r\n            保存\r\n          </el-button>\r\n        </span>\r\n      </template>\r\n    </el-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { ref, reactive, onMounted } from 'vue'\r\nimport { useTaskStore } from '../stores/task'\r\nimport { usePlantStore } from '../stores/plant'\r\nimport { ElMessageBox } from 'element-plus'\r\nimport { format, parseISO } from 'date-fns'\r\nimport { Plus, Clock } from '@element-plus/icons-vue'\r\n\r\nexport default {\r\n  name: 'TaskPage',\r\n  components: {\r\n    Plus,\r\n    Clock\r\n  },\r\n  setup() {\r\n    const taskStore = useTaskStore()\r\n    const plantStore = usePlantStore()\r\n    \r\n    const showTaskForm = ref(false)\r\n    const editingTask = ref(null)\r\n    \r\n    const taskForm = reactive({\r\n      id: null,\r\n      title: '',\r\n      description: '',\r\n      deadline: '',\r\n      important: false\r\n    })\r\n    \r\n    // 获取任务数据\r\n    onMounted(async () => {\r\n      console.log('任务页面加载')\r\n      // 如果植物商店没有加载，获取植物\r\n      if (!plantStore.currentPlant) {\r\n        await plantStore.fetchPlants()\r\n      }\r\n      \r\n      // 获取任务和系统任务\r\n      try {\r\n      await Promise.all([\r\n        taskStore.fetchTasks(),\r\n        taskStore.fetchSystemTasks()\r\n      ])\r\n        console.log('任务数据加载成功')\r\n      } catch (error) {\r\n        console.error('加载任务数据失败:', error)\r\n      }\r\n    })\r\n    \r\n    // 打开任务表单\r\n    const openTaskForm = () => {\r\n      resetTaskForm()\r\n      showTaskForm.value = true\r\n    }\r\n    \r\n    // 重置表单\r\n    const resetTaskForm = () => {\r\n      taskForm.id = null\r\n      taskForm.title = ''\r\n      taskForm.description = ''\r\n      taskForm.deadline = ''\r\n      taskForm.important = false\r\n      editingTask.value = null\r\n    }\r\n    \r\n    // 完成系统任务\r\n    const completeSystemTask = async (taskId) => {\r\n      // 确保有当前植物\r\n      if (!plantStore.currentPlant) {\r\n        ElMessageBox.alert('请先在花园中添加一个植物', '提示', {\r\n          confirmButtonText: '确定'\r\n        })\r\n        return\r\n      }\r\n      \r\n      // 完成任务\r\n      await taskStore.completeSystemTask(taskId)\r\n    }\r\n    \r\n    // 完成用户任务\r\n    const completeUserTask = async (taskId) => {\r\n      await taskStore.completeTask(taskId)\r\n    }\r\n    \r\n    // 编辑任务\r\n    const editTask = (task) => {\r\n      editingTask.value = task\r\n      taskForm.id = task._id\r\n      taskForm.title = task.title\r\n      taskForm.description = task.description || ''\r\n      taskForm.deadline = task.deadline || ''\r\n      taskForm.important = task.important || false\r\n      showTaskForm.value = true\r\n    }\r\n    \r\n    // 删除任务\r\n    const deleteTask = (taskId) => {\r\n      ElMessageBox.confirm(\r\n        '确定要删除这个任务吗？',\r\n        '删除任务',\r\n        {\r\n          confirmButtonText: '确定',\r\n          cancelButtonText: '取消',\r\n          type: 'warning'\r\n        }\r\n      ).then(() => {\r\n        taskStore.removeTask(taskId)\r\n      }).catch(() => {})\r\n    }\r\n    \r\n    // 保存任务\r\n    const saveTask = () => {\r\n      if (!taskForm.title.trim()) {\r\n        ElMessageBox.alert('请输入任务标题', '提示', {\r\n          confirmButtonText: '确定'\r\n        })\r\n        return\r\n      }\r\n      \r\n      if (editingTask.value) {\r\n        // 更新任务\r\n        taskStore.updateTask({\r\n          _id: taskForm.id,\r\n          title: taskForm.title,\r\n          description: taskForm.description,\r\n          deadline: taskForm.deadline,\r\n          important: taskForm.important\r\n        })\r\n      } else {\r\n        // 添加新任务\r\n        taskStore.addTask({\r\n          title: taskForm.title,\r\n          description: taskForm.description,\r\n          deadline: taskForm.deadline,\r\n          important: taskForm.important\r\n        })\r\n      }\r\n      \r\n      showTaskForm.value = false\r\n      resetTaskForm()\r\n    }\r\n    \r\n    // 格式化日期\r\n    const formatDate = (dateString) => {\r\n      if (!dateString) return ''\r\n      \r\n      try {\r\n        return format(parseISO(dateString), 'yyyy-MM-dd HH:mm')\r\n      } catch (e) {\r\n        return dateString\r\n      }\r\n    }\r\n    \r\n    return {\r\n      taskStore,\r\n      plantStore,\r\n      showTaskForm,\r\n      taskForm,\r\n      editingTask,\r\n      \r\n      openTaskForm,\r\n      completeSystemTask,\r\n      completeUserTask,\r\n      editTask,\r\n      deleteTask,\r\n      saveTask,\r\n      formatDate\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n.task-page {\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.container {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  gap: 20px;\r\n}\r\n\r\n.task-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.task-header h1 {\r\n  margin: 0;\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n}\r\n\r\n.card {\r\n  background-color: white;\r\n  border-radius: 8px;\r\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\r\n  padding: 20px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.card-header {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.card-header h2 {\r\n  margin: 0;\r\n  font-size: 18px;\r\n  font-weight: 600;\r\n}\r\n\r\n.tasks-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 12px;\r\n}\r\n\r\n.task-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  border-radius: 8px;\r\n  background-color: #f9f9f9;\r\n  transition: all 0.3s;\r\n}\r\n\r\n.task-item:hover {\r\n  transform: translateY(-2px);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.task-item.important {\r\n  border-left: 4px solid var(--el-color-danger);\r\n}\r\n\r\n.task-item.completed {\r\n  opacity: 0.7;\r\n  background-color: #f5f7fa;\r\n}\r\n\r\n.task-icon {\r\n  font-size: 24px;\r\n  margin-right: 15px;\r\n}\r\n\r\n.task-content {\r\n  flex: 1;\r\n}\r\n\r\n.task-title {\r\n  font-weight: 500;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.task-description {\r\n  font-size: 14px;\r\n  color: #606266;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.task-meta {\r\n  display: flex;\r\n  gap: 15px;\r\n  font-size: 12px;\r\n  color: #909399;\r\n}\r\n\r\n.task-deadline {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 5px;\r\n}\r\n\r\n.empty-tasks {\r\n  padding: 30px 0;\r\n}\r\n\r\n.system-tasks .task-item {\r\n  background-color: rgba(var(--el-color-primary-rgb), 0.05);\r\n}\r\n\r\n.completed-tasks .task-item {\r\n  padding: 12px 15px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .task-item {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n  \r\n  .task-actions {\r\n    margin-top: 10px;\r\n    align-self: flex-end;\r\n  }\r\n}\r\n</style> ","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n} from \"./constants.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const invalidDate = () => constructFrom(options?.in, NaN);\n\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(+date)) return invalidDate();\n\n  const timestamp = +date;\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) return invalidDate();\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) return invalidDate();\n  } else {\n    const tmpDate = new Date(timestamp + time);\n    const result = toDate(0, options?.in);\n    result.setFullYear(\n      tmpDate.getUTCFullYear(),\n      tmpDate.getUTCMonth(),\n      tmpDate.getUTCDate(),\n    );\n    result.setHours(\n      tmpDate.getUTCHours(),\n      tmpDate.getUTCMinutes(),\n      tmpDate.getUTCSeconds(),\n      tmpDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return toDate(timestamp + time + offset, options?.in);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","import { render } from \"./Task.vue?vue&type=template&id=d4de7ee6&scoped=true\"\nimport script from \"./Task.vue?vue&type=script&lang=js\"\nexport * from \"./Task.vue?vue&type=script&lang=js\"\n\nimport \"./Task.vue?vue&type=style&index=0&id=d4de7ee6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d4de7ee6\"]])\n\nexport default __exports__"],"names":["useTaskStore","defineStore","tasks","ref","systemTasks","completedTasks","loading","pendingTasks","computed","value","filter","task","completed","fetchTasks","async","response","taskApi","getTasks","error","ElMessage","fetchSystemTasks","getSystemTasks","addTask","createTask","title","description","deadline","important","push","success","completeTask","id","find","t","_id","unshift","completedAt","Date","toISOString","plantStore","usePlantStore","plants","length","mainPlant","p","isMainPlant","plantId","expAmount","gainExperience","completeSystemTask","currentPlant","warning","index","findIndex","rewards","experience","status","removeTask","deleteTask","console","removeCompletedTask","updateTask","updatedTask","toggleTaskImportance","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_el_button","type","onClick","$setup","openTaskForm","default","_withCtx","_component_el_icon","_component_Plus","_","_createTextVNode","_hoisted_5","_hoisted_6","_Fragment","_renderList","taskStore","_normalizeClass","_hoisted_7","_toDisplayString","icon","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","disabled","$event","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_component_el_empty","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_component_Clock","formatDate","_createCommentVNode","_hoisted_22","_component_el_button_group","completeUserTask","_cache","editTask","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_component_el_dialog","modelValue","showTaskForm","editingTask","width","footer","_hoisted_31","saveTask","_component_el_form","model","taskForm","_component_el_form_item","label","required","_component_el_input","placeholder","rows","_component_el_date_picker","format","style","_component_el_checkbox","parseISO","argument","options","invalidDate","constructFrom","in","NaN","additionalDigits","dateStrings","splitDateString","date","parseYearResult","parseYear","parseDate","restDateString","year","isNaN","timestamp","offset","time","parseTime","timezone","tmpDate","result","toDate","setFullYear","getUTCFullYear","getUTCMonth","getUTCDate","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseTimezone","patterns","dateTimeDelimiter","timeZoneDelimiter","dateRegex","timeRegex","timezoneRegex","dateString","array","split","timeString","test","substr","token","exec","replace","regex","RegExp","captures","match","parseInt","century","slice","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","validateWeekDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","setUTCFullYear","Math","max","hours","parseTimeUnit","minutes","seconds","validateTime","millisecondsInHour","millisecondsInMinute","parseFloat","timezoneString","sign","validateTimezone","isoWeekYear","fourthOfJanuaryDay","getUTCDay","diff","setUTCDate","daysInMonths","isLeapYearIndex","_year","_hours","name","components","Plus","Clock","setup","reactive","onMounted","log","fetchPlants","Promise","all","resetTaskForm","taskId","ElMessageBox","alert","confirmButtonText","confirm","cancelButtonText","then","catch","trim","e","__exports__","render"],"sourceRoot":""}
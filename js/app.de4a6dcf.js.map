{"version":3,"file":"js/app.de4a6dcf.js","mappings":"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","sources":["webpack://zhiyuxinsheng/./src/stores/auth.js","webpack://zhiyuxinsheng/./src/stores/plant.js","webpack://zhiyuxinsheng/./src/App.vue","webpack://zhiyuxinsheng/./src/App.vue?7ccd","webpack://zhiyuxinsheng/./src/main.js","webpack://zhiyuxinsheng/./src/services/api.js","webpack://zhiyuxinsheng/./src/components/Calendar.vue","webpack://zhiyuxinsheng/./src/components/Calendar.vue?da16","webpack://zhiyuxinsheng/./src/router/index.js","webpack://zhiyuxinsheng/webpack/bootstrap","webpack://zhiyuxinsheng/webpack/runtime/chunk loaded","webpack://zhiyuxinsheng/webpack/runtime/compat get default export","webpack://zhiyuxinsheng/webpack/runtime/define property getters","webpack://zhiyuxinsheng/webpack/runtime/ensure chunk","webpack://zhiyuxinsheng/webpack/runtime/get javascript chunk filename","webpack://zhiyuxinsheng/webpack/runtime/get mini-css chunk filename","webpack://zhiyuxinsheng/webpack/runtime/global","webpack://zhiyuxinsheng/webpack/runtime/hasOwnProperty shorthand","webpack://zhiyuxinsheng/webpack/runtime/load script","webpack://zhiyuxinsheng/webpack/runtime/make namespace object","webpack://zhiyuxinsheng/webpack/runtime/publicPath","webpack://zhiyuxinsheng/webpack/runtime/css loading","webpack://zhiyuxinsheng/webpack/runtime/jsonp chunk loading","webpack://zhiyuxinsheng/webpack/startup"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref, computed } from 'vue'\nimport axios from 'axios'\nimport { ElMessage } from 'element-plus'\nimport router from '../router'\n\n// 认证相关的API服务\nconst API_URL = process.env.VUE_APP_API_URL || 'http://115.175.12.31/plantodo/api'\n\nexport const useAuthStore = defineStore('auth', () => {\n  // 状态\n  const user = ref(null)\n  const token = ref(localStorage.getItem('token') || '')\n  const loading = ref(false)\n  const error = ref(null)\n  \n  // 计算属性\n  const isAuthenticated = computed(() => !!token.value)\n  const userInfo = computed(() => user.value || {})\n  const isAdmin = computed(() => user.value?.role === 'admin')\n  \n  // 登录方法\n  const login = async (credentials) => {\n    loading.value = true\n    error.value = null\n    \n    try {\n      // 传递给API的登录数据\n      const loginData = {\n        email: credentials.email,\n        password: credentials.password\n      }\n      \n      const response = await axios.post(`${API_URL}/auth/login`, loginData)\n      const { token: newToken, user: userData } = response.data\n      \n      // 保存token和用户数据\n      token.value = newToken\n      user.value = userData\n      \n      // 将token存储到localStorage或cookie，根据记住我的选择\n      if (credentials.remember) {\n        // 如果用户选择了\"记住我\"，使用localStorage长期保存\n        localStorage.setItem('token', newToken)\n      } else {\n        // 如果没有选择\"记住我\"，也暂时存入localStorage\n        // 在实际项目中可以考虑使用session storage或有效期较短的cookie\n      localStorage.setItem('token', newToken)\n      }\n      \n      // 设置axios默认请求头\n      axios.defaults.headers.common['Authorization'] = `Bearer ${newToken}`\n      \n      ElMessage.success('登录成功!')\n      return response.data\n    } catch (err) {\n      console.error('登录失败:', err)\n      error.value = err.response?.data?.message || '登录失败，请检查您的邮箱和密码'\n      ElMessage.error(error.value)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 注册方法\n  const register = async (userData) => {\n    loading.value = true\n    error.value = null\n    \n    try {\n      const response = await axios.post(`${API_URL}/auth/register`, userData)\n      \n      // 用户注册成功后，自动创建5种默认植物\n      try {\n        // 获取token\n        const registrationToken = response.data.token\n        \n        // 设置axios默认请求头\n        axios.defaults.headers.common['Authorization'] = `Bearer ${registrationToken}`\n        \n        // 创建5种默认植物\n        const defaultPlants = [\n          { name: '绯色絮语', type: '玫瑰', emoji: '🌹', isMainPlant: true },\n          { name: '沙屿星芒', type: '仙人掌', emoji: '🌵', isMainPlant: false },\n          { name: '冰爵士', type: '郁金香', emoji: '🌸', isMainPlant: false },\n          { name: '云归处', type: '白百何', emoji: '🌲', isMainPlant: false },\n          { name: '日轮礼赞', type: '向日葵', emoji: '🌻', isMainPlant: false }\n        ]\n        \n        // 依次创建每个植物\n        for (const plant of defaultPlants) {\n          await axios.post(`${API_URL}/plants`, plant)\n        }\n        \n        console.log('已成功为新用户创建5个默认植物')\n      } catch (plantError) {\n        console.error('为新用户创建植物失败:', plantError)\n        // 不阻止注册流程，即使植物创建失败\n      }\n      \n      ElMessage.success('注册成功！请登录您的账号。')\n      return response.data\n    } catch (err) {\n      console.error('注册失败:', err)\n      error.value = err.response?.data?.message || '注册失败，请稍后再试'\n      ElMessage.error(error.value)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 忘记密码\n  const forgotPassword = async (email) => {\n    loading.value = true\n    error.value = null\n    \n    try {\n      const response = await axios.post(`${API_URL}/auth/forgot-password`, { email })\n      return response.data\n    } catch (err) {\n      console.error('发送重置密码邮件失败:', err)\n      error.value = err.response?.data?.message || '发送重置密码邮件失败，请稍后再试'\n      ElMessage.error(error.value)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 重置密码\n  const resetPassword = async (resetData) => {\n    loading.value = true\n    error.value = null\n    \n    try {\n      const response = await axios.post(`${API_URL}/auth/reset-password`, resetData)\n      return response.data\n    } catch (err) {\n      console.error('重置密码失败:', err)\n      error.value = err.response?.data?.message || '重置密码失败，请稍后再试'\n      ElMessage.error(error.value)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 获取当前用户信息\n  const fetchUserInfo = async () => {\n    if (!token.value) return null\n    \n    loading.value = true\n    error.value = null\n    \n    try {\n      const response = await axios.get(`${API_URL}/auth/me`)\n      user.value = response.data\n      console.log('已获取用户信息:', user.value)\n      return response.data\n    } catch (err) {\n      console.error('获取用户信息失败:', err)\n      if (err.response?.status === 401) {\n        // 如果未授权，执行登出操作\n        logout()\n      }\n      error.value = err.response?.data?.message || '获取用户信息失败'\n      return null\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 登出方法\n  const logout = () => {\n    // 清除用户数据和token\n    user.value = null\n    token.value = ''\n    \n    // 清除localStorage中的token\n    localStorage.removeItem('token')\n    \n    // 清除axios默认请求头\n    delete axios.defaults.headers.common['Authorization']\n    \n    // 跳转到登录页的逻辑在路由守卫中处理\n  }\n  \n  // 初始化认证状态\n  const initAuth = async () => {\n    if (token.value) {\n      // 设置axios默认请求头\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token.value}`\n      \n      // 获取用户信息\n      try {\n        const userData = await fetchUserInfo()\n        if (!userData) {\n          // 如果获取用户信息失败，可能是token无效\n          console.warn('初始化认证状态时获取用户信息失败，清除token')\n          logout()\n          return false\n        }\n        return true\n      } catch (err) {\n        console.error('初始化认证状态失败:', err)\n        logout()\n        return false\n      }\n    }\n    return false\n  }\n  \n  // 修改密码\n  const changePassword = async (passwordData) => {\n    try {\n      loading.value = true\n      error.value = null\n      \n      const data = await axios.post(`${API_URL}/auth/change-password`, passwordData)\n      ElMessage.success('密码修改成功！')\n      \n      return data\n    } catch (err) {\n      error.value = err.response?.data?.message || '修改密码失败，请稍后再试'\n      ElMessage.error(error.value)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n\n  // 更新用户资料\n  const updateProfile = async (profileData) => {\n    try {\n      loading.value = true\n      error.value = null\n      \n      const response = await axios.put(`${API_URL}/auth/profile`, profileData)\n      // 确保更新完整的用户信息，包括头像\n      if (response.data) {\n        // 如果服务器返回了完整的用户对象，直接替换\n        if (response.data.avatar !== undefined) {\n          user.value = response.data\n        } else {\n          // 如果服务器只返回了部分字段，保留其他字段\n          user.value = { ...user.value, ...response.data }\n          // 特别确保avatar字段得到保留\n          if (profileData.avatar && !response.data.avatar) {\n            user.value.avatar = profileData.avatar\n          }\n        }\n      }\n      return response.data\n    } catch (err) {\n      error.value = err.response?.data?.message || '更新个人资料失败，请稍后再试'\n      ElMessage.error(error.value)\n      throw err\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  return {\n    // 状态\n    user,\n    token,\n    loading,\n    error,\n    \n    // 计算属性\n    isAuthenticated,\n    userInfo,\n    isAdmin,\n    \n    // 方法\n    login,\n    register,\n    forgotPassword,\n    resetPassword,\n    fetchUserInfo,\n    logout,\n    initAuth,\n    changePassword,\n    updateProfile\n  }\n}) ","import { defineStore } from 'pinia'\nimport { plantApi } from '../services/api'\nimport { ElMessage } from 'element-plus'\n\nexport const usePlantStore = defineStore('plant', {\n  state: () => ({\n    plants: [],\n    currentPlant: null,\n    loading: false,\n    thoughts: [],\n    conversations: [],\n    hasMoreConversations: false,\n    isGeneratingThought: false\n  }),\n  \n  actions: {\n    // 获取用户所有植物\n    async fetchPlants() {\n      try {\n        this.loading = true\n        const response = await plantApi.getPlants()\n        this.plants = response.plants\n        \n        // 如果有主植物，则设置为当前植物\n        const mainPlant = this.plants.find(p => p.isMainPlant)\n        if (mainPlant) {\n          this.currentPlant = mainPlant\n        } else if (this.plants.length > 0) {\n          // 否则选择第一个植物\n          this.currentPlant = this.plants[0]\n        }\n      } catch (error) {\n        ElMessage.error('获取植物列表失败')\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 获取特定植物详情\n    async fetchPlantDetail(id) {\n      try {\n        // 检查ID是否有效\n        if (!id) {\n          console.error('植物ID无效')\n          ElMessage.warning('植物ID无效，无法获取植物详情')\n          return null\n        }\n        \n        // 获取正确的ID, MongoDB使用_id作为主键\n        const plantId = typeof id === 'object' ? id._id : id\n        console.log('准备获取植物详情，使用ID:', plantId)\n        \n        this.loading = true\n        const response = await plantApi.getPlant(plantId)\n        \n        // 更新植物详情\n        const index = this.plants.findIndex(p => p.id === plantId || p._id === plantId)\n        if (index !== -1) {\n          this.plants[index] = response.plant\n        }\n        \n        // 如果是当前植物，更新当前植物\n        if (this.currentPlant && (this.currentPlant.id === plantId || this.currentPlant._id === plantId)) {\n          this.currentPlant = response.plant\n        }\n        \n        return response.plant\n      } catch (error) {\n        console.error('获取植物详情失败:', error)\n        ElMessage.error('获取植物详情失败')\n        return null\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 创建新植物\n    async createPlant(plantData) {\n      try {\n        this.loading = true\n        const response = await plantApi.createPlant(plantData)\n        this.plants.push(response.plant)\n        \n        // 如果是主植物，更新当前植物\n        if (response.plant.isMainPlant) {\n          this.currentPlant = response.plant\n        }\n        \n        ElMessage.success('创建植物成功')\n        return response.plant\n      } catch (error) {\n        ElMessage.error('创建植物失败')\n        return null\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 更新植物信息\n    async updatePlant(id, plantData) {\n      try {\n        // 检查ID是否有效\n        if (!id) {\n          console.error('植物ID无效')\n          ElMessage.warning('植物ID无效，无法更新植物信息')\n          return null\n        }\n        \n        // 获取正确的ID, MongoDB使用_id作为主键\n        const plantId = typeof id === 'object' ? id._id : id\n        console.log('准备更新植物信息，使用ID:', plantId)\n        \n        this.loading = true\n        const response = await plantApi.updatePlant(plantId, plantData)\n        \n        if (!response || !response.plant) {\n          throw new Error('更新植物信息失败：服务器响应无效')\n        }\n        \n        // 更新本地植物信息\n        const plant = response.plant\n        const index = this.plants.findIndex(p => p.id === plantId || p._id === plantId)\n        \n        if (index !== -1) {\n          // 保留现有属性，只更新修改的字段\n          this.plants[index] = {\n            ...this.plants[index],\n            ...plant,\n            // 确保ID字段保持一致\n            id: this.plants[index].id,\n            _id: this.plants[index]._id\n          }\n        }\n        \n        // 如果是当前植物，更新当前植物\n        if (this.currentPlant && (this.currentPlant.id === plantId || this.currentPlant._id === plantId)) {\n          // 保留现有属性，只更新修改的字段\n          this.currentPlant = {\n            ...this.currentPlant,\n            ...plant,\n            // 确保ID字段保持一致\n            id: this.currentPlant.id,\n            _id: this.currentPlant._id\n          }\n        }\n        \n        return plant\n      } catch (error) {\n        console.error('更新植物信息失败:', error)\n        throw error // 向上传递错误，让调用者处理\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 删除植物\n    async deletePlant(id) {\n      try {\n        this.loading = true\n        const response = await plantApi.deletePlant(id)\n        \n        // 从植物列表中移除\n        this.plants = this.plants.filter(p => p.id !== id)\n        \n        // 如果删除的是当前植物，重置当前植物\n        if (this.currentPlant && this.currentPlant.id === id) {\n          this.currentPlant = this.plants.find(p => p.isMainPlant) || this.plants[0] || null\n        }\n        \n        ElMessage.success(response.message || '删除植物成功')\n        return true\n      } catch (error) {\n        ElMessage.error(error.response?.data?.message || '删除植物失败')\n        return false\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 增加植物经验\n    async gainExperience(id, amount) {\n      try {\n        const response = await plantApi.increaseExperience(id, amount)\n        \n        // 更新植物信息\n        const plant = response.plant\n        const index = this.plants.findIndex(p => p.id === id)\n        \n        if (index !== -1) {\n          this.plants[index].level = plant.level\n          this.plants[index].experience = plant.experience\n          this.plants[index].state = plant.state\n          this.plants[index].growthStage = plant.growthStage\n        }\n        \n        // 如果是当前植物，更新当前植物\n        if (this.currentPlant && this.currentPlant.id === id) {\n          this.currentPlant.level = plant.level\n          this.currentPlant.experience = plant.experience\n          this.currentPlant.state = plant.state\n          this.currentPlant.growthStage = plant.growthStage\n        }\n        \n        // 检查是否升级\n        if (response.levelUp) {\n          ElMessage.success(`植物升级了！现在等级为 ${plant.level}`)\n        }\n        \n        // 检查是否阶段变化\n        if (response.stageChange) {\n          ElMessage.success(`植物进入了新的生长阶段: ${this.getGrowthStageName(plant.growthStage)}`)\n        }\n        \n        return response\n      } catch (error) {\n        ElMessage.error('增加植物经验失败')\n        return null\n      }\n    },\n    \n    // 更新植物生长阶段\n    async updateGrowthStage(id, stage) {\n      try {\n        // 检查ID是否有效\n        if (!id) {\n          console.error('植物ID无效')\n          ElMessage.warning('植物ID无效，无法更新生长阶段')\n          return null\n        }\n        \n        // 获取正确的ID, MongoDB使用_id作为主键\n        const plantId = typeof id === 'object' ? id._id : id\n        console.log('准备更新植物生长阶段，使用ID:', plantId)\n        \n        const response = await plantApi.updateGrowthStage(plantId, stage)\n        \n        // 更新植物信息\n        const plant = response.plant\n        const index = this.plants.findIndex(p => p.id === plantId || p._id === plantId)\n        \n        if (index !== -1) {\n          this.plants[index].state = plant.state\n          this.plants[index].growthStage = plant.growthStage\n        }\n        \n        // 如果是当前植物，更新当前植物\n        if (this.currentPlant && (this.currentPlant.id === plantId || this.currentPlant._id === plantId)) {\n          this.currentPlant.state = plant.state\n          this.currentPlant.growthStage = plant.growthStage\n        }\n        \n        ElMessage.success(response.message || `植物生长阶段已更新为 ${this.getGrowthStageName(stage)}`)\n        return response.plant\n      } catch (error) {\n        console.error('更新植物生长阶段失败:', error)\n        ElMessage.error('更新植物生长阶段失败')\n        return null\n      }\n    },\n    \n    // 获取生长阶段名称\n    getGrowthStageName(stage) {\n      const stageMap = {\n        1: '幼苗期',\n        2: '成长期',\n        3: '成熟期'\n      }\n      return stageMap[stage] || '未知阶段'\n    },\n    \n    // 获取植物心声\n    async fetchPlantThoughts(id) {\n      try {\n        // 检查ID是否有效\n        if (!id) {\n          console.error('植物ID无效')\n          ElMessage.warning('植物ID无效，无法获取植物心声')\n          return []\n        }\n        \n        // 获取正确的ID, MongoDB使用_id作为主键\n        const plantId = typeof id === 'object' ? id._id : id\n        console.log('准备获取植物心声，使用ID:', plantId)\n        \n        this.loading = true\n        const response = await plantApi.getPlantThoughts(plantId)\n        this.thoughts = response.thoughts\n        return response.thoughts\n      } catch (error) {\n        console.error('获取植物心声失败:', error)\n        ElMessage.error('获取植物心声失败')\n        return []\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 生成新的植物心声\n    async generatePlantThought(id, context) {\n      try {\n        // 如果正在生成心声，直接返回\n        if (this.isGeneratingThought) {\n          console.log('正在生成植物心声，跳过重复调用');\n          return null;\n        }\n        \n        // 检查ID是否有效\n        if (!id) {\n          console.error('植物ID无效');\n          ElMessage.warning('植物ID无效，无法生成植物心声');\n          return null;\n        }\n        \n        // 获取正确的ID, MongoDB使用_id作为主键\n        const plantId = typeof id === 'object' ? id._id : id;\n        \n        console.log('准备生成植物心声，使用ID:', plantId);\n        console.log('当前植物信息:', this.currentPlant);\n        \n        // 构建植物信息\n        const plant = this.currentPlant;\n        if (!plant) {\n          throw new Error('当前植物信息不存在');\n        }\n\n        // 设置生成标志\n        this.isGeneratingThought = true;\n\n        console.log('调用后端API生成心声，参数:', { plantId, context });\n        // 调用后端API生成心声\n        const response = await plantApi.generatePlantThought(plantId, context);\n        console.log('后端API响应:', response);\n\n        // 添加到心声列表\n        const thought = {\n          id: Date.now().toString(),\n          content: response.thought.content,\n          timestamp: new Date().toISOString(),\n          mood: context.mood,\n          weather: context.weather,\n          icon: response.thought.icon,\n          tag: response.thought.tag\n        };\n        \n        console.log('生成的心声对象:', thought);\n        this.thoughts.unshift(thought);\n        return thought;\n      } catch (error) {\n        console.error('生成植物心声失败:', error);\n        ElMessage.error('生成植物心声失败');\n        return null;\n      } finally {\n        // 重置生成标志\n        this.isGeneratingThought = false;\n      }\n    },\n    \n    // 获取与植物的对话历史\n    async fetchConversations(id, limit = 20, before = null) {\n      try {\n        // 检查ID是否有效\n        if (!id) {\n          console.error('植物ID无效')\n          ElMessage.warning('植物ID无效，无法获取对话历史')\n          return []\n        }\n        \n        // 获取正确的ID, MongoDB使用_id作为主键\n        const plantId = typeof id === 'object' ? id._id : id\n        console.log('准备获取对话历史，使用ID:', plantId)\n        \n        this.loading = true\n        const response = await plantApi.getConversations(plantId, limit, before)\n        \n        if (before) {\n          // 加载更多消息，添加到现有消息列表\n          this.conversations = [...this.conversations, ...response.messages]\n        } else {\n          // 初始加载，替换消息列表\n          this.conversations = response.messages\n        }\n        \n        this.hasMoreConversations = response.hasMore\n        return response.messages\n      } catch (error) {\n        console.error('获取对话历史失败:', error)\n        ElMessage.error('获取对话历史失败')\n        return []\n      } finally {\n        this.loading = false\n      }\n    },\n    \n    // 发送消息给植物并获取回复\n    async sendMessage(id, message, skipUserMessage = false) {\n      try {\n        // 检查ID是否有效\n        if (!id) {\n          console.error('植物ID无效')\n          ElMessage.warning('植物ID无效，无法发送消息')\n          return null\n        }\n        \n        // 获取正确的ID, MongoDB使用_id作为主键\n        const plantId = typeof id === 'object' ? id._id : id\n        console.log('准备发送消息，使用ID:', plantId)\n        \n        // 只有当skipUserMessage为false时才添加用户消息\n        if (!skipUserMessage) {\n          const userMessage = {\n            id: Date.now().toString(),\n            sender: 'user',\n            content: message,\n            timestamp: new Date().toISOString()\n          }\n          this.conversations.push(userMessage)\n        }\n        \n        // 调用后端API发送消息\n        const response = await plantApi.sendMessage(plantId, message, {})\n        \n        // 添加植物回复到对话列表\n        this.conversations.push(response.response)\n        \n        // 返回植物的回复消息对象\n        return response.response\n      } catch (error) {\n        console.error('发送消息失败:', error)\n        ElMessage.error('发送消息失败')\n        return null\n      }\n    },\n    \n    // 清空与植物的对话\n    async clearConversations(id) {\n      try {\n        // 检查ID是否有效\n        if (!id) {\n          console.error('植物ID无效')\n          ElMessage.warning('植物ID无效，无法清空对话')\n          return false\n        }\n        \n        // 获取正确的ID, MongoDB使用_id作为主键\n        const plantId = typeof id === 'object' ? id._id : id\n        console.log('准备清空对话，使用ID:', plantId)\n        \n        // 调用API清空对话\n        await plantApi.clearConversations(plantId)\n        \n        // 清空本地对话记录\n        this.conversations = []\n        return true\n      } catch (error) {\n        console.error('清空对话失败:', error)\n        ElMessage.error('清空对话失败')\n        return false\n      }\n    },\n    \n    // 设置当前植物\n    setCurrentPlant(plant) {\n      this.currentPlant = plant\n    }\n  },\n  \n  getters: {\n    // 获取主植物\n    mainPlant: (state) => {\n      return state.plants.find(p => p.isMainPlant) || (state.plants.length > 0 ? state.plants[0] : null)\n    },\n    \n    // 当前植物等级\n    currentLevel: (state) => {\n      return state.currentPlant?.level || 1\n    },\n    \n    // 当前植物的下一级所需经验值\n    experienceToNextLevel: (state) => {\n      if (!state.currentPlant) return 100\n      const currentExp = state.currentPlant.experience || 0\n      const level = state.currentPlant.level || 1\n      return level * 100 - currentExp\n    },\n    \n    // 当前植物经验百分比\n    experiencePercentage: (state) => {\n      if (!state.currentPlant) return 0\n      const currentExp = state.currentPlant.experience || 0\n      const level = state.currentPlant.level || 1\n      return Math.min(100, (currentExp / (level * 100)) * 100)\n    },\n    \n    // 获取植物图片路径\n    getPlantAvatar: (state) => (plant) => {\n      if (!plant) return ''\n      const state = plant.state || 'seedling'\n      const weather = plant.weather || 'sunny'\n      const mood = plant.mood || 'neutral'\n      \n      // 返回不同状态下的图片路径\n      return `/images/plant/${state}_${weather}_${mood}.png`\n    },\n    \n    // 获取最近的植物心声\n    recentThoughts: (state) => {\n      return state.thoughts.slice(0, 5)\n    }\n  }\n}) ","<template>\n  <div class=\"app-container\" :class=\"{ 'auth-page': isAuthRoute }\">\n    <!-- 认证页面路由视图 -->\n    <router-view v-if=\"isAuthRoute\" />\n    \n    <!-- 主应用布局 -->\n    <template v-else>\n      <!-- 添加视频背景 -->\n      <div class=\"video-background\">\n        <video autoplay muted loop playsinline>\n          <source src=\"https://yamapicgo.oss-cn-nanjing.aliyuncs.com/picgoImage/bg2.mp4\" type=\"video/mp4\">\n        </video>\n      </div>\n      \n      <el-container class=\"main-container\">\n        <!-- 侧边栏 -->\n        <el-aside width=\"240px\" class=\"sidebar\">\n          <div class=\"logo-container\">\n            <div class=\"logo\">\n              <img src=\"https://yamapicgo.oss-cn-nanjing.aliyuncs.com/picgoImage/logo.png\" alt=\"logo\" class=\"logo-image\">\n              <span>植语心声</span>\n            </div>\n          </div>\n          <el-menu\n            :default-active=\"activeMenu\"\n            class=\"el-menu-vertical\"\n            router\n          >\n            <el-menu-item index=\"/\">\n              <el-icon><House /></el-icon>\n              <span>心灵起点</span>\n            </el-menu-item>\n            <el-menu-item index=\"/tasks\">\n              <el-icon><List /></el-icon>\n              <span>待办清单</span>\n            </el-menu-item>\n            <el-menu-item index=\"/garden\">\n              <el-icon><PriceTag /></el-icon>\n              <span>植物花园</span>\n            </el-menu-item>\n            <!--?            <el-menu-item index=\"/plant-voice\">\n              <el-icon><ChatDotRound /></el-icon>\n              <span>植物心声</span>\n            </el-menu-item>-->\n            <el-menu-item index=\"/plant-chat\">\n              <el-icon><ChatLineRound /></el-icon>\n              <span>心灵树洞</span>\n            </el-menu-item>\n            <el-menu-item index=\"/posts\">\n              <el-icon><Reading /></el-icon>\n              <span>生活手札</span>\n            </el-menu-item>\n            <el-menu-item index=\"/calendar\">\n              <el-icon><Calendar /></el-icon>\n              <span>成长轨迹</span>\n            </el-menu-item>\n          </el-menu>\n          \n          <div class=\"user-panel\">\n            <div class=\"user-info\" @click=\"showUserMenu = !showUserMenu\">\n              <el-avatar :size=\"36\" :src=\"userAvatar\"></el-avatar>\n              <span class=\"username\">{{ username }}</span>\n              <el-icon><CaretTop :class=\"{ 'rotate-icon': showUserMenu }\" /></el-icon>\n            </div>\n            \n            <div class=\"user-dropdown\" v-if=\"showUserMenu\">\n              <div class=\"dropdown-item\" @click=\"goToProfile\">\n                <el-icon><User /></el-icon>\n                <span>个人资料</span>\n              </div>\n<!--              <div class=\"dropdown-item\" @click=\"goToSettings\">\n                <el-icon><Setting /></el-icon>\n                <span>设置</span>\n              </div>-->\n              <div class=\"dropdown-item logout\" @click=\"handleLogout\">\n                <el-icon><SwitchButton /></el-icon>\n                <span>退出登录</span>\n              </div>\n            </div>\n          </div>\n        </el-aside>\n        \n        <!-- 主内容区 -->\n        <el-main>\n          <router-view v-slot=\"{ Component }\">\n            <keep-alive>\n              <component :is=\"Component\" />\n            </keep-alive>\n          </router-view>\n        </el-main>\n      </el-container>\n    </template>\n  </div>\n</template>\n\n<script>\nimport { ref, computed, onMounted, onBeforeUnmount } from 'vue'\nimport { useRouter, useRoute } from 'vue-router'\nimport { useAuthStore } from './stores/auth'\nimport { usePlantStore } from './stores/plant'\nimport {\n  Sunny, House, List, PriceTag, ChatDotRound, ChatLineRound,\n  Reading, Calendar, CaretTop, User, Setting, SwitchButton\n} from '@element-plus/icons-vue'\nimport { ElMessageBox } from 'element-plus'\nimport axios from 'axios'\nexport default {\n  name: 'App',\n  components: {\n    Sunny, House, List, PriceTag, ChatDotRound, ChatLineRound,\n    Reading, Calendar, CaretTop, User, Setting, SwitchButton\n  },\n  setup() {\n    const router = useRouter()\n    const route = useRoute()\n    const authStore = useAuthStore()\n    const plantStore = usePlantStore()\n    \n    const showUserMenu = ref(false)\n    \n    // 判断当前是否为认证相关路由（登录/注册/忘记密码等）\n    const isAuthRoute = computed(() => {\n      const authRoutes = ['/login', '/register', '/forgot-password']\n      // 检查当前路径是否以这些路径开头\n      return authRoutes.some(path => route.path.startsWith(path)) ||\n             route.path.startsWith('/reset-password')\n    })\n    \n    // 当前激活的菜单项\n    const activeMenu = computed(() => route.path)\n    \n    // 用户信息\n    const username = computed(() => authStore.userInfo?.username || '未登录')\n    const userAvatar = computed(() => authStore.userInfo?.avatar || 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png')\n    \n    // 处理退出登录\n    const handleLogout = () => {\n      ElMessageBox.confirm('确定要退出登录吗？', '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        authStore.logout()\n        router.push('/login')\n      }).catch(() => {})\n    }\n    \n    // 个人资料页面\n    const goToProfile = () => {\n      showUserMenu.value = false\n      router.push('/profile')\n    }\n    \n    // 设置页面\n    const goToSettings = () => {\n      showUserMenu.value = false\n      // router.push('/settings')\n      ElMessageBox.alert('设置功能正在开发中', '提示', {\n        confirmButtonText: '确定'\n      })\n    }\n    \n    // 点击页面其他区域关闭用户菜单\n    const handleClickOutside = (event) => {\n      const userPanel = document.querySelector('.user-panel')\n      if (userPanel && !userPanel.contains(event.target) && showUserMenu.value) {\n        showUserMenu.value = false\n      }\n    }\n    \n    // 组件挂载和卸载时处理全局点击事件\n    onMounted(async () => {\n      document.addEventListener('click', handleClickOutside)\n      \n      console.log('App组件挂载，检查认证状态')\n      // 确认token有效性并加载用户信息\n      const token = localStorage.getItem('token')\n      if (token && token.trim() !== '') {\n        console.log('检测到有存储的token，确保用户数据已加载')\n        // 确保axios headers已设置\n        axios.defaults.headers.common['Authorization'] = `Bearer ${token}`\n        \n        try {\n          // 无论是否有用户信息，都重新获取以确保数据最新\n          console.log('加载用户信息')\n          const userData = await authStore.fetchUserInfo()\n          \n          if (userData) {\n            console.log('用户信息加载成功', userData)\n            // 用户已登录，加载植物数据\n            await plantStore.fetchPlants()\n            console.log('植物数据加载成功')\n          } else {\n            console.warn('获取用户信息失败，清除无效token')\n            authStore.logout()\n            if (!isAuthRoute.value) {\n              router.push('/login')\n            }\n          }\n        } catch (error) {\n          console.error('初始化应用状态失败:', error)\n          authStore.logout()\n          if (!isAuthRoute.value) {\n            router.push('/login')\n          }\n        }\n      } else {\n        console.log('未检测到有效token')\n        // 如果当前不在认证页面，重定向到登录\n        if (!isAuthRoute.value) {\n          console.log('重定向到登录页面')\n          router.push('/login')\n        }\n      }\n    })\n    \n    onBeforeUnmount(() => {\n      document.removeEventListener('click', handleClickOutside)\n    })\n    \n    return {\n      isAuthRoute,\n      activeMenu,\n      username,\n      userAvatar,\n      showUserMenu,\n      handleLogout,\n      goToProfile,\n      goToSettings\n    }\n  }\n}\n</script>\n\n<style>\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: 'PingFang SC', 'Helvetica Neue', Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  color: #333;\n  background-color: #f5f7fa;\n}\n\n/* 主容器样式 */\n.app-container {\n  min-height: 100vh;\n  display: flex;\n}\n\n/* 认证页面布局 */\n.auth-page {\n  background-color: #f5f7fa;\n}\n\n/* 主布局容器 */\n.main-container {\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  min-height: 100vh;\n}\n\n/* 侧边栏样式 */\n.sidebar {\n  background-color: rgba(255, 255, 255, 0.9);\n  backdrop-filter: blur(10px);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);\n  height: 100vh;\n  position: fixed;\n  left: 0;\n  top: 0;\n  z-index: 100;\n  border-right: 1px solid rgba(235, 238, 245, 0.5);\n  display: flex;\n  flex-direction: column;\n  width: 240px; /* 增加侧边栏宽度 */\n  transition: all 0.3s ease;\n  overflow: hidden;\n}\n\n/* Logo容器 */\n.logo-container {\n  height: 80px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-bottom: 1px solid rgba(240, 240, 240, 0.6);\n  margin-bottom: 10px;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: #42b983;\n  letter-spacing: 1px;\n}\n\n.logo .el-icon {\n  margin-right: 10px;\n  font-size: 24px;\n}\n\n.logo-image {\n  width: 42px;\n  height: 42px;\n  object-fit: cover;\n  margin-right: 10px;\n}\n\n/* 垂直菜单 */\n.el-menu-vertical {\n  border-right: none;\n  flex: 1;\n  padding: 15px 0;\n  background-color: transparent;\n}\n\n.el-menu-vertical .el-menu-item {\n  height: 50px;\n  line-height: 50px;\n  margin: 5px 14px;\n  border-radius: 8px;\n  color: #606266;\n  font-size: 15px;\n  transition: all 0.3s ease;\n}\n\n.el-menu-vertical .el-menu-item:hover {\n  background-color: rgba(66, 185, 131, 0.1);\n  color: #42b983;\n}\n\n.el-menu-vertical .el-menu-item.is-active {\n  background-color: rgba(66, 185, 131, 0.15);\n  color: #42b983;\n  font-weight: 500;\n}\n\n.el-menu-vertical .el-menu-item .el-icon {\n  margin-right: 12px;\n  color: inherit;\n  font-size: 18px;\n  transition: all 0.2s ease;\n}\n\n/* 主内容区域 */\n.el-main {\n  padding: 25px;\n  margin-left: 240px; /* 与侧边栏宽度对应 */\n  min-height: 100vh;\n  width: calc(100% - 240px); /* 减去侧边栏宽度 */\n  position: relative;\n  z-index: 1;\n}\n\n/* 用户面板 */\n.user-panel {\n  margin-top: auto;\n  padding: 18px 16px;\n  border-top: 1px solid rgba(240, 240, 240, 0.6);\n  position: relative;\n  margin-top: 15px;\n}\n\n.user-info {\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  padding: 10px;\n  border-radius: 8px;\n  transition: all 0.3s ease;\n}\n\n.user-info:hover {\n  background-color: rgba(66, 185, 131, 0.08);\n}\n\n.username {\n  margin: 0 10px;\n  flex: 1;\n  font-size: 15px;\n  color: #333;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 500;\n}\n\n.rotate-icon {\n  transform: rotate(180deg);\n  transition: transform 0.3s;\n}\n\n/* 用户下拉菜单 */\n.user-dropdown {\n  position: absolute;\n  bottom: 100%;\n  left: 0;\n  right: 0;\n  background-color: #fff;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.08);\n  border-radius: 8px;\n  margin: 0 16px 8px;\n  overflow: hidden;\n  z-index: 100;\n  border: 1px solid rgba(240, 240, 240, 0.8);\n}\n\n.dropdown-item {\n  display: flex;\n  align-items: center;\n  padding: 14px 16px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.dropdown-item:hover {\n  background-color: rgba(66, 185, 131, 0.08);\n}\n\n.dropdown-item .el-icon {\n  margin-right: 10px;\n  font-size: 18px;\n  color: #606266;\n}\n\n.dropdown-item span {\n  font-size: 14px;\n  color: #333;\n}\n\n.dropdown-item.logout {\n  border-top: 1px solid rgba(240, 240, 240, 0.8);\n}\n\n.dropdown-item.logout .el-icon,\n.dropdown-item.logout span {\n  color: #f56c6c;\n}\n\n/* 视频背景样式 */\n.video-background {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: -1;\n  overflow: hidden;\n}\n\n.video-background video {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  opacity: 0.5;\n}\n</style>","import { render } from \"./App.vue?vue&type=template&id=38d768dc\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=38d768dc&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { createApp } from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport { createPinia } from 'pinia'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport * as ElementPlusIconsVue from '@element-plus/icons-vue'\nimport zhCn from 'element-plus/es/locale/lang/zh-cn'\nimport axios from 'axios'\nimport { useAuthStore } from './stores/auth'\n\n    // 默认配置\n    axios.defaults.baseURL = process.env.VUE_APP_API_URL || 'http://115.175.12.31/plantodo/api'\n\n// 创建Pinia实例\nconst pinia = createPinia()\n\n// 创建Vue应用\nconst app = createApp(App)\n\n// 注册所有Element Plus图标\nfor (const [key, component] of Object.entries(ElementPlusIconsVue)) {\n  app.component(key, component)\n}\n\n// 使用插件\napp.use(pinia)\napp.use(router)\napp.use(ElementPlus, {\n  locale: zhCn\n})\n\n// 响应拦截器处理常见错误\naxios.interceptors.response.use(\n  response => response,\n  error => {\n    if (error.response) {\n      // 处理401未授权错误\n      if (error.response.status === 401) {\n        const authStore = useAuthStore()\n        authStore.logout()\n        router.push('/login')\n      }\n    }\n    return Promise.reject(error)\n  }\n)\n\n// 设置默认请求头中的token (如果存在)\nconst storedToken = localStorage.getItem('token')\nif (storedToken) {\n  axios.defaults.headers.common['Authorization'] = `Bearer ${storedToken}`\n}\n\n// 初始化应用前先初始化认证状态\nconst authStore = useAuthStore()\n\n// 立即挂载应用，同时并行初始化认证状态\n  app.mount('#app')\n// 初始化认证状态\nauthStore.initAuth()\n","import axios from 'axios';\n\n// 创建axios实例\nconst api = axios.create({\n  baseURL: process.env.VUE_APP_API_URL || 'http://115.175.12.31/plantodo/api',\n  timeout: 30010,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// 请求拦截器 - 添加token\napi.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers['Authorization'] = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => Promise.reject(error)\n);\n\n// 响应拦截器 - 处理错误\napi.interceptors.response.use(\n  response => response.data,\n  error => {\n    // 统一处理错误\n    console.error('API错误:', error.response?.data || error.message);\n    return Promise.reject(error);\n  }\n);\n\n// 用户认证API\nconst authApi = {\n  // 用户注册\n  register(userData) {\n    return api.post('/auth/register', userData);\n  },\n  \n  // 用户登录\n  login(credentials) {\n    return api.post('/auth/login', credentials);\n  },\n  \n  // 获取当前用户信息\n  getCurrentUser() {\n    return api.get('/auth/me');\n  },\n  \n  // 退出登录\n  logout() {\n    return api.post('/auth/logout');\n  },\n  \n  // 修改密码\n  changePassword(passwordData) {\n    return api.put('/auth/password', passwordData);\n  },\n  \n  // 忘记密码请求\n  forgotPassword(email) {\n    return api.post('/auth/forgot-password', { email });\n  },\n  \n  // 重置密码\n  resetPassword(resetData) {\n    return api.post('/auth/reset-password', resetData);\n  }\n};\n\n// 植物API\nconst plantApi = {\n  // 获取用户所有植物\n  getPlants() {\n    return api.get('/plants');\n  },\n  \n  // 获取特定植物详情\n  getPlant(id) {\n    if (!id) {\n      console.error('API调用错误: 无法获取植物详情，ID无效', id);\n      return Promise.reject(new Error('无效的植物ID'));\n    }\n    console.log('API请求: 获取植物详情, ID:', id);\n    return api.get(`/plants/${id}`);\n  },\n  \n  // 创建植物\n  createPlant(plantData) {\n    return api.post('/plants', plantData);\n  },\n  \n  // 更新植物信息\n  updatePlant(id, plantData) {\n    if (!id) {\n      console.error('API调用错误: 无法更新植物，ID无效', id);\n      return Promise.reject(new Error('无效的植物ID'));\n    }\n    console.log('API请求: 更新植物信息, ID:', id);\n    return api.put(`/plants/${id}`, plantData);\n  },\n  \n  // 删除植物\n  deletePlant(id) {\n    if (!id) {\n      console.error('API调用错误: 无法删除植物，ID无效', id);\n      return Promise.reject(new Error('无效的植物ID'));\n    }\n    console.log('API请求: 删除植物, ID:', id);\n    return api.delete(`/plants/${id}`);\n  },\n  \n  // 增加植物经验\n  increaseExperience(id, amount) {\n    if (!id) {\n      console.error('API调用错误: 无法增加植物经验，ID无效', id);\n      return Promise.reject(new Error('无效的植物ID'));\n    }\n    console.log('API请求: 增加植物经验, ID:', id);\n    return api.put(`/plants/${id}/experience`, { amount });\n  },\n  \n  // 更新植物生长阶段\n  updateGrowthStage(id, stage) {\n    if (!id) {\n      console.error('API调用错误: 无法更新植物生长阶段，ID无效', id);\n      return Promise.reject(new Error('无效的植物ID'));\n    }\n    console.log('API请求: 更新植物生长阶段, ID:', id);\n    return api.put(`/plants/${id}/growth-stage`, { stage });\n  },\n  \n  // 获取植物心声\n  getPlantThoughts(id) {\n    if (!id) {\n      console.error('API调用错误: 无法获取植物心声，ID无效', id);\n      return Promise.reject(new Error('无效的植物ID'));\n    }\n    return api.get(`/plants/${id}/thoughts`);\n  },\n  \n  // 生成新的植物心声\n  generatePlantThought(id, context = {}) {\n    if (!id) {\n      console.error('API调用错误: 无法生成植物心声，ID无效', id);\n      return Promise.reject(new Error('无效的植物ID'));\n    }\n    console.log('API请求: 生成植物心声, ID:', id);\n    return api.post(`/plants/${id}/thoughts`, { context });\n  },\n  \n  // 获取与植物的对话历史\n  getConversations(id, limit = 20, before = null) {\n    if (!id) {\n      console.error('API调用错误: 无法获取对话历史，ID无效', id);\n      return Promise.reject(new Error('无效的植物ID'));\n    }\n    console.log('API请求: 获取对话历史, ID:', id);\n    \n    const params = {};\n    if (limit) params.limit = limit;\n    if (before) params.before = before;\n    \n    return api.get(`/plants/${id}/conversations`, { params });\n  },\n  \n  // 发送消息给植物并获取回复\n  sendMessage(id, message, context = {}) {\n    if (!id) {\n      console.error('API调用错误: 无法发送消息，ID无效', id);\n      return Promise.reject(new Error('无效的植物ID'));\n    }\n    console.log('API请求: 发送消息给植物, ID:', id);\n    \n    return api.post(`/plants/${id}/conversations`, { \n      message,\n      context\n    });\n  },\n  \n  // 清空与植物的对话\n  clearConversations(id) {\n    if (!id) {\n      console.error('API调用错误: 无法清空对话，ID无效', id);\n      return Promise.reject(new Error('无效的植物ID'));\n    }\n    console.log('API请求: 清空与植物的对话, ID:', id);\n    \n    return api.delete(`/plants/${id}/conversations`);\n  }\n};\n\n// 任务API\nconst taskApi = {\n  // 获取所有任务\n  getTasks() {\n    return api.get('/tasks');\n  },\n  \n  // 获取系统任务\n  getSystemTasks() {\n    return api.get('/tasks/system');\n  },\n  \n  // 完成系统任务\n  completeSystemTask(id) {\n    return api.put(`/tasks/system/${id}/complete`);\n  },\n  \n  // 创建新任务\n  createTask(taskData) {\n    return api.post('/tasks', taskData);\n  },\n  \n  // 删除任务\n  deleteTask(id) {\n    return api.delete(`/tasks/${id}`);\n  },\n  \n  // 更新任务\n  updateTask(id, taskData) {\n    return api.put(`/tasks/${id}`, taskData);\n  },\n  \n  // 完成任务\n  completeTask(id) {\n    return api.put(`/tasks/${id}/complete`);\n  }\n};\n\n// 帖子相关API\nconst postApi = {\n  // 获取帖子列表\n  getPosts(type = 'all') {\n    const params = {};\n    if (type && type !== 'all') {\n      params.type = type;\n    }\n    return api.get('/posts', { params });\n  },\n\n  // 创建帖子\n  createPost(postData) {\n    return api.post('/posts', postData);\n  },\n\n  // 更新帖子\n  updatePost(id, postData) {\n    return api.put(`/posts/${id}`, postData);\n  },\n\n  // 删除帖子\n  deletePost(id) {\n    return api.delete(`/posts/${id}`);\n  }\n};\n\n// 智能洞察API\nconst insightsApi = {\n  // 获取任务完成情况总结\n  getTaskInsights(period = 'week') {\n    return api.get('/insights/tasks', { params: { period } });\n  },\n  \n  // 获取每周总结\n  getWeeklyInsights(date) {\n    const params = {};\n    if (date) params.date = date;\n    return api.get('/insights/weekly', { params });\n  },\n  \n  // 获取AI智能分析\n  getAIAnalysis() {\n    return api.get('/insights/ai-analysis', { \n      timeout: 40000\n    });\n  }\n};\n\nexport { plantApi, taskApi, authApi, postApi, insightsApi };\nexport default api; ","<template>\n  <div class=\"calendar-container\">\n    <div class=\"calendar-header\">\n      <h1>日历</h1>\n      <div class=\"calendar-nav\">\n        <button @click=\"prevMonth\" class=\"nav-btn\">\n          <el-icon><ArrowLeftBold /></el-icon>\n        </button>\n        <span class=\"current-month\">{{ currentYear }}年{{ currentMonth + 1 }}月</span>\n        <button @click=\"nextMonth\" class=\"nav-btn\">\n          <el-icon><ArrowRightBold /></el-icon>\n        </button>\n      </div>\n      <div class=\"view-toggle\">\n        <button @click=\"toggleView('calendar')\" :class=\"{ active: currentView === 'calendar' }\">日历视图</button>\n        <button @click=\"toggleView('chart')\" :class=\"{ active: currentView === 'chart' }\">数据视图</button>\n      </div>\n    </div>\n\n\n    <div v-if=\"currentView === 'calendar'\" class=\"calendar-view\">\n      <div class=\"custom-calendar\">\n        <div class=\"calendar-weekdays\">\n          <div class=\"weekday\" v-for=\"day in ['一', '二', '三', '四', '五', '六', '日']\" :key=\"day\">周{{ day }}</div>\n        </div>\n        <div class=\"calendar-days\">\n          <div \n            v-for=\"(day, index) in calendarDays\" \n            :key=\"index\"\n            class=\"calendar-day\"\n            :class=\"{ \n              'empty': !day.date, \n              'selected': selectedDate === day.date,\n              'has-pending-tasks': day.taskCount && day.taskCount.pending > 0,\n              'has-completed-tasks': day.taskCount && day.taskCount.completed > 0,\n              'today': day.date === getCurrentDate(),\n              'holiday': isHoliday(day.date)\n            }\"\n            @click=\"day.date && selectDate(day.date)\"\n          >\n            <template v-if=\"day.date\">\n              <div class=\"day-header\">\n                <div class=\"day-number\">{{ getDayNumber(day.date) }}</div>              \n                <div class=\"holiday-name\" v-if=\"getHoliday(day.date)\">\n                {{ getHoliday(day.date).name }}\n              </div>\n                <div class=\"task-dots\" v-if=\"day.taskCount && (day.taskCount.pending > 0 || day.taskCount.completed > 0)\">\n                  <span \n                    v-for=\"i in Math.min(day.taskCount.pending, 3)\" \n                    :key=\"`pending-${i}`\" \n                    class=\"task-dot pending\" \n                    :class=\"{'important': hasImportantPendingTask(day)}\"\n                  ></span>\n                  <span \n                    v-for=\"i in Math.min(day.taskCount.completed, 3)\" \n                    :key=\"`completed-${i}`\" \n                    class=\"task-dot completed\"\n                  ></span>\n                </div>\n              </div>\n\n              <div class=\"day-indicators\">\n                <span class=\"task-indicator pending\" v-if=\"day.taskCount && day.taskCount.pending > 0\">\n                  {{ day.taskCount.pending }}待办\n                </span>\n                <span class=\"task-indicator completed\" v-if=\"day.taskCount && day.taskCount.completed > 0\">\n                  {{ day.taskCount.completed }}已完成\n                </span>\n                <span class=\"post-indicator\" v-if=\"day.posts && day.posts.length > 0\">\n                  {{ day.posts.length }}条帖子\n                </span>\n              </div>\n            </template>\n          </div>\n        </div>\n      </div>\n\n      <div v-if=\"selectedDate\" class=\"day-detail\">\n        <h2>{{ formatSelectedDate }}</h2>\n        <div v-if=\"dayData\">\n          <!-- 节假日信息 -->\n          <div class=\"holiday-info\" v-if=\"getHoliday(selectedDate)\">\n            <h3>{{ getHoliday(selectedDate).name }}</h3>\n            <p>{{ getHoliday(selectedDate).description }}</p>\n          </div>\n          \n          <!-- 待办任务部分 -->\n          <div class=\"day-tasks pending-tasks-section\" v-if=\"pendingTasks.length > 0\">\n            <h3>待完成任务 ({{ pendingTasks.length }})</h3>\n            <ul>\n              <li v-for=\"task in pendingTasks\" :key=\"task.id\" :class=\"{ important: task.important }\" class=\"pending-task\">\n                <div class=\"task-content\">\n                  <span class=\"task-icon\" v-if=\"task.important\">⭐</span>\n                  <span class=\"task-icon\" v-else>📌</span>\n                  <span class=\"task-title\">{{ task.title }}</span>\n                </div>\n                <div class=\"task-time-container\">\n                  <span class=\"task-time task-deadline\" v-if=\"task.deadline\">\n                    <span v-if=\"isOverdue(task.deadline)\">已截止: </span>\n                    <span v-else>截止: </span>\n                    {{ formatFullDateTime(task.deadline) }}\n                  </span>\n                </div>\n              </li>\n            </ul>\n          </div>\n          \n          <!-- 已完成任务部分 -->\n          <div class=\"day-tasks completed-tasks-section\" v-if=\"completedTasks.length > 0\">\n            <h3>已完成任务 ({{ completedTasks.length }})</h3>\n            <ul>\n              <li v-for=\"task in completedTasks\" :key=\"task.id\" :class=\"{ important: task.important }\" class=\"completed-task\">\n                <div class=\"task-content\">\n                  <span class=\"task-icon\" v-if=\"task.important\">⭐</span>\n                  <span class=\"task-icon\" v-else>✅</span>\n                  <span class=\"task-title\">{{ task.title }}</span>\n                </div>\n                <div class=\"task-time-container\">\n                  <span class=\"task-time task-deadline\" v-if=\"task.deadline\">截止: {{ formatFullDateTime(task.deadline) }}</span>\n                  <span class=\"task-time task-completed\" v-if=\"task.completedAt\">完成: {{ formatFullDateTime(task.completedAt) }}</span>\n                </div>\n              </li>\n            </ul>\n          </div>\n          \n          <div class=\"day-tasks\" v-if=\"dayData.systemTasks && dayData.systemTasks.length > 0\">\n            <h3>系统任务 ({{ dayData.systemTasks.length }})</h3>\n            <ul>\n              <li v-for=\"task in dayData.systemTasks\" :key=\"task.id\" class=\"system-task\">\n                <div class=\"task-content\">\n                  <span class=\"task-icon\">🔄</span>\n                  <span class=\"task-title\">{{ task.title }}</span>\n                </div>\n                <span class=\"task-time\" v-if=\"task.completedAt\">完成: {{ formatFullDateTime(task.completedAt) }}</span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"day-posts\" v-if=\"dayData.posts && dayData.posts.length > 0\">\n            <h3>说说 & 日记 ({{ dayData.posts.length }})</h3>\n            <ul>\n              <li v-for=\"post in dayData.posts\" :key=\"post.id\" :class=\"{ 'diary-post': post.type === 'diary', 'thought-post': post.type !== 'diary' }\">\n                <span class=\"post-type\">{{ post.type === 'diary' ? '📝' : '💬' }}</span>\n                <span class=\"post-title\">{{ post.title || '无标题' }}</span>\n                <span class=\"post-time\">{{ formatTime(post.createdAt) }}</span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"day-thoughts\" v-if=\"dayData.plantThoughts && dayData.plantThoughts.length > 0\">\n            <h3>植物心声</h3>\n            <ul>\n              <li class=\"plant-thought\">\n                <span class=\"thought-icon\">{{ randomPlantThought.icon }}</span>\n                <span class=\"thought-content\">{{ randomPlantThought.content }}</span>\n              </li>\n            </ul>\n          </div>\n          <div class=\"empty-day\" v-if=\"(!dayData.tasks || dayData.tasks.length === 0) && \n                                      (!dayData.systemTasks || dayData.systemTasks.length === 0) && \n                                      (!dayData.posts || dayData.posts.length === 0) &&\n                                      (!dayData.plantThoughts || dayData.plantThoughts.length === 0) &&\n                                      !getHoliday(selectedDate)\">\n            <p>今天没有任何任务或记录</p>\n          </div>\n        </div>\n        <div v-else class=\"loading\">\n          加载中...\n        </div>\n      </div>\n    </div>\n\n    <div v-else-if=\"currentView === 'chart'\" class=\"chart-view\">\n      <div class=\"statistics-container\">\n        <div class=\"stat-box\">\n          <h3>任务完成情况</h3>\n          <div ref=\"taskPieChart\" class=\"chart-item\"></div>\n        </div>\n        <div class=\"stat-box\">\n          <h3>每周任务分布</h3>\n          <div ref=\"weekdayBarChart\" class=\"chart-item\"></div>\n        </div>\n        <div class=\"stat-box\">\n          <h3>说说/日记分布</h3>\n          <div ref=\"postsPieChart\" class=\"chart-item\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\nimport axios from 'axios';\n\nexport default {\n  name: 'CalendarView',\n  data() {\n    return {\n      currentYear: new Date().getFullYear(),\n      currentMonth: new Date().getMonth(),\n      currentView: 'calendar',\n      calendarData: null,\n      statistics: null,\n      selectedDate: null,\n      dayData: null,\n      taskPieChart: null,\n      weekdayBarChart: null,\n      postsPieChart: null,\n      loading: false,\n      useMockData: false,\n      calendarDays: [],\n      randomPlantThought: null,\n      pendingTasks: [],\n      completedTasks: [],\n      selectedHoliday: null,\n      holidays: [\n    \n  { date: '2025-01-01', name: '元旦', description: '元旦是公历新年的第一天，是世界多数国家通用的新年。元旦的由来，可追溯至古罗马。' },\n  { date: '2025-02-10', name: '春节', description: '春节是中国传统节日，是农历新年的第一天，又称阴历年，俗称过年。' }, // 农历正月初一\n  { date: '2025-02-14', name: '情人节', description: '情人节是西方的传统节日，起源于古罗马。这一天，人们向爱人或心仪的人表达爱意。' },\n  { date: '2025-02-24', name: '元宵节', description: '元宵节是中国传统节日，在农历正月十五，是春节之后的第一个重要节日。' },\n  { date: '2025-03-08', name: '妇女节', description: '国际妇女节是为纪念妇女权利的运动，每年3月8日庆祝。' },\n  { date: '2025-04-04', name: '清明节', description: '清明节是中国传统节日，也是最重要的祭祀节日之一，是祭祖和扫墓的日子。' },\n  { date: '2025-05-01', name: '劳动节', description: '国际劳动节是世界上大多数国家的劳动节，定在每年的5月1日。' },\n  { date: '2025-05-12', name: '母亲节', description: '母亲节是一个感谢母亲的节日，以歌颂母亲、母性而于每年5月的第二个星期日庆祝。' },\n  { date: '2025-05-20', name: '校庆日', description: '南京大学123周年校庆，南大生日快乐。' },\n  { date: '2025-06-01', name: '儿童节', description: '国际儿童节是为了保障世界各国儿童的生存权、保健权和受教育权。' },\n  { date: '2025-05-31', name: '端午节', description: '端午节是中国传统节日，又称端阳节、龙舟节、重午节、龙节等。' }, // 农历五月初五\n  { date: '2025-06-15', name: '父亲节', description: '父亲节是感谢父亲的节日，以歌颂父亲、父性而于每年6月的第三个星期日庆祝。' },\n  { date: '2025-08-10', name: '七夕节', description: '七夕节，又名乞巧节、七巧节、七姐节、女儿节、双七节、中国情人节等。' }, // 农历七月初七\n  { date: '2025-09-10', name: '教师节', description: '教师节是尊师重教、普及教育的节日。中国的教师节从1985年开始，定为每年的9月10日。' },\n  { date: '2025-10-06', name: '中秋节', description: '中秋节是中国的传统节日，中秋节的月亮是一年中最圆最亮的。' }, // 农历八月十五\n  { date: '2025-10-01', name: '国庆节', description: '国庆节是中华人民共和国成立的纪念日，定为每年的10月1日。' },\n  { date: '2025-10-29', name: '重阳节', description: '重阳节，又称登高节、重九节，为每年农历九月初九，是中国传统节日。' },\n  { date: '2025-12-25', name: '圣诞节', description: '圣诞节是基督教传统节日，在每年12月25日，庆祝耶稣基督的诞生。' }\n\n      ]\n    };\n  },\n  computed: {\n    formatSelectedDate() {\n      if (!this.selectedDate) return '';\n      const date = new Date(this.selectedDate);\n      const dayOfWeek = ['日', '一', '二', '三', '四', '五', '六'][date.getDay()];\n      return `${date.getFullYear()}年${date.getMonth() + 1}月${date.getDate()}日 星期${dayOfWeek}`;\n    }\n  },\n  mounted() {\n    this.fetchCalendarData();\n  },\n  methods: {\n    isHoliday(date) {\n      return this.holidays.some(holiday => holiday.date === date);\n    },\n    getHoliday(date) {\n      return this.holidays.find(holiday => holiday.date === date);\n    },\n    showHolidayDetail(holiday) {\n      this.selectedHoliday = holiday;\n    },\n    closeHolidayDetail() {\n      this.selectedHoliday = null;\n    },\n    getCurrentDate() {\n      const now = new Date();\n      return `${now.getFullYear()}-${(now.getMonth() + 1).toString().padStart(2, '0')}-${now.getDate().toString().padStart(2, '0')}`;\n    },\n    async fetchCalendarData() {\n      this.loading = true;\n      try {\n        if (this.useMockData) {\n          this.calendarData = this.getMockMonthlyData();\n          this.statistics = this.getMockStatistics();\n        } else {\n          const response = await axios.get('/calendar/monthly', {\n            params: {\n              year: this.currentYear,\n              month: this.currentMonth + 1\n            },\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          \n          // 处理后端返回的数据，确保任务在正确的日期显示\n          const data = response.data;\n          if (data && data.days) {\n            this.processTasksForCalendar(data.days);\n          }\n          \n          this.calendarData = data;\n          \n          const statsResponse = await axios.get('/calendar/statistics', {\n            params: {\n              year: this.currentYear,\n              month: this.currentMonth + 1\n            },\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          \n          this.statistics = statsResponse.data;\n        }\n        \n        this.generateCalendarDays();\n        \n        this.$nextTick(() => {\n          if (this.currentView === 'chart') {\n            this.initStatisticsCharts();\n          }\n          \n          // 默认选中当前日期，如果当月有当前日期\n          const today = this.getCurrentDate();\n          const dayInCurrentMonth = this.calendarDays.find(day => day.date === today);\n          \n          if (dayInCurrentMonth) {\n            this.selectDate(today);\n          } else {\n            // 否则选择第一个有日期的日历单元格\n            const firstDay = this.calendarDays.find(day => day.date);\n            if (firstDay && firstDay.date) {\n              this.selectDate(firstDay.date);\n            }\n          }\n        });\n      } catch (error) {\n        console.error('获取日历数据失败', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    \n    // 处理任务显示逻辑，确保任务在正确的日期显示\n    processTasksForCalendar(days) {\n      // 创建一个日期到天数据的映射\n      const dateMap = {};\n      days.forEach(day => {\n        dateMap[day.date] = day;\n        \n        // 确保每一天都有tasks属性\n        if (!day.tasks) {\n          day.tasks = [];\n        }\n      });\n      \n      // 处理所有任务\n      const allTasks = [];\n      days.forEach(day => {\n        if (day.tasks && day.tasks.length > 0) {\n          day.tasks.forEach(task => {\n            allTasks.push({...task});\n          });\n          // 清空原来的任务列表，后面会重新分配\n          day.tasks = [];\n        }\n      });\n      \n      // 重新分配任务到正确的日期\n      allTasks.forEach(task => {\n        // 获取任务的截止日期和完成日期\n        const deadlineDate = task.deadline ? this.extractDate(task.deadline) : null;\n        const completedDate = task.completedAt ? this.extractDate(task.completedAt) : null;\n        \n        // 判断任务应该显示在哪一天\n        if (!task.completed && deadlineDate && dateMap[deadlineDate]) {\n          // 未完成任务显示在截止日期\n          dateMap[deadlineDate].tasks.push(task);\n        } else if (task.completed && completedDate && dateMap[completedDate]) {\n          // 已完成任务显示在完成日期\n          dateMap[completedDate].tasks.push(task);\n        }\n      });\n      \n      // 更新每天的任务计数\n      days.forEach(day => {\n        if (!day.taskCount) {\n          day.taskCount = {\n            total: 0,\n            completed: 0,\n            pending: 0\n          };\n        }\n        \n        const pendingTasks = day.tasks.filter(t => !t.completed);\n        const completedTasks = day.tasks.filter(t => t.completed);\n        \n        day.taskCount.total = day.tasks.length;\n        day.taskCount.completed = completedTasks.length;\n        day.taskCount.pending = pendingTasks.length;\n      });\n    },\n    \n    // 提取日期部分\n    extractDate(dateTimeString) {\n      return dateTimeString.split('T')[0];\n    },\n\n    generateCalendarDays() {\n      this.calendarDays = [];\n      if (!this.calendarData || !this.calendarData.days) return;\n      \n      const year = this.currentYear;\n      const month = this.currentMonth;\n      \n      // 获取当月第一天是星期几 (0-6, 0是星期日)\n      const firstDay = new Date(year, month, 1).getDay();\n      // 调整为从星期一开始 (1-7, 7是星期日)\n      const firstDayOfWeek = firstDay === 0 ? 7 : firstDay;\n      \n      // 获取当月天数\n      const daysInMonth = new Date(year, month + 1, 0).getDate();\n      \n      // 添加上个月的占位\n      for (let i = 1; i < firstDayOfWeek; i++) {\n        this.calendarDays.push({ date: null });\n      }\n      \n      // 添加当月日期\n      for (let day = 1; day <= daysInMonth; day++) {\n        const date = `${year}-${(month + 1).toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n        const dayData = this.calendarData.days.find(d => d.date === date) || { date };\n        this.calendarDays.push(dayData);\n      }\n      \n      // 如果需要，添加下个月的占位，使总数为7的倍数\n      const remainingSlots = 7 - (this.calendarDays.length % 7);\n      if (remainingSlots < 7) {\n        for (let i = 0; i < remainingSlots; i++) {\n          this.calendarDays.push({ date: null });\n        }\n      }\n    },\n    \n    getDayNumber(dateString) {\n      return parseInt(dateString.split('-')[2]);\n    },\n    \n    selectDate(date) {\n      this.selectedDate = date;\n      this.fetchDayData(date);\n      \n      // 如果是节假日，显示节假日详情\n      const holiday = this.getHoliday(date);\n      if (holiday) {\n        this.showHolidayDetail(holiday);\n      }\n    },\n    \n    async fetchDayData(date) {\n      try {\n        if (this.useMockData) {\n          this.dayData = this.getMockDayData(date);\n        } else {\n          const response = await axios.get('/calendar/day', {\n            params: {\n              date: date\n            },\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem('token')}`\n            }\n          });\n          \n          this.dayData = response.data;\n          \n          // 重新处理当日的任务数据，确保任务在正确的位置显示\n          this.processDayTasks(date);\n        }\n        \n        // 生成随机植物心声\n        if (this.dayData && this.dayData.plantThoughts && this.dayData.plantThoughts.length > 0) {\n          const randomIndex = Math.floor(Math.random() * this.dayData.plantThoughts.length);\n          this.randomPlantThought = this.dayData.plantThoughts[randomIndex];\n        } else {\n          this.randomPlantThought = null;\n        }\n      } catch (error) {\n        console.error('获取日期详情失败', error);\n        this.dayData = null;\n        this.randomPlantThought = null;\n        this.pendingTasks = [];\n        this.completedTasks = [];\n      }\n    },\n    \n    // 处理单日任务数据，确保任务在正确的位置显示\n    processDayTasks(selectedDate) {\n      if (!this.dayData) {\n        this.dayData = { tasks: [] };\n      }\n      \n      if (!this.calendarData || !this.calendarData.days) return;\n      \n      // 创建原始任务的副本，以便重新分配\n      const allTasks = [];\n      this.calendarData.days.forEach(day => {\n        if (day.tasks && day.tasks.length > 0) {\n          day.tasks.forEach(task => {\n            allTasks.push({...task});\n          });\n        }\n      });\n      \n      // 找到应该显示在当天的任务\n      const todayTasks = [];\n      \n      allTasks.forEach(task => {\n        const deadlineDate = task.deadline ? this.extractDate(task.deadline) : null;\n        const completedDate = task.completedAt ? this.extractDate(task.completedAt) : null;\n        \n        // 待办任务显示在截止日期\n        if (!task.completed && deadlineDate === selectedDate) {\n          todayTasks.push(task);\n        }\n        \n        // 已完成任务显示在完成日期\n        if (task.completed && completedDate === selectedDate) {\n          todayTasks.push(task);\n        }\n      });\n      \n      // 更新dayData中的任务\n      this.dayData.tasks = todayTasks;\n      \n      // 更新侧边栏中的待办和已完成任务列表\n      this.pendingTasks = todayTasks.filter(task => !task.completed);\n      this.completedTasks = todayTasks.filter(task => task.completed);\n      \n      console.log(`处理日期 ${selectedDate} 的任务:`, {\n        总任务: todayTasks.length,\n        待办: this.pendingTasks.length,\n        已完成: this.completedTasks.length\n      });\n    },\n    \n    getMockMonthlyData() {\n      const days = [];\n      const year = this.currentYear;\n      const month = this.currentMonth + 1;\n      const daysInMonth = new Date(year, month, 0).getDate();\n      \n      // 首先创建当月所有日期\n      for (let day = 1; day <= daysInMonth; day++) {\n        const date = `${year}-${month.toString().padStart(2, '0')}-${day.toString().padStart(2, '0')}`;\n        \n        days.push({\n          date: date,\n          taskCount: {\n            total: 0,\n            completed: 0,\n            pending: 0\n          },\n          tasks: [],\n          posts: []\n        });\n      }\n      \n      // 生成随机任务，并将其放在正确的日期\n      const totalTasks = 20; // 模拟20个任务\n      const taskDates = {};\n      \n      for (let i = 0; i < totalTasks; i++) {\n        // 随机选择一个日期作为截止日期\n        const deadlineDay = Math.floor(Math.random() * daysInMonth) + 1;\n        const deadlineDate = `${year}-${month.toString().padStart(2, '0')}-${deadlineDay.toString().padStart(2, '0')}`;\n        \n        // 决定任务是否完成\n        const isCompleted = Math.random() > 0.5;\n        \n        // 如果完成，选择一个完成日期（可能与截止日期不同）\n        let completedDate = null;\n        if (isCompleted) {\n          const completedDay = Math.max(1, Math.min(daysInMonth, deadlineDay + Math.floor(Math.random() * 5) - 2));\n          completedDate = `${year}-${month.toString().padStart(2, '0')}-${completedDay.toString().padStart(2, '0')}`;\n        }\n        \n        const task = {\n          id: `task-${i}`,\n          title: `任务 ${i + 1}`,\n          description: `这是任务 ${i + 1} 的描述`,\n          deadline: `${deadlineDate}T${Math.floor(10 + Math.random() * 8)}:00:00Z`,\n          completed: isCompleted,\n          important: Math.random() > 0.7\n        };\n        \n        if (isCompleted) {\n          task.completedAt = `${completedDate}T${Math.floor(10 + Math.random() * 8)}:${Math.floor(Math.random() * 60)}:00Z`;\n        }\n        \n        // 决定任务显示的日期\n        const displayDate = isCompleted ? completedDate : deadlineDate;\n        \n        // 将任务添加到正确的日期\n        const dayData = days.find(d => d.date === displayDate);\n        if (dayData) {\n          dayData.tasks.push(task);\n        }\n      }\n      \n      // 更新每天的任务计数\n      days.forEach(day => {\n        // 添加随机日记/说说\n        const postCount = Math.floor(Math.random() * 2);\n        for (let i = 0; i < postCount; i++) {\n          const isFirstPost = i === 0;\n          day.posts.push({\n            id: `post-${day.date}-${i}`,\n            title: isFirstPost ? `${month}月${day.date.split('-')[2]}日记录` : `${month}月${day.date.split('-')[2]}日随想`,\n            type: isFirstPost ? 'diary' : 'thought',\n            mood: ['happy', 'excited', 'calm', 'sad'][Math.floor(Math.random() * 4)],\n            createdAt: `${day.date}T${Math.floor(10 + Math.random() * 12)}:${Math.floor(Math.random() * 60)}:00Z`\n          });\n        }\n        \n        // 更新任务计数\n        const pendingTasks = day.tasks.filter(t => !t.completed);\n        const completedTasks = day.tasks.filter(t => t.completed);\n        \n        day.taskCount.total = day.tasks.length;\n        day.taskCount.completed = completedTasks.length;\n        day.taskCount.pending = pendingTasks.length;\n      });\n      \n      return {\n        success: true,\n        year: year,\n        month: month,\n        days: days\n      };\n    },\n    \n    getMockDayData(date) {\n      const dayData = this.calendarData.days.find(d => d.date === date);\n      if (!dayData) return null;\n      \n      const systemTasks = [];\n      if (Math.random() > 0.3) {\n        systemTasks.push({\n          id: `sys-task-${date}-1`,\n          title: '每日植物浇水',\n          completed: Math.random() > 0.3,\n          completedAt: Math.random() > 0.3 ? `${date}T08:30:00Z` : null\n        });\n      }\n      \n      const plantThoughts = [];\n      if (Math.random() > 0.4) {\n        const thoughts = [\n          \"看到你今天完成了任务，真为你高兴！继续保持！\",\n          \"今天阳光真好，我感觉自己又长高了一点~\",\n          \"主人今天看起来心情不错呢，我也跟着开心！\",\n          \"记得定期给我浇水哦，我会为你加油的！\",\n          \"今天完成了这么多任务，你真棒！休息一下吧~\"\n        ];\n        \n        plantThoughts.push({\n          id: `thought-${date}-1`,\n          content: thoughts[Math.floor(Math.random() * thoughts.length)],\n          icon: ['🌱', '🌷', '🌻', '🌿'][Math.floor(Math.random() * 4)],\n          timestamp: `${date}T${Math.floor(12 + Math.random() * 8)}:30:00Z`\n        });\n      }\n      \n      const dateObj = new Date(date);\n      const dayOfWeek = ['星期日', '星期一', '星期二', '星期三', '星期四', '星期五', '星期六'][dateObj.getDay()];\n      \n      const mockDayData = {\n        success: true,\n        date: date,\n        dayOfWeek: dayOfWeek,\n        tasks: dayData.tasks || [],\n        systemTasks: systemTasks,\n        posts: dayData.posts || [],\n        plantThoughts: plantThoughts,\n        statistics: {\n          completionRate: dayData.taskCount?.total > 0 ? (dayData.taskCount.completed / dayData.taskCount.total) * 100 : 100,\n          totalTasks: dayData.taskCount?.total || 0,\n          completedTasks: dayData.taskCount?.completed || 0\n        }\n      };\n      \n      // 生成随机植物心声\n      if (mockDayData.plantThoughts && mockDayData.plantThoughts.length > 0) {\n        const randomIndex = Math.floor(Math.random() * mockDayData.plantThoughts.length);\n        this.randomPlantThought = mockDayData.plantThoughts[randomIndex];\n      } else {\n        this.randomPlantThought = null;\n      }\n      \n      // 分离待办和已完成任务\n      this.pendingTasks = mockDayData.tasks.filter(task => !task.completed);\n      this.completedTasks = mockDayData.tasks.filter(task => task.completed);\n      \n      return mockDayData;\n    },\n    \n    getMockStatistics() {\n      let totalTasks = 0;\n      let completedTasks = 0;\n      let totalPosts = 0;\n      let diaryPosts = 0;\n      let thoughtPosts = 0;\n      \n      this.calendarData.days.forEach(day => {\n        totalTasks += day.taskCount.total;\n        completedTasks += day.taskCount.completed;\n        \n        day.posts.forEach(post => {\n          totalPosts++;\n          if (post.type === 'diary') {\n            diaryPosts++;\n          } else {\n            thoughtPosts++;\n          }\n        });\n      });\n      \n      const weekdayDistribution = {\n        monday: Math.floor(Math.random() * 10) + 5,\n        tuesday: Math.floor(Math.random() * 10) + 5,\n        wednesday: Math.floor(Math.random() * 10) + 8,\n        thursday: Math.floor(Math.random() * 10) + 5,\n        friday: Math.floor(Math.random() * 10) + 5,\n        saturday: Math.floor(Math.random() * 5) + 1,\n        sunday: Math.floor(Math.random() * 5) + 1\n      };\n      \n      return {\n        success: true,\n        period: {\n          year: this.currentYear,\n          month: this.currentMonth + 1\n        },\n        statistics: {\n          totalTasks: totalTasks,\n          completedTasks: completedTasks,\n          completionRate: totalTasks > 0 ? (completedTasks / totalTasks) * 100 : 0,\n          totalPosts: totalPosts,\n          postsByType: {\n            diary: diaryPosts,\n            thought: thoughtPosts\n          },\n          busyDays: this.calendarData.days\n            .filter(day => day.taskCount.total > 2)\n            .map(day => day.date)\n            .slice(0, 3),\n          freeDays: this.calendarData.days\n            .filter(day => day.taskCount.total === 0)\n            .map(day => day.date)\n            .slice(0, 3)\n        },\n        taskDistribution: {\n          byWeekday: weekdayDistribution,\n          byImportance: {\n            important: Math.floor(totalTasks * 0.4),\n            normal: totalTasks - Math.floor(totalTasks * 0.4)\n          }\n        }\n      };\n    },\n    \n    initStatisticsCharts() {\n      if (!this.statistics) return;\n      \n      if (this.taskPieChart) {\n        this.taskPieChart.dispose();\n      }\n      this.taskPieChart = echarts.init(this.$refs.taskPieChart);\n      \n      const stats = this.statistics.statistics;\n      \n      this.taskPieChart.setOption({\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'horizontal',\n          bottom: 0\n        },\n        series: [\n          {\n            type: 'pie',\n            radius: ['40%', '70%'],\n            avoidLabelOverlap: false,\n            itemStyle: {\n              borderRadius: 10,\n              borderColor: '#fff',\n              borderWidth: 2\n            },\n            label: {\n              show: false,\n              position: 'center'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: '18',\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: [\n              { value: stats.completedTasks, name: '已完成' },\n              { value: stats.totalTasks - stats.completedTasks, name: '未完成' }\n            ]\n          }\n        ]\n      });\n      \n      if (this.weekdayBarChart) {\n        this.weekdayBarChart.dispose();\n      }\n      this.weekdayBarChart = echarts.init(this.$refs.weekdayBarChart);\n      \n      const weekdayData = this.statistics.taskDistribution.byWeekday;\n      \n      this.weekdayBarChart.setOption({\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            type: 'shadow'\n          }\n        },\n        xAxis: {\n          type: 'category',\n          data: ['周一', '周二', '周三', '周四', '周五', '周六', '周日']\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [\n          {\n            data: [\n              weekdayData.monday,\n              weekdayData.tuesday,\n              weekdayData.wednesday,\n              weekdayData.thursday,\n              weekdayData.friday,\n              weekdayData.saturday,\n              weekdayData.sunday\n            ],\n            type: 'bar',\n            itemStyle: {\n              color: function(params) {\n                const colorList = ['#91cc75', '#fac858', '#ee6666', '#73c0de', '#3ba272', '#fc8452', '#9a60b4'];\n                return colorList[params.dataIndex];\n              }\n            }\n          }\n        ]\n      });\n      \n      if (this.postsPieChart) {\n        this.postsPieChart.dispose();\n      }\n      this.postsPieChart = echarts.init(this.$refs.postsPieChart);\n      \n      const postsByType = stats.postsByType;\n      \n      this.postsPieChart.setOption({\n        tooltip: {\n          trigger: 'item',\n          formatter: '{b}: {c} ({d}%)'\n        },\n        legend: {\n          orient: 'horizontal',\n          bottom: 0\n        },\n        series: [\n          {\n            type: 'pie',\n            radius: ['40%', '70%'],\n            avoidLabelOverlap: false,\n            itemStyle: {\n              borderRadius: 10,\n              borderColor: '#fff',\n              borderWidth: 2\n            },\n            label: {\n              show: false,\n              position: 'center'\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: '18',\n                fontWeight: 'bold'\n              }\n            },\n            labelLine: {\n              show: false\n            },\n            data: [\n              { value: postsByType.diary, name: '日记' },\n              { value: postsByType.thought, name: '说说' }\n            ]\n          }\n        ]\n      });\n    },\n    \n    prevMonth() {\n      if (this.currentMonth === 0) {\n        this.currentYear--;\n        this.currentMonth = 11;\n      } else {\n        this.currentMonth--;\n      }\n      this.selectedDate = null;\n      this.dayData = null;\n      this.fetchCalendarData();\n    },\n    \n    nextMonth() {\n      if (this.currentMonth === 11) {\n        this.currentYear++;\n        this.currentMonth = 0;\n      } else {\n        this.currentMonth++;\n      }\n      this.selectedDate = null;\n      this.dayData = null;\n      this.fetchCalendarData();\n    },\n    \n    toggleView(view) {\n      this.currentView = view;\n      if (view === 'chart') {\n        this.$nextTick(() => {\n          this.initStatisticsCharts();\n        });\n      }\n    },\n    \n    formatTime(timestamp) {\n      const date = new Date(timestamp);\n      return `${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;\n    },\n    \n    getLastDayOfMonth(year, month) {\n      const lastDay = new Date(year, month + 1, 0).getDate();\n      return `${year}-${(month + 1).toString().padStart(2, '0')}-${lastDay.toString().padStart(2, '0')}`;\n    },\n    \n    isOverdue(deadline) {\n      const today = new Date();\n      const deadlineDate = new Date(deadline);\n      return deadlineDate < today;\n    },\n    \n    hasImportantPendingTask(day) {\n      if (!day || !day.tasks) return false;\n      return day.tasks.some(task => !task.completed && task.important);\n    },\n    \n    formatFullDateTime(timestamp) {\n      const date = new Date(timestamp);\n      return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}`;\n    }\n  },\n  beforeDestroy() {\n    if (this.taskPieChart) {\n      this.taskPieChart.dispose();\n    }\n    if (this.weekdayBarChart) {\n      this.weekdayBarChart.dispose();\n    }\n    if (this.postsPieChart) {\n      this.postsPieChart.dispose();\n    }\n  }\n};\n</script>\n\n<style scoped>\n.calendar-container {\n  width: 100%;\n  height: 100%;\n  padding: 30px;\n  font-family: 'PingFang SC', 'Microsoft YaHei', sans-serif;\n  background: linear-gradient(135deg, #f0f7fa 0%, #f8fbf4 100%);\n  min-height: 100vh;\n  color: #424242;\n  border-radius: 20px;\n}\n\n.calendar-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 30px;\n  padding-bottom: 15px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n}\n\n.calendar-header h1 {\n  font-size: 32px;\n  font-weight: 700;\n  color: #2e7d32;\n  margin: 0;\n  background: linear-gradient(90deg, #2e7d32, #43a047);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n}\n\n.calendar-nav {\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  font-size: 18px;\n  font-weight: 500;\n}\n\n.current-month {\n  font-size: 20px;\n  color: #424242;\n  font-weight: 600;\n  min-width: 110px;\n  text-align: center;\n}\n\n.nav-btn {\n  background: none;\n  border: 1px solid rgba(76, 175, 80, 0.3);\n  border-radius: 12px;\n  padding: 10px 16px;\n  cursor: pointer;\n  transition: all 0.3s;\n  color: #4caf50;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);\n}\n\n.nav-btn:hover {\n  background-color: rgba(76, 175, 80, 0.1);\n  border-color: #4caf50;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.view-toggle {\n  display: flex;\n  gap: 12px;\n  background: rgba(255, 255, 255, 0.5);\n  border-radius: 12px;\n  padding: 4px;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.05);\n}\n\n.view-toggle button {\n  padding: 10px 20px;\n  border: none;\n  background: none;\n  border-radius: 10px;\n  cursor: pointer;\n  transition: all 0.3s;\n  font-weight: 500;\n  color: #666;\n  font-size: 15px;\n}\n\n.view-toggle button.active {\n  background-color: #4caf50;\n  color: white;\n  box-shadow: 0 2px 8px rgba(76, 175, 80, 0.3);\n}\n\n.calendar-view {\n  display: flex;\n  gap: 25px;\n  height: calc(100% - 80px);\n}\n\n.custom-calendar {\n  width: 65%;\n  min-height: 450px;\n  background-color: #ffffff;\n  border-radius: 20px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.06);\n  padding: 25px;\n  overflow: hidden;\n  transition: all 0.3s;\n  backdrop-filter: blur(10px);\n}\n\n.calendar-weekdays {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  text-align: center;\n  font-weight: bold;\n  margin-bottom: 15px;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n  padding-bottom: 10px;\n}\n\n.weekday {\n  padding: 10px;\n  color: #757575;\n  font-size: 15px;\n  font-weight: 600;\n}\n\n.calendar-days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-gap: 10px;\n}\n\n.calendar-day {\n  aspect-ratio: 1;\n  border-radius: 16px;\n  border: 1px solid #f0f0f0;\n  padding: 10px;\n  display: flex;\n  flex-direction: column;\n  cursor: pointer;\n  transition: all 0.3s;\n  background-color: #fff;\n  position: relative;\n  overflow: hidden;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.03);\n}\n\n.calendar-day:hover:not(.empty) {\n  background-color: #f9f9f9;\n  transform: translateY(-3px);\n  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.07);\n  border-color: rgba(76, 175, 80, 0.2);\n}\n\n.calendar-day.empty {\n  background-color: rgba(249, 249, 249, 0.5);\n  cursor: default;\n  opacity: 0.4;\n  border: 1px dashed #e0e0e0;\n}\n\n.calendar-day.selected {\n  border: 2px solid #4caf50;\n  box-shadow: 0 6px 15px rgba(76, 175, 80, 0.25);\n  background-color: #e8f5e9;\n}\n\n.calendar-day.has-events {\n  background-color: #f1f8e9;\n}\n\n.calendar-day.today {\n  background-color: white;\n  position: relative;\n}\n\n.calendar-day.today .day-number {\n  color: #2e7d32;\n  font-weight: 700;\n}\n\n.calendar-day.today::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  height: 4px;\n  background: linear-gradient(90deg, #2e7d32, #4caf50);\n  border-radius: 4px 4px 0 0;\n}\n\n.calendar-day.has-events::after {\n  content: '';\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  height: 8px;\n  width: 8px;\n  border-radius: 50%;\n  background-color: #4caf50;\n}\n\n.calendar-day.has-pending-tasks {\n  background-color: rgba(33, 150, 243, 0.05);\n}\n\n.calendar-day.has-completed-tasks {\n  background-color: rgba(76, 175, 80, 0.05);\n}\n\n.calendar-day.has-pending-tasks.has-completed-tasks {\n  background: linear-gradient(135deg, rgba(33, 150, 243, 0.05) 0%, rgba(76, 175, 80, 0.05) 100%);\n}\n\n/* 新增样式：节假日日期的样式 */\n.calendar-day.holiday {\n  background-color: rgba(255, 152, 0, 0.1);\n  border: 1px solid rgba(255, 152, 0, 0.3);\n}\n\n.calendar-day.holiday .holiday-name {\n  color: #ff6d00;\n  font-size: 12px;\n  font-weight: 600;\n  margin-top: 2px;\n  text-align: center;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  background-color: rgba(255, 152, 0, 0.15);\n  border-radius: 10px;\n  padding: 2px 4px;\n}\n\n/* 新增样式：日期和任务点在同一行 */\n.day-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 4px;\n}\n\n.task-dots {\n  display: flex;\n  gap: 2px;\n}\n\n.task-dot {\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n}\n\n.task-dot.pending {\n  background-color: #2196f3;\n}\n\n.task-dot.pending.important {\n  background-color: #ff9800;\n  transform: scale(1.2);\n}\n\n.task-dot.completed {\n  background-color: #4caf50;\n}\n\n.day-number {\n  font-size: 18px;\n  font-weight: 700;\n  color: #424242;\n}\n\n.day-indicators {\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  font-size: 12px;\n  margin-top: auto;\n}\n\n.task-indicator {\n  color: #4caf50;\n  font-weight: 600;\n  display: inline-flex;\n  align-items: center;\n  background-color: rgba(76, 175, 80, 0.1);\n  padding: 2px 6px;\n  border-radius: 20px;\n  font-size: 10px;\n  margin-bottom: 2px;\n}\n\n.task-indicator.pending {\n  color: #2196f3;\n  background-color: rgba(33, 150, 243, 0.1);\n}\n\n.task-indicator.pending::before {\n  content: '📋';\n  margin-right: 3px;\n  font-size: 10px;\n}\n\n.task-indicator.completed {\n  color: #4caf50;\n  background-color: rgba(76, 175, 80, 0.1);\n}\n\n.task-indicator.completed::before {\n  content: '✅';\n  margin-right: 3px;\n  font-size: 10px;\n}\n\n.post-indicator {\n  color: #ff9800;\n  font-weight: 600;\n  display: inline-flex;\n  align-items: center;\n  background-color: rgba(255, 152, 0, 0.1);\n  padding: 2px 6px;\n  border-radius: 20px;\n  font-size: 10px;\n}\n\n.post-indicator::before {\n  content: '📝';\n  margin-right: 3px;\n  font-size: 10px;\n}\n\n.day-detail {\n  width: 35%;\n  padding: 25px;\n  overflow-y: auto;\n  height: 100%;\n  background-color: #ffffff;\n  border-radius: 20px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.06);\n  transition: all 0.3s;\n  backdrop-filter: blur(10px);\n  scrollbar-width: thin;\n  scrollbar-color: rgba(76, 175, 80, 0.3) transparent;\n}\n\n.day-detail::-webkit-scrollbar {\n  width: 6px;\n}\n\n.day-detail::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.day-detail::-webkit-scrollbar-thumb {\n  background-color: rgba(76, 175, 80, 0.3);\n  border-radius: 6px;\n}\n\n.day-detail h2 {\n  border-bottom: 1px solid rgba(0, 0, 0, 0.06);\n  padding-bottom: 15px;\n  margin-bottom: 20px;\n  font-size: 22px;\n  color: #2e7d32;\n  font-weight: 700;\n  position: relative;\n}\n\n.day-detail h2::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 80px;\n  height: 3px;\n  background: linear-gradient(90deg, #2e7d32, #4caf50);\n  border-radius: 3px;\n}\n\n/* 新增样式：节假日详情样式 */\n.holiday-info {\n  background-color: rgba(255, 152, 0, 0.1);\n  border-radius: 12px;\n  padding: 15px;\n  margin-bottom: 20px;\n  border-left: 4px solid #ff9800;\n}\n\n.holiday-info h3 {\n  color: #ff6d00;\n  font-size: 18px;\n  margin-bottom: 10px;\n  display: flex;\n  align-items: center;\n}\n\n.holiday-info h3::before {\n  content: '🎉';\n  margin-right: 8px;\n}\n\n.holiday-info p {\n  color: #5d4037;\n  font-size: 14px;\n  line-height: 1.5;\n}\n\n\n.close-btn {\n  background-color: #ff9800;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 10px;\n  cursor: pointer;\n  font-weight: 600;\n  transition: all 0.3s;\n  display: block;\n  margin-left: auto;\n}\n\n.close-btn:hover {\n  background-color: #ff6d00;\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(255, 152, 0, 0.3);\n}\n\n.day-tasks, .day-posts, .day-thoughts {\n  margin-bottom: 30px;\n  padding: 0 5px;\n}\n\n.day-tasks h3, .day-posts h3, .day-thoughts h3 {\n  font-size: 18px;\n  color: #424242;\n  margin-bottom: 15px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n}\n\n.day-tasks h3::before {\n  content: '📋';\n  margin-right: 8px;\n}\n\n.day-posts h3::before {\n  content: '📝';\n  margin-right: 8px;\n}\n\n.day-thoughts h3::before {\n  content: '🌱';\n  margin-right: 8px;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n}\n\nli {\n  padding: 14px 18px;\n  margin-bottom: 12px;\n  border-radius: 12px;\n  background-color: #f9f9f9;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  transition: all 0.3s;\n}\n\nli:hover {\n  box-shadow: 0 6px 15px rgba(0, 0, 0, 0.08);\n  transform: translateY(-2px);\n}\n\nli.completed {\n  text-decoration: line-through;\n  opacity: 0.7;\n  background-color: rgba(76, 175, 80, 0.05);\n}\n\nli.important {\n  border-left: 4px solid #ff5722;\n  background-color: rgba(255, 87, 34, 0.05);\n}\n\nli.diary-post {\n  border-left: 4px solid #4caf50;\n  background-color: rgba(76, 175, 80, 0.05);\n}\n\nli.thought-post {\n  border-left: 4px solid #ff9800;\n  background-color: rgba(255, 152, 0, 0.05);\n}\n\n.task-icon, .post-type, .thought-icon {\n  margin-right: 10px;\n  font-size: 18px;\n}\n\n.task-title, .post-title {\n  flex: 1;\n  font-weight: 500;\n}\n\n.task-time, .post-time {\n  font-size: 12px;\n  color: #757575;\n  margin-left: 10px;\n  background: rgba(0, 0, 0, 0.04);\n  padding: 3px 8px;\n  border-radius: 20px;\n  white-space: nowrap;\n}\n\n.task-time-container {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: 5px;\n  min-width: 220px;\n}\n\n.task-deadline {\n  color: #f44336;\n  font-weight: 500;\n}\n\n.task-completed {\n  color: #4caf50;\n  font-weight: 500;\n}\n\n.chart-view {\n  height: calc(100% - 80px);\n  overflow-y: auto;\n  padding: 15px 0;\n  scrollbar-width: thin;\n  scrollbar-color: rgba(76, 175, 80, 0.3) transparent;\n}\n\n.chart-view::-webkit-scrollbar {\n  width: 6px;\n}\n\n.chart-view::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.chart-view::-webkit-scrollbar-thumb {\n  background-color: rgba(76, 175, 80, 0.3);\n  border-radius: 6px;\n}\n\n.statistics-container {\n  display: flex;\n  flex-wrap: wrap;\n  gap: 25px;\n}\n\n.stat-box {\n  width: calc(50% - 15px);\n  min-width: 300px;\n  height: 350px;\n  border: none;\n  border-radius: 20px;\n  padding: 25px;\n  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.06);\n  background-color: #ffffff;\n  transition: all 0.3s;\n}\n\n.stat-box:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);\n}\n\n.stat-box h3 {\n  text-align: center;\n  margin-bottom: 20px;\n  font-size: 20px;\n  color: #2e7d32;\n  font-weight: 600;\n  position: relative;\n  padding-bottom: 10px;\n}\n\n.stat-box h3::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 60px;\n  height: 3px;\n  background: linear-gradient(90deg, #2e7d32, #4caf50);\n  border-radius: 3px;\n}\n\n.chart-item {\n  width: 100%;\n  height: calc(100% - 45px);\n}\n\n.empty-day {\n  text-align: center;\n  color: #9e9e9e;\n  padding: 60px 0;\n  font-size: 16px;\n  background: rgba(0, 0, 0, 0.02);\n  border-radius: 12px;\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 15px;\n}\n\n.empty-day::before {\n  content: '🌿';\n  font-size: 32px;\n}\n\n.loading {\n  text-align: center;\n  padding: 40px 0;\n  color: #757575;\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.loading::after {\n  content: '';\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  margin-left: 10px;\n  border: 3px solid rgba(76, 175, 80, 0.3);\n  border-radius: 50%;\n  border-top-color: #4caf50;\n  animation: spin 1s ease-in-out infinite;\n}\n\n@keyframes spin {\n  to { transform: rotate(360deg); }\n}\n\n.plant-thought {\n  background-color: #e8f5e9;\n  border-left: 4px solid #4caf50;\n}\n\n.thought-content {\n  font-style: italic;\n  color: #2e7d32;\n  font-size: 15px;\n}\n\n.task-subheader {\n  font-size: 15px;\n  color: #757575;\n  margin: 15px 0 10px;\n  padding-left: 8px;\n  border-left: 3px solid #e0e0e0;\n}\n\nli.pending-task {\n  background-color: rgba(33, 150, 243, 0.05);\n  border-left: 4px solid #2196f3;\n}\n\nli.pending-task.important {\n  background-color: rgba(255, 152, 0, 0.1);\n  border-left: 4px solid #ff9800;\n  position: relative;\n}\n\nli.pending-task.important::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 15px 15px 0;\n  border-color: transparent #ff9800 transparent transparent;\n}\n\nli.completed-task {\n  background-color: rgba(76, 175, 80, 0.05);\n  border-left: 4px solid #4caf50;\n  opacity: 0.8;\n}\n\nli.completed-task.important {\n  background-color: rgba(156, 39, 176, 0.05);\n  border-left: 4px solid #9c27b0;\n  position: relative;\n}\n\nli.completed-task.important::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 0;\n  height: 0;\n  border-style: solid;\n  border-width: 0 15px 15px 0;\n  border-color: transparent #9c27b0 transparent transparent;\n}\n\nli.system-task {\n  background-color: rgba(0, 188, 212, 0.05);\n  border-left: 4px solid #00bcd4;\n}\n\n.task-content {\n  display: flex;\n  align-items: center;\n  flex: 1;\n}\n\n@media (max-width: 768px) {\n  .calendar-container {\n    padding: 20px 15px;\n  }\n  \n  .calendar-view {\n    flex-direction: column;\n  }\n  \n  .custom-calendar, .day-detail {\n    width: 100%;\n  }\n  \n  .custom-calendar {\n    height: auto;\n  }\n  \n  .day-detail {\n    margin-top: 25px;\n    max-height: 500px;\n  }\n  \n  .stat-box {\n    width: 100%;\n  }\n  \n  .calendar-header {\n    flex-direction: column;\n    gap: 15px;\n    align-items: flex-start;\n  }\n  \n  .view-toggle {\n    width: 100%;\n    justify-content: center;\n  }\n  \n  .calendar-nav {\n    width: 100%;\n    justify-content: space-between;\n  }\n  \n  .calendar-day {\n    padding: 5px;\n  }\n  \n  .day-number {\n    font-size: 16px;\n  }\n  \n  .day-indicators {\n    font-size: 9px;\n  }\n  \n  .day-header {\n    flex-wrap: wrap;\n  }\n}\n</style> ","import { render } from \"./Calendar.vue?vue&type=template&id=4df16cf8&scoped=true\"\nimport script from \"./Calendar.vue?vue&type=script&lang=js\"\nexport * from \"./Calendar.vue?vue&type=script&lang=js\"\n\nimport \"./Calendar.vue?vue&type=style&index=0&id=4df16cf8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-4df16cf8\"]])\n\nexport default __exports__","import { createRouter, createWebHashHistory } from 'vue-router'\nimport Calendar from '../components/Calendar.vue'\n\nconst routes = [\n  {\n    path: '/',\n    name: 'Home',\n    component: () => import('../views/Home.vue'),\n    meta: {\n      requiresAuth: true\n    }\n  },\n/**  {\n    path: '/plant-voice',\n    name: 'PlantVoice',\n    component: () => import('../views/PlantVoice.vue'),\n    meta: {\n      requiresAuth: true\n    }\n  }, */\n  {\n    path: '/posts',\n    name: 'Posts',\n    component: () => import('../views/Posts.vue'),\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/garden',\n    name: 'Garden',\n    component: () => import('../views/Garden.vue'),\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/plant-chat',\n    name: 'PlantChat',\n    component: () => import('@/views/PlantChat.vue'),\n    meta: {\n      title: '植物聊天',\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/calendar',\n    name: 'Calendar',\n    component: Calendar,\n    meta: {\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/tasks',\n    name: 'Tasks',\n    component: () => import('@/views/Task.vue'),\n    meta: {\n      title: '任务管理',\n      requiresAuth: true\n    }\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: () => import('@/views/Login.vue'),\n    meta: {\n      title: '用户登录',\n      requiresGuest: true\n    }\n  },\n  {\n    path: '/register',\n    name: 'Register',\n    component: () => import('@/views/Register.vue'),\n    meta: {\n      title: '用户注册',\n      requiresGuest: true\n    }\n  },\n  {\n    path: '/forgot-password',\n    name: 'ForgotPassword',\n    component: () => import('@/views/ForgotPassword.vue'),\n    meta: {\n      title: '忘记密码',\n      requiresGuest: true\n    }\n  },\n  {\n    path: '/reset-password/:token',\n    name: 'ResetPassword',\n    component: () => import('@/views/ResetPassword.vue'),\n    meta: {\n      title: '重置密码',\n      requiresGuest: true\n    }\n  },\n  {\n    path: '/profile',\n    name: 'Profile',\n    component: () => import('@/views/Profile.vue'),\n    meta: {\n      title: '个人资料',\n      requiresAuth: true\n    }\n  }\n]\n\nconst router = createRouter({\n  history: createWebHashHistory(process.env.BASE_URL),\n  routes\n})\n\n// 路由守卫\nrouter.beforeEach((to, from, next) => {\n  // 检查是否需要登录 - 通过localStorage中是否有token判断\n  const token = localStorage.getItem('token')\n  const isAuthenticated = !!token && token.trim() !== ''\n  \n  console.log('路由守卫：', {\n    path: to.path,\n    requiresAuth: to.matched.some(record => record.meta.requiresAuth),\n    isAuthenticated,\n    token: token ? '存在' : '不存在'\n  })\n  \n  // 需要登录但未登录，跳转到登录页\n  if (to.matched.some(record => record.meta.requiresAuth) && !isAuthenticated) {\n    console.log('需要认证，但未登录，重定向到登录页')\n    next({ name: 'Login', query: { redirect: to.fullPath } })\n  } \n  // 已登录但访问游客页面，重定向到首页\n  else if (to.matched.some(record => record.meta.requiresGuest) && isAuthenticated) {\n    console.log('已登录，重定向到首页')\n    next({ name: 'Home' })\n  } \n  // 其他情况正常跳转\n  else {\n    next()\n  }\n})\n\nexport default router ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"js/\" + chunkId + \".\" + {\"92\":\"13520787\",\"111\":\"4fa38688\",\"125\":\"b2f9ab01\",\"147\":\"4af11bbb\",\"338\":\"17b44d32\",\"555\":\"87f118b4\",\"626\":\"d1ae737d\",\"644\":\"1bd3503a\",\"738\":\"0f446088\",\"796\":\"3e42f50f\",\"877\":\"515c399b\",\"908\":\"8f03c0a1\"}[chunkId] + \".js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"css/\" + chunkId + \".\" + {\"92\":\"12928748\",\"111\":\"d9876a07\",\"125\":\"191c7806\",\"147\":\"2426841c\",\"338\":\"80cd97f2\",\"626\":\"c7931205\",\"644\":\"1dd0164c\",\"738\":\"ef81111a\",\"877\":\"7aa854ad\",\"908\":\"52ead9a7\"}[chunkId] + \".css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"zhiyuxinsheng:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t}\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","if (typeof document === \"undefined\") return;\nvar createStylesheet = function(chunkId, fullhref, oldTag, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tif (__webpack_require__.nc) {\n\t\tlinkTag.nonce = __webpack_require__.nc;\n\t}\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && event.type;\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + errorType + \": \" + realHref + \")\");\n\t\t\terr.name = \"ChunkLoadError\";\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tif (linkTag.parentNode) linkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\n\tif (oldTag) {\n\t\toldTag.parentNode.insertBefore(linkTag, oldTag.nextSibling);\n\t} else {\n\t\tdocument.head.appendChild(linkTag);\n\t}\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, null, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"92\":1,\"111\":1,\"125\":1,\"147\":1,\"338\":1,\"626\":1,\"644\":1,\"738\":1,\"877\":1,\"908\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr\n\n// no prefetching\n\n// no preloaded","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkzhiyuxinsheng\"] = self[\"webpackChunkzhiyuxinsheng\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(4256); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["API_URL","process","VUE_APP_API_URL","useAuthStore","defineStore","user","ref","token","localStorage","getItem","loading","error","isAuthenticated","computed","value","userInfo","isAdmin","role","login","async","loginData","email","credentials","password","response","axios","newToken","userData","data","remember","setItem","headers","common","ElMessage","success","err","console","message","register","registrationToken","defaultPlants","name","type","emoji","isMainPlant","plant","log","plantError","forgotPassword","resetPassword","resetData","fetchUserInfo","status","logout","removeItem","initAuth","warn","changePassword","passwordData","updateProfile","profileData","undefined","avatar","usePlantStore","state","plants","currentPlant","thoughts","conversations","hasMoreConversations","isGeneratingThought","actions","fetchPlants","this","plantApi","getPlants","mainPlant","find","p","length","fetchPlantDetail","id","warning","plantId","_id","getPlant","index","findIndex","createPlant","plantData","push","updatePlant","Error","deletePlant","filter","gainExperience","amount","increaseExperience","level","experience","growthStage","levelUp","stageChange","getGrowthStageName","updateGrowthStage","stage","stageMap","fetchPlantThoughts","getPlantThoughts","generatePlantThought","context","thought","Date","now","toString","content","timestamp","toISOString","mood","weather","icon","tag","unshift","fetchConversations","limit","before","getConversations","messages","hasMore","sendMessage","skipUserMessage","userMessage","sender","clearConversations","setCurrentPlant","getters","currentLevel","experienceToNextLevel","currentExp","experiencePercentage","Math","min","getPlantAvatar","recentThoughts","slice","class","_createElementBlock","_normalizeClass","$setup","isAuthRoute","_createBlock","_component_router_view","key","_Fragment","_createElementVNode","autoplay","muted","loop","playsinline","src","_createVNode","_component_el_container","_component_el_aside","width","alt","_component_el_menu","activeMenu","router","_component_el_menu_item","_component_el_icon","_component_House","_component_List","_component_PriceTag","_component_ChatLineRound","_component_Reading","_component_Calendar","_hoisted_1","onClick","_cache","$event","showUserMenu","_component_el_avatar","size","userAvatar","_hoisted_2","_toDisplayString","username","_component_CaretTop","_hoisted_3","args","goToProfile","_component_User","handleLogout","_component_SwitchButton","_component_el_main","Component","_KeepAlive","_resolveDynamicComponent","components","Sunny","House","List","PriceTag","ChatDotRound","ChatLineRound","Reading","Calendar","CaretTop","User","Setting","SwitchButton","setup","useRouter","route","useRoute","authStore","plantStore","authRoutes","some","path","startsWith","ElMessageBox","confirm","confirmButtonText","cancelButtonText","then","catch","goToSettings","alert","handleClickOutside","event","userPanel","document","querySelector","contains","target","onMounted","addEventListener","trim","onBeforeUnmount","removeEventListener","__exports__","render","baseURL","pinia","createPinia","app","createApp","App","component","Object","entries","ElementPlusIconsVue","use","ElementPlus","locale","zhCn","Promise","reject","storedToken","mount","api","timeout","interceptors","request","config","get","post","put","delete","params","taskApi","getTasks","getSystemTasks","completeSystemTask","createTask","taskData","deleteTask","updateTask","completeTask","postApi","getPosts","createPost","postData","updatePost","deletePost","$options","prevMonth","_component_ArrowLeftBold","_hoisted_4","$data","currentYear","currentMonth","nextMonth","_component_ArrowRightBold","_hoisted_5","toggleView","active","currentView","_hoisted_6","_hoisted_7","_hoisted_8","_renderList","day","_hoisted_9","calendarDays","date","selectedDate","taskCount","pending","completed","getCurrentDate","isHoliday","selectDate","_hoisted_11","_hoisted_12","getDayNumber","getHoliday","_hoisted_13","_hoisted_14","i","hasImportantPendingTask","_hoisted_15","_hoisted_16","_hoisted_17","posts","_hoisted_18","_hoisted_19","formatSelectedDate","dayData","_hoisted_20","_hoisted_21","description","pendingTasks","_hoisted_22","task","important","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","title","_hoisted_27","deadline","_hoisted_28","isOverdue","_hoisted_29","_hoisted_30","formatFullDateTime","completedTasks","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","completedAt","_hoisted_38","systemTasks","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","formatTime","createdAt","plantThoughts","_hoisted_47","_hoisted_48","_hoisted_49","randomPlantThought","_hoisted_50","tasks","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","getFullYear","getMonth","calendarData","statistics","taskPieChart","weekdayBarChart","postsPieChart","useMockData","selectedHoliday","holidays","dayOfWeek","getDay","getDate","mounted","fetchCalendarData","methods","holiday","showHolidayDetail","closeHolidayDetail","padStart","getMockMonthlyData","getMockStatistics","year","month","Authorization","days","processTasksForCalendar","statsResponse","generateCalendarDays","$nextTick","initStatisticsCharts","today","dayInCurrentMonth","firstDay","dateMap","forEach","allTasks","deadlineDate","extractDate","completedDate","total","t","dateTimeString","split","firstDayOfWeek","daysInMonth","d","remainingSlots","dateString","parseInt","fetchDayData","getMockDayData","processDayTasks","randomIndex","floor","random","todayTasks","总任务","待办","已完成","totalTasks","deadlineDay","isCompleted","completedDay","max","displayDate","postCount","isFirstPost","dateObj","mockDayData","completionRate","totalPosts","diaryPosts","thoughtPosts","weekdayDistribution","monday","tuesday","wednesday","thursday","friday","saturday","sunday","period","postsByType","diary","busyDays","map","freeDays","taskDistribution","byWeekday","byImportance","normal","dispose","echarts","$refs","stats","setOption","tooltip","trigger","formatter","legend","orient","bottom","series","radius","avoidLabelOverlap","itemStyle","borderRadius","borderColor","borderWidth","label","show","position","emphasis","fontSize","fontWeight","labelLine","weekdayData","axisPointer","xAxis","yAxis","color","colorList","dataIndex","view","getHours","getMinutes","getLastDayOfMonth","lastDay","beforeDestroy","routes","meta","requiresAuth","requiresGuest","createRouter","history","createWebHashHistory","beforeEach","to","from","next","matched","record","query","redirect","fullPath","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","keys","every","splice","r","n","getter","__esModule","a","definition","o","defineProperty","enumerable","f","e","chunkId","all","reduce","promises","u","miniCssF","g","globalThis","Function","window","obj","prop","prototype","hasOwnProperty","inProgress","dataWebpackPrefix","l","url","done","script","needAttach","scripts","getElementsByTagName","s","getAttribute","createElement","charset","nc","setAttribute","onScriptComplete","prev","onerror","onload","clearTimeout","doneFns","parentNode","removeChild","setTimeout","bind","head","appendChild","Symbol","toStringTag","createStylesheet","fullhref","oldTag","resolve","linkTag","rel","nonce","onLinkComplete","errorType","realHref","href","code","insertBefore","nextSibling","findStylesheet","existingLinkTags","dataHref","existingStyleTags","loadStylesheet","installedCssChunks","miniCss","cssChunks","installedChunks","installedChunkData","promise","loadingEnded","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","__webpack_exports__"],"sourceRoot":""}
{"version":3,"file":"js/738.0f446088.js","mappings":"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","sources":["webpack://zhiyuxinsheng/./src/stores/currency.js","webpack://zhiyuxinsheng/./src/views/Garden.vue","webpack://zhiyuxinsheng/./src/views/Garden.vue?1cc9"],"sourcesContent":["import { defineStore } from 'pinia'\nimport api from '../services/api'\nimport { ElMessage } from 'element-plus'\n\nexport const useCurrencyStore = defineStore('currency', {\n  state: () => ({\n    coins: parseInt(localStorage.getItem('coins') || '100'),\n    loading: false\n  }),\n  \n  actions: {\n    // 增加金币\n    addCoins(amount) {\n      this.coins += amount\n      this.saveCoins()\n    },\n    \n    // 减少金币\n    deductCoins(amount) {\n      if (this.coins >= amount) {\n        this.coins -= amount\n        this.saveCoins()\n        return true\n      }\n      return false\n    },\n    \n    // 保存金币到本地存储\n    saveCoins() {\n      localStorage.setItem('coins', this.coins.toString())\n    },\n    \n    // 重置金币\n    resetCoins() {\n      this.coins = 100\n      this.saveCoins()\n    }\n  }\n}) ","<template>\n  <div class=\"garden-page\">\n    <div class=\"garden-background\"></div>\n    \n    <div class=\"container\">\n      <div class=\"garden-header card\">\n        <h2 class=\"card-title\">花语坊</h2>\n        <p class=\"garden-description\">\n          在这里，你可以查看和管理你的植物，打造属于自己的花园。\n        </p>\n      </div>\n      \n      <div class=\"garden-content\">\n        <div class=\"my-garden-section card\">\n          <div class=\"section-header\">\n            <h3 class=\"section-title\">未完成的春天</h3>\n          </div>\n          <div class=\"plant-companionship\" v-if=\"myPlants.length > 0\">\n            不知不觉中，植物已经陪伴你{{ plantDays }}天了,陪你完成了{{ completedTasksCount }}个任务\n          </div>\n          <div class=\"empty-garden\" v-if=\"myPlants.length === 0\">\n            <el-empty description=\"你的花园还空空如也~\">\n              <template #image>\n                <div class=\"empty-image\">🏡</div>\n              </template>\n            </el-empty>\n          </div>\n          \n          <div v-else class=\"garden-plants-row\">\n            <div \n              v-for=\"plant in filteredPlants\" \n              :key=\"plant.id\" \n              class=\"garden-plant-item\"\n              :class=\"{ 'is-main-plant': plant.isMainPlant }\"\n            >\n              <div class=\"plant-avatar\">\n                <WeatherCanvas :weather=\"plant.weather || 'sunny'\" :width=\"200\" :height=\"200\" />\n                <!-- 使用图片替代emoji -->\n                <img :src=\"getPlantImage(plant)\" class=\"plant-image\" alt=\"植物图片\" />\n              </div>\n              \n              <div class=\"plant-details\">\n                <div class=\"plant-header\">\n                  <div class=\"plant-name\">{{ plant.name }}</div>\n                  <div v-if=\"plant.isMainPlant\" class=\"main-plant-badge\">\n                    <el-tag size=\"small\" type=\"success\" effect=\"dark\">展示植物</el-tag>\n                  </div>\n                </div>\n                \n                <div class=\"plant-level-container\">\n                  <div class=\"plant-level\">等级: <span class=\"level-value\">{{ plant.level }}</span></div>\n                  <el-progress \n                    :percentage=\"calculatePlantExp(plant)\" \n                    :format=\"expFormat\" \n                    :stroke-width=\"10\"\n                    class=\"plant-exp-progress\"\n                  />\n                </div>\n                \n                <!-- 添加天气选择器 -->\n                <div class=\"plant-weather-selector\">\n                  <span class=\"weather-label\">环境:</span>\n                  <div class=\"weather-options\">\n                    <span \n                      class=\"weather-option\" \n                      :class=\"{ active: plant.weather === 'sunny' || !plant.weather }\"\n                      title=\"晴天\"\n                      @click=\"updatePlantWeather(plant, 'sunny')\"\n                    >☀️</span>\n                    <span \n                      class=\"weather-option\" \n                      :class=\"{ active: plant.weather === 'rainy' }\"\n                      title=\"下雨\"\n                      @click=\"updatePlantWeather(plant, 'rainy')\"\n                    >🌧️</span>\n                    <span \n                      class=\"weather-option\" \n                      :class=\"{ active: plant.weather === 'cloudy' }\"\n                      title=\"多云\"\n                      @click=\"updatePlantWeather(plant, 'cloudy')\"\n                    >☁️</span>\n                  </div>\n                </div>\n                \n                <!-- 添加植物心声显示区 -->\n                <div class=\"plant-thought-bubble\" \n                  v-if=\"(plant.id === showingThoughtForPlantId || plant._id === showingThoughtForPlantId) && currentThought\">\n                  <div class=\"thought-bubble-pointer\"></div>\n                  <div class=\"thought-content\">\n                    <!-- 已显示的文本 -->\n                    <span v-for=\"(segment, index) in displayedSegments\" :key=\"index\" class=\"message-segment\">\n                      {{ segment }}\n                    </span>\n                    <!-- 当前正在打字的文本 -->\n                    <span class=\"typing-segment\">{{ currentTypingText }}</span>\n                    <!-- 打字指示器 -->\n                    <span v-if=\"isTyping\" class=\"typing-cursor\">|</span>\n                  </div>\n                  <div class=\"thought-time\">{{ formatThoughtTime(currentThought.timestamp) }}</div>\n                </div>\n\n                <!-- 添加回植物介绍文本 -->\n                <div class=\"plant-introduction\">\n                  <div class=\"intro-title\">植物介绍</div>\n                  <div class=\"intro-text\">{{ getPlantIntroduction(plant.type) }}</div>\n                </div>\n              </div>\n              \n              <div class=\"plant-actions\">\n                <button class=\"custom-btn listen-btn\" @click=\"listenToPlantThought(plant)\">\n                  <span class=\"btn-icon\">💬</span>\n                  <span class=\"btn-text\">聆听心声</span>\n                </button>\n                <button \n                  class=\"custom-btn main-btn\" \n                  @click=\"setAsMainPlant(plant)\"\n                  :disabled=\"plant.isMainPlant\"\n                  :class=\"{ 'disabled': plant.isMainPlant }\"\n                >\n                  <span class=\"btn-icon\">⭐</span>\n                  <span class=\"btn-text\">设为展示植物</span>\n                </button>\n              </div>\n            </div>\n          </div>\n          \n\n        </div>\n      </div>\n    </div>\n    \n    <PlantDialog \n      :messages=\"plantStore.thoughts\"\n      :is-visible=\"showPlantThoughtDialog\"\n      :show-buttons=\"false\"\n      @primary-action=\"showPlantThoughtDialog = false\"\n    />\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted, computed, watch, onUnmounted, nextTick } from 'vue'\nimport { useCurrencyStore } from '../stores/currency'\nimport { usePlantStore } from '../stores/plant'\nimport { useTaskStore } from '../stores/task'\nimport { ElMessage } from 'element-plus'\nimport WeatherCanvas from '@/components/WeatherCanvas.vue'\nimport PlantDialog from '@/components/PlantDialog.vue'\nimport { format, formatDistance } from 'date-fns'\nimport zhCN from 'date-fns/locale/zh-CN'\n\n// 导入植物图片\nimport plant1Level1 from '@/assets/images/plant/1-1.png'\nimport plant1Level2 from '@/assets/images/plant/1-2.png'\nimport plant1Level3 from '@/assets/images/plant/1-3.png'\nimport plant2Level1 from '@/assets/images/plant/2-1.png'\nimport plant2Level2 from '@/assets/images/plant/2-2.png'\nimport plant2Level3 from '@/assets/images/plant/2-3.png'\nimport plant3Level1 from '@/assets/images/plant/3-1.png'\nimport plant3Level2 from '@/assets/images/plant/3-2.png'\nimport plant3Level3 from '@/assets/images/plant/3-3.png'\nimport plant4Level1 from '@/assets/images/plant/4-1.png'\nimport plant4Level2 from '@/assets/images/plant/4-2.png'\nimport plant4Level3 from '@/assets/images/plant/4-3.png'\nimport plant5Level1 from '@/assets/images/plant/5-1.png'\nimport plant5Level2 from '@/assets/images/plant/5-2.png'\nimport plant5Level3 from '@/assets/images/plant/5-3.png'\n\nexport default {\n  name: 'GardenPage',\n  components: {\n    WeatherCanvas,\n    PlantDialog\n  },\n  setup() {\n    const currencyStore = useCurrencyStore()\n    const plantStore = usePlantStore()\n    const taskStore = useTaskStore()\n    \n    const selectedPlantForDialog = ref(null)\n    const showPlantThoughtDialog = ref(false)\n    const searchPlant = ref('')\n    \n    // 植物心声相关变量\n    const showingThoughtForPlantId = ref(null)\n    const currentThought = ref(null)\n    const displayedSegments = ref([])\n    const currentTypingText = ref('')\n    const isTyping = ref(false)\n    const typeInterval = ref(null)\n    const typingSpeed = 50 // 打字速度(毫秒/字符)\n    const segmentDelay = 1000 // 段落之间的延迟(毫秒)\n    \n    // 将消息拆分为段落\n    const splitMessageIntoSegments = (message) => {\n      if (!message) return []\n      // 按双换行或单换行分割\n      return message.split(/\\n\\n|\\n/).filter(segment => segment.trim() !== '')\n    }\n    \n    // 开始打字效果\n    const startTypingEffect = (message) => {\n      // 停止任何正在进行的打字效果\n      stopTypingEffect()\n      \n      // 如果消息为空，直接返回\n      if (!message) {\n        return\n      }\n      \n      try {\n        // 重置状态\n        displayedSegments.value = []\n        currentTypingText.value = ''\n        isTyping.value = true\n        \n        // 将消息拆分为段落\n        const segments = splitMessageIntoSegments(message)\n        \n        // 如果没有段落，显示整个消息\n        if (segments.length === 0) {\n          displayedSegments.value = [message]\n          isTyping.value = false\n          return\n        }\n        \n        let currentSegmentIndex = 0\n        \n        const typeNextSegment = () => {\n          if (currentSegmentIndex >= segments.length) {\n            // 所有段落都已显示完成\n            finishTyping()\n            return\n          }\n          \n          const currentSegment = segments[currentSegmentIndex]\n          let charIndex = 0\n          \n          // 清除之前的打字效果定时器\n          if (typeInterval.value) clearInterval(typeInterval.value)\n          \n          // 逐字显示当前段落\n          typeInterval.value = setInterval(() => {\n            if (charIndex <= currentSegment.length) {\n              currentTypingText.value = currentSegment.substring(0, charIndex)\n              charIndex++\n            } else {\n              // 当前段落打字完成\n              clearInterval(typeInterval.value)\n              \n              // 将完成的段落添加到已显示段落数组\n              displayedSegments.value.push(currentSegment)\n              currentTypingText.value = ''\n              \n              // 移动到下一段\n              currentSegmentIndex++\n              \n              // 延迟一会儿再显示下一段\n              if (currentSegmentIndex < segments.length) {\n                setTimeout(typeNextSegment, segmentDelay)\n              } else {\n                // 所有段落都已显示完成\n                finishTyping()\n              }\n            }\n          }, typingSpeed)\n        }\n        \n        // 开始显示第一段\n        typeNextSegment()\n      } catch (error) {\n        console.error('打字效果出错:', error)\n        // 发生错误时显示整个消息\n        displayedSegments.value = [message]\n        isTyping.value = false\n      }\n    }\n    \n    // 完成打字效果\n    const finishTyping = () => {\n      isTyping.value = false\n      if (typeInterval.value) {\n        clearInterval(typeInterval.value)\n        typeInterval.value = null\n      }\n    }\n    \n    // 停止打字效果\n    const stopTypingEffect = () => {\n      isTyping.value = false\n      if (typeInterval.value) {\n        clearInterval(typeInterval.value)\n        typeInterval.value = null\n      }\n      displayedSegments.value = []\n      currentTypingText.value = ''\n    }\n    \n    // 获取当前时间段\n    const getTimeOfDay = () => {\n      const hour = new Date().getHours()\n      if (hour >= 5 && hour < 12) return 'morning'\n      if (hour >= 12 && hour < 18) return 'afternoon'\n      return 'evening'\n    }\n    \n    // 获取植物介绍文本\n    const getPlantIntroduction = (type) => {\n      if (!type) return ''\n      \n      const plantIntros = {\n        '向日葵': '向日葵并不关心世界是否在崩溃，她只关心阳光够不够晒到她的脸。她早晨起得比闹钟还早，晚上睡得比月亮还迟。她的梦想很简单——开一场阳光发布会，最好还能有早餐提供。',\n        '仙人掌': '没有人真正了解仙人掌。甚至连仙人掌自己也不是很确定，他到底是植物，还是某种硬核的情绪集合体。他喜欢独处，不是因为孤独，而是因为社交时要说\"你好\"太麻烦。',\n        '郁金香': '\"优雅\"两个字，如果有具象化，那一定是郁金香——当然，是他自己说的。他不屑于参加普通植物的舞会，只在严寒的午夜出场，然后一言不发地……香了一下。',\n        '白百合': '她不是安静，她是带着回声的沉默。白百合总是在别人崩溃边缘时，递上一句\"要不要喝点热水？\"她喜欢站在风里发呆，说那样能听见遥远星系的心跳——虽然其他植物觉得那是空气流通的声音。',\n        '白百何': '她不是安静，她是带着回声的沉默。白百合总是在别人崩溃边缘时，递上一句\"要不要喝点热水？\"她喜欢站在风里发呆，说那样能听见遥远星系的心跳——虽然其他植物觉得那是空气流通的声音。',\n        '玫瑰': '她总是自带BGM登场，哪怕背景是一片荒芜草地，她也能走出红毯既视感。玫瑰没兴趣当墙角里的盆栽，她要做花园的女主角，还是自编自导自演的那种。'\n      }\n      \n      return plantIntros[type.trim()] || ''\n    }\n    \n    // 在组件销毁时清除定时器\n    onUnmounted(() => {\n      stopTypingEffect()\n    })\n    \n    // 植物图片映射\n    const plantImages = {\n      '玫瑰': {\n        1: plant1Level1,\n        2: plant1Level2,\n        3: plant1Level3\n      },\n      '仙人掌': {\n        1: plant2Level1,\n        2: plant2Level2,\n        3: plant2Level3\n      },\n      '郁金香': {\n        1: plant3Level1,\n        2: plant3Level2,\n        3: plant3Level3\n      },\n      '白百何': {\n        1: plant4Level1,\n        2: plant4Level2,\n        3: plant4Level3\n      },\n      '向日葵': {\n        1: plant5Level1,\n        2: plant5Level2,\n        3: plant5Level3\n      }\n    }\n    \n    // 获取植物图片\n    const getPlantImage = (plant) => {\n      if (!plant || !plant.type) {\n        return plant1Level1 // 返回默认图片\n      }\n\n      const type = plant.type.trim() // 移除可能存在的前后空格\n      const level = plant.level || 1\n      \n      // 检查植物类型和等级限制\n      const clampLevel = Math.min(Math.max(level, 1), 3) // 限制等级在1-3之间\n      \n      // 根据植物类型返回对应图片\n      const plantTypeImages = plantImages[type]\n      if (!plantTypeImages) {\n        return plant1Level1 // 如果找不到对应类型的图片，返回默认图片\n      }\n\n      return plantTypeImages[clampLevel] || plant1Level1 // 如果找不到对应等级的图片，返回默认图片\n    }\n    \n    // 加载植物列表\n    onMounted(async () => {\n      // 只有当植物列表为空时才重新获取，避免重复请求\n      if (plantStore.plants.length === 0) {\n        await plantStore.fetchPlants()\n      }\n      \n      // 如果没有主植物，将第一个设为主植物\n      const mainPlant = plantStore.plants.find(p => p.isMainPlant)\n      if (!mainPlant && plantStore.plants.length > 0) {\n        const firstPlant = plantStore.plants[0]\n        const plantId = firstPlant._id || firstPlant.id\n        if (plantId) {\n          try {\n            await plantStore.updatePlant(plantId, { isMainPlant: true })\n            console.log('设置主植物成功:', firstPlant.name)\n          } catch (error) {\n            console.error('设置主植物失败:', error)\n            ElMessage.error('设置主植物失败')\n          }\n        }\n      }\n      \n      // 只有当任务列表为空时才重新获取\n      if (taskStore.completedTasks.length === 0) {\n        await taskStore.fetchTasks()\n      }\n    })\n    \n    // 计算植物经验百分比\n    const calculatePlantExp = (plant) => {\n      const currentExp = plant.experience || 0\n      const level = plant.level || 1\n      return Math.min(100, (currentExp / (level * 100)) * 100)\n    }\n    \n    // 经验格式化\n    const expFormat = (percentage) => {\n      // 修复：通过percentage可以找到对应的植物，不需要依赖selectedPlantForDialog\n      // 在进度条中显示时，会传入当前实际的percentage\n      const plant = plantStore.plants.find(p => \n        calculatePlantExp(p) === percentage\n      )\n      \n      // 如果找不到匹配的植物，返回百分比\n      if (!plant) {\n        // 回退到通过selectedPlantForDialog查找植物\n        if (selectedPlantForDialog.value) {\n          const fallbackPlant = plantStore.plants.find(p => \n            (p._id === selectedPlantForDialog.value._id) || \n            (p.id === selectedPlantForDialog.value.id)\n          )\n          if (fallbackPlant) {\n            const currentExp = fallbackPlant.experience || 0\n            const level = fallbackPlant.level || 1\n            const nextLevelExp = level * 100\n            return `${currentExp}/${nextLevelExp}`\n          }\n        }\n        return `${Math.round(percentage)}%`\n      }\n      \n      const currentExp = plant.experience || 0\n      const level = plant.level || 1\n      const nextLevelExp = level * 100\n      return `${currentExp}/${nextLevelExp}`\n    }\n    \n    // 更新植物天气\n    const updatePlantWeather = async (plant, weather) => {\n      if (plant.weather === weather) return\n      \n      // 获取正确的植物ID\n      const plantId = plant._id || plant.id\n      if (!plantId) {\n        console.error('无法更新植物天气: 植物ID无效', plant)\n        ElMessage.error('更新失败：无法获取植物ID')\n        return\n      }\n      \n      console.log('更新植物天气，植物ID:', plantId, '天气:', weather)\n      try {\n        await plantStore.updatePlant(plantId, { weather })\n        ElMessage.success('植物环境已更新')\n      } catch (error) {\n        console.error('更新植物天气失败:', error)\n        ElMessage.error(`更新失败: ${error.message || '未知错误'}`)\n      }\n    }\n    \n    // 格式化心声时间为相对时间\n    const formatThoughtTime = (dateString) => {\n      if (!dateString) return ''\n      \n      try {\n        return formatDistance(new Date(dateString), new Date(), {\n          addSuffix: true,\n          locale: zhCN\n        })\n      } catch (error) {\n        console.error('格式化日期失败:', error)\n        return format(new Date(dateString), 'yyyy-MM-dd HH:mm')\n      }\n    }\n    \n    // 显示植物心声对话框\n    const showDialog = async (plant) => {\n      // 获取正确的植物ID\n      const plantId = plant._id || plant.id\n      if (!plantId) {\n        console.error('无法显示植物心声: 植物ID无效', plant)\n        ElMessage.error('无法显示植物心声：植物ID无效')\n        return\n      }\n      \n      try {\n        // 设置当前选中的植物，并展示心声对话框\n        selectedPlantForDialog.value = plant\n        showPlantThoughtDialog.value = true\n        \n        // 获取植物心声\n        const thoughts = await plantStore.fetchPlantThoughts(plantId)\n        // 将植物心声转换为消息格式\n        plantStore.thoughts = thoughts.map(thought => ({\n          type: 'plant',\n          content: thought.content,\n          timestamp: thought.timestamp\n        }))\n      } catch (error) {\n        console.error('获取植物心声失败:', error)\n        ElMessage.error('获取植物心声失败')\n      }\n    }\n    \n    // 生成植物心声的方法，用于点击\"聆听心声\"时调用\n    const listenToPlantThought = async (plant) => {\n      // 获取正确的植物ID\n      const plantId = plant._id || plant.id\n      if (!plantId) {\n        console.error('无法获取植物心声: 植物ID无效', plant)\n        ElMessage.error('无法获取植物心声：植物ID无效')\n        return\n      }\n      \n      try {\n        // 设置正在显示心声的植物ID\n        showingThoughtForPlantId.value = plantId\n        \n        // 获取或生成一条植物心声\n        const context = {\n          weather: plant.weather || 'sunny',\n          timeOfDay: getTimeOfDay(),\n          recentTasks: taskStore.completedTasks.slice(0, 3).map(task => ({\n            id: task._id || task.id,\n            title: task.title,\n            completed: true\n          }))\n        }\n        \n        const newThought = await plantStore.generatePlantThought(plantId, context)\n        \n        if (newThought) {\n          // 更新当前心声\n          currentThought.value = newThought\n          \n          // 开始打字效果\n          startTypingEffect(newThought.content)\n          \n          ElMessage({\n            message: '植物想和你说话了！',\n            type: 'success'\n          })\n          \n          // 延长植物心声显示时间\n          setTimeout(() => {\n            if (showingThoughtForPlantId.value === plantId) {\n              showingThoughtForPlantId.value = null\n              stopTypingEffect()\n            }\n          }, 15000) // 15秒后自动关闭\n        } else {\n          ElMessage.warning('植物似乎不想说话...')\n        }\n      } catch (error) {\n        console.error('获取植物心声失败', error)\n        ElMessage.error('获取植物心声失败')\n      }\n    }\n    \n    // 设置主植物\n    const setAsMainPlant = async (plant) => {\n      if (plant.isMainPlant) return\n      \n      // 获取正确的植物ID\n      const plantId = plant._id || plant.id\n      if (!plantId) {\n        console.error('无法设置主植物: 植物ID无效', plant)\n        ElMessage.error('设置失败：无法获取植物ID')\n        return\n      }\n      \n      console.log('设置主植物，植物ID:', plantId)\n      try {\n        // 先将所有植物的主植物状态设置为false\n        for (const p of plantStore.plants) {\n          if (p.isMainPlant) {\n            const prevMainPlantId = p._id || p.id\n            await plantStore.updatePlant(prevMainPlantId, { isMainPlant: false })\n          }\n        }\n        \n        // 设置新的主植物\n        await plantStore.updatePlant(plantId, { isMainPlant: true })\n        \n        // 更新植物心声\n        await plantStore.fetchPlantThoughts(plantId)\n        \n        // 如果当前正在显示植物心声对话框，更新选中的植物\n        if (showPlantThoughtDialog.value) {\n          selectedPlantForDialog.value = plant\n        }\n        \n        ElMessage.success('已设置为主植物')\n      } catch (error) {\n        console.error('设置主植物失败:', error)\n        ElMessage.error(`设置失败: ${error.message || '未知错误'}`)\n      }\n    }\n    \n    // 过滤后的植物列表\n    const filteredPlants = computed(() => {\n      if (!searchPlant.value) return plantStore.plants\n      \n      const search = searchPlant.value.toLowerCase()\n      return plantStore.plants.filter(plant => \n        plant.name.toLowerCase().includes(search)\n      )\n    })\n    \n    // 计算植物陪伴的天数\n    const plantDays = computed(() => {\n      if (plantStore.plants.length === 0) return 0\n      \n      // 使用第一个植物的创建时间计算\n      const firstPlant = plantStore.plants[0]\n      if (!firstPlant || !firstPlant.createdAt) return 0\n      \n      const createdDate = new Date(firstPlant.createdAt)\n      const today = new Date()\n      const diffTime = Math.abs(today - createdDate)\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n      \n      return diffDays\n    })\n    \n    // 获取完成的任务数量\n    const completedTasksCount = computed(() => {\n      return taskStore.completedTasks.length\n    })\n    \n    // 监听主植物的变化\n    watch(() => plantStore.plants.find(p => p.isMainPlant), async (newMainPlant) => {\n      if (newMainPlant) {\n        // 更新选中的植物\n        selectedPlantForDialog.value = newMainPlant\n        \n        // 更新植物心声\n        const plantId = newMainPlant._id || newMainPlant.id\n        if (plantId) {\n          try {\n            const thoughts = await plantStore.fetchPlantThoughts(plantId)\n            \n            // 保存最新的一条心声用于显示在花园中\n            if (thoughts && thoughts.length > 0) {\n              currentThought.value = thoughts[0]\n            }\n            \n            // 如果对话框是打开的，更新植物心声列表\n            if (showPlantThoughtDialog.value) {\n              plantStore.thoughts = thoughts.map(thought => ({\n                type: 'plant',\n                content: thought.content,\n                timestamp: thought.timestamp\n              }))\n            }\n          } catch (error) {\n            console.error('更新植物心声失败:', error)\n            ElMessage.error('更新植物心声失败')\n          }\n        }\n      } else {\n        currentThought.value = null\n      }\n    }, { immediate: true })\n    \n    return {\n      currencyStore,\n      plantStore,\n      taskStore,\n      selectedPlantForDialog,\n      showPlantThoughtDialog,\n      searchPlant,\n      myPlants: computed(() => plantStore.plants),\n      filteredPlants,\n      plantDays,\n      completedTasksCount,\n      \n      // 打字机效果相关\n      showingThoughtForPlantId,\n      currentThought,\n      displayedSegments,\n      currentTypingText,\n      isTyping,\n      \n      // 方法\n      calculatePlantExp,\n      expFormat,\n      updatePlantWeather,\n      showDialog,\n      listenToPlantThought,\n      setAsMainPlant,\n      getPlantImage,\n      formatThoughtTime,\n      getPlantIntroduction,\n      startTypingEffect,\n      stopTypingEffect\n    }\n  }\n}\n</script>\n\n<style scoped>\n.garden-page {\n  position: relative;\n  min-height: 100vh;\n  padding: 30px 0;\n}\n\n.garden-background {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: linear-gradient(135deg, #f0f7ff 0%, #e6ffed 100%);\n  z-index: -1;\n  opacity: 0.6;\n}\n\n.garden-header {\n  margin-bottom: 30px;\n  position: relative;\n  overflow: hidden;\n  border-radius: 16px;\n  background: linear-gradient(to right, #ebfaef, #e6f3ff);\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.07);\n  padding: 25px;\n}\n\n.garden-header::before {\n  content: '';\n  position: absolute;\n  width: 150px;\n  height: 150px;\n  background: radial-gradient(circle, rgba(76, 175, 80, 0.1) 0%, rgba(76, 175, 80, 0) 70%);\n  top: -30px;\n  right: -30px;\n  border-radius: 50%;\n}\n\n.card-title {\n  font-size: 28px;\n  color: #2e7d32;\n  margin-bottom: 10px;\n  position: relative;\n}\n\n.garden-description {\n  color: #666;\n  margin-top: 10px;\n  font-size: 16px;\n  max-width: 80%;\n  line-height: 1.6;\n}\n\n.garden-stats {\n  display: flex;\n  gap: 20px;\n  margin-top: 20px;\n}\n\n.stats-item {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: rgba(255, 255, 255, 0.6);\n  padding: 12px 20px;\n  border-radius: 12px;\n  min-width: 80px;\n}\n\n.stats-icon {\n  font-size: 24px;\n  margin-bottom: 5px;\n}\n\n.stats-value {\n  font-size: 18px;\n  font-weight: 700;\n  color: #2c3e50;\n}\n\n.stats-label {\n  font-size: 14px;\n  color: #7f8c8d;\n  margin-top: 3px;\n}\n\n.garden-content {\n  margin-top: 20px;\n}\n\n.section-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.section-title {\n  margin-bottom: 10px;\n  font-size: 22px;\n  color: #2e7d32;\n  position: relative;\n  padding-left: 15px;\n}\n\n.section-title::before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 5px;\n  height: 20px;\n  background-color: #4caf50;\n  border-radius: 3px;\n}\n\n.my-garden-section {\n  border-radius: 16px;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.07);\n  background-color: white;\n  overflow: hidden;\n  transition: transform 0.3s;\n  padding: 25px;\n}\n\n.my-garden-section:hover {\n  transform: translateY(-5px);\n}\n\n.search-input {\n  max-width: 200px;\n}\n\n.garden-plants-row {\n  display: flex;\n  overflow-x: auto;\n  padding: 15px 0;\n  gap: 20px;\n  scrollbar-width: thin;\n  margin-top: 20px;\n}\n\n.garden-plants-row::-webkit-scrollbar {\n  height: 8px;\n}\n\n.garden-plants-row::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 10px;\n}\n\n.garden-plants-row::-webkit-scrollbar-thumb {\n  background: #c1e1c5;\n  border-radius: 10px;\n}\n\n.garden-plants-row::-webkit-scrollbar-thumb:hover {\n  background: #4caf50;\n}\n\n.garden-plant-item {\n  min-width: 220px;\n  background-color: white;\n  border-radius: 16px;\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transition: all 0.3s;\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);\n  border: 1px solid #eee;\n  position: relative;\n  overflow: hidden;\n}\n\n.garden-plant-item:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);\n}\n\n.garden-plant-item.is-main-plant {\n  border: 2px solid #4caf50;\n  background: linear-gradient(to bottom, #f5fff7, white);\n}\n\n.garden-plant-item.is-main-plant::after {\n  content: '⭐';\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 20px;\n  color: #ffc107;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.plant-avatar {\n  position: relative;\n  width: 180px;\n  height: 180px;\n  border-radius: 50%;\n  overflow: hidden;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);\n  margin-bottom: 15px;\n}\n\n/* 植物图片样式 */\n.plant-image {\n  width: 90%;\n  height: 90%;\n  object-fit: contain;\n  z-index: 3;\n  position: relative;\n  animation: float 3s ease-in-out infinite;\n}\n\n@keyframes float {\n  0% { transform: translateY(0px); }\n  50% { transform: translateY(-10px); }\n  100% { transform: translateY(0px); }\n}\n\n.plant-details {\n  width: 100%;\n  margin-bottom: 15px;\n}\n\n.plant-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.plant-name {\n  font-weight: bold;\n  font-size: 18px;\n  color: #333;\n}\n\n.main-plant-badge {\n  margin-bottom: 5px;\n}\n\n.plant-level-container {\n  margin-bottom: 15px;\n}\n\n.plant-level {\n  font-size: 14px;\n  color: #666;\n  margin-bottom: 8px;\n}\n\n.level-value {\n  font-weight: bold;\n  color: #4caf50;\n}\n\n.plant-exp-progress :deep(.el-progress-bar__outer) {\n  border-radius: 10px;\n  background-color: #f0f0f0;\n}\n\n.plant-exp-progress :deep(.el-progress-bar__inner) {\n  border-radius: 10px;\n  background: linear-gradient(90deg, #81c784, #4caf50);\n}\n\n.plant-weather-selector {\n  display: flex;\n  align-items: center;\n  margin-top: 15px;\n  justify-content: center;\n  background-color: #f5f5f5;\n  padding: 8px 12px;\n  border-radius: 12px;\n}\n\n.weather-label {\n  margin-right: 10px;\n  font-size: 14px;\n  color: #666;\n}\n\n.weather-options {\n  display: flex;\n  gap: 15px;\n}\n\n.weather-option {\n  font-size: 22px;\n  cursor: pointer;\n  opacity: 0.5;\n  transition: all 0.3s;\n  filter: grayscale(0.6);\n}\n\n.weather-option:hover {\n  transform: scale(1.2);\n  opacity: 0.8;\n  filter: grayscale(0);\n}\n\n.weather-option.active {\n  opacity: 1;\n  transform: scale(1.2);\n  filter: grayscale(0);\n}\n\n.plant-actions {\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  margin-top: 15px;\n  flex-wrap: wrap;\n  padding: 0 10px;\n}\n\n.empty-garden {\n  padding: 40px 0;\n  text-align: center;\n}\n\n.empty-image {\n  font-size: 60px;\n  margin-bottom: 20px;\n  animation: float 3s ease-in-out infinite;\n}\n\n.plant-companionship {\n  text-align: center;\n  margin-top: 30px;\n  padding: 15px;\n  background: linear-gradient(to right, rgba(236, 253, 245, 0.8), rgba(229, 246, 253, 0.8));\n  border-radius: 12px;\n  font-size: 16px;\n  color: #2e7d32;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.05);\n  position: relative;\n  border-left: 4px solid #4caf50;\n}\n\n.plant-companionship::before {\n  content: '🌱';\n  font-size: 18px;\n  margin-right: 8px;\n}\n\n/* 媒体查询响应式样式 */\n@media screen and (max-width: 768px) {\n  .garden-plants-row {\n    flex-direction: column;\n    gap: 15px;\n  }\n  \n  .garden-plant-item {\n    min-width: auto;\n    width: 100%;\n  }\n  \n  .plant-avatar {\n    width: 140px;\n    height: 140px;\n  }\n  \n  .plant-image {\n    width: 80%;\n    height: 80%;\n  }\n  \n  .plant-actions {\n    flex-direction: column;\n  }\n  \n  .plant-companionship {\n    font-size: 14px;\n    padding: 12px;\n  }\n  \n  .plant-thought-bubble {\n    padding: 12px;\n    margin-top: 10px;\n  }\n  \n  .thought-content {\n    font-size: 13px;\n  }\n  \n  .custom-btn {\n    padding: 8px 12px;\n  }\n  \n  .plant-introduction {\n    padding: 10px;\n  }\n  \n  .intro-text {\n    font-size: 12px;\n  }\n}\n\n/* 自定义按钮样式 */\n.custom-btn {\n  border: none;\n  padding: 10px 16px;\n  border-radius: 16px;\n  cursor: pointer;\n  font-weight: 500;\n  font-size: 13px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.3s ease;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.08);\n  position: relative;\n  overflow: hidden;\n  width: 90%;\n  margin: 0 auto 10px;\n  letter-spacing: 0.5px;\n}\n\n.custom-btn:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.12);\n}\n\n.custom-btn:active {\n  transform: translateY(-1px);\n}\n\n.custom-btn::before {\n  content: '';\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(90deg, rgba(255,255,255,0.1), rgba(255,255,255,0.4), rgba(255,255,255,0.1));\n  transition: all 0.5s ease;\n}\n\n.custom-btn:hover::before {\n  left: 100%;\n}\n\n.listen-btn {\n  background: linear-gradient(135deg, #7ed6a5 0%, #5bc189 100%);\n  color: #ffffff;\n  border: 1px solid transparent;\n  position: relative;\n  z-index: 1;\n}\n\n.listen-btn:hover {\n  background: linear-gradient(135deg, #8cdeb0 0%, #65ca94 100%);\n}\n\n.listen-btn::after {\n  content: '';\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background: linear-gradient(135deg, #7ed6a5 0%, #5bc189 100%);\n  z-index: -1;\n  transition: opacity 0.3s ease;\n  border-radius: 16px;\n}\n\n.main-btn {\n  background: linear-gradient(135deg, #ffe082 0%, #ffd54f 100%);\n  color: #7d6226;\n  border: 1px solid transparent;\n  position: relative;\n  z-index: 1;\n}\n\n.main-btn:hover {\n  background: linear-gradient(135deg, #ffecb3 0%, #ffe082 100%);\n}\n\n.main-btn::after {\n  content: '';\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  background: linear-gradient(135deg, #ffe082 0%, #ffd54f 100%);\n  z-index: -1;\n  transition: opacity 0.3s ease;\n  border-radius: 16px;\n}\n\n.main-btn.disabled {\n  background: linear-gradient(135deg, #e0e0e0 0%, #bdbdbd 100%);\n  color: #757575;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);\n  opacity: 0.7;\n}\n\n.main-btn.disabled::before,\n.main-btn.disabled::after {\n  display: none;\n}\n\n.btn-icon {\n  margin-right: 6px;\n  font-size: 14px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.btn-text {\n  letter-spacing: 0.5px;\n  font-weight: 500;\n}\n\n/* 植物心声气泡样式调整 */\n.plant-thought-bubble {\n  margin-top: 15px;\n  padding: 15px;\n  background: linear-gradient(to right, #f0f8ff, #f5fff7);\n  border-radius: 18px;\n  position: relative;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  max-width: 100%;\n  animation: pulse 3s ease-in-out infinite, bubble-appear 0.8s cubic-bezier(0.18, 0.89, 0.32, 1.28);\n  min-height: 60px;\n}\n\n@keyframes bubble-appear {\n  0% {\n    opacity: 0;\n    transform: scale(0.8) translateY(10px);\n  }\n  70% {\n    transform: scale(1.05) translateY(-5px);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1) translateY(0);\n  }\n}\n\n@keyframes pulse {\n  0% { box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08); }\n  50% { box-shadow: 0 6px 18px rgba(66, 185, 131, 0.15); }\n  100% { box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08); }\n}\n\n.thought-bubble-pointer {\n  position: absolute;\n  top: -12px;\n  left: 25px;\n  width: 24px;\n  height: 24px;\n  background: linear-gradient(135deg, #f0f8ff, #f5fff7);\n  transform: rotate(45deg);\n  border-radius: 4px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.05);\n}\n\n.thought-content {\n  font-size: 14px;\n  line-height: 1.6;\n  color: #2e7d32;\n  font-style: italic;\n  position: relative;\n  z-index: 1;\n  white-space: pre-wrap;\n  word-break: break-word;\n}\n\n.thought-content::before {\n  content: '\"';\n  font-size: 24px;\n  color: #42b983;\n  margin-right: 2px;\n  vertical-align: sub;\n}\n\n.thought-content::after {\n  content: '\"';\n  font-size: 24px;\n  color: #42b983;\n  margin-left: 2px;\n  vertical-align: middle;\n}\n\n.thought-time {\n  margin-top: 8px;\n  font-size: 12px;\n  color: #999;\n  text-align: right;\n}\n\n.typing-cursor {\n  display: inline-block;\n  width: 2px;\n  height: 1em;\n  background-color: #666;\n  margin-left: 2px;\n  animation: blink 1s infinite;\n}\n\n@keyframes blink {\n  0%, 100% { opacity: 1; }\n  50% { opacity: 0; }\n}\n\n.message-segment {\n  display: block;\n  margin-bottom: 0.5em;\n}\n\n.typing-segment {\n  display: inline;\n}\n\n/* 植物介绍样式 */\n.plant-introduction {\n  margin-top: 15px;\n  padding: 15px;\n  background-color: #f8f9fa;\n  border-radius: 12px;\n  border-left: 3px solid #42b983;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  height: 150px;\n  overflow-y: auto;\n  position: relative;\n  transition: all 0.3s ease;\n}\n\n.plant-introduction:hover {\n  background-color: #f0f7f4;\n  box-shadow: 0 4px 12px rgba(66, 185, 131, 0.15);\n  border-left: 3px solid #35a873;\n}\n\n.plant-introduction::-webkit-scrollbar {\n  width: 4px;\n}\n\n.plant-introduction::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 4px;\n}\n\n.plant-introduction::-webkit-scrollbar-thumb {\n  background: #c1e1c5;\n  border-radius: 4px;\n}\n\n.plant-introduction::-webkit-scrollbar-thumb:hover {\n  background: #42b983;\n}\n\n.intro-title {\n  font-size: 14px;\n  font-weight: 600;\n  color: #42b983;\n  margin-bottom: 8px;\n  letter-spacing: 1px;\n  display: flex;\n  align-items: center;\n}\n\n.intro-title::before {\n  content: '🌿';\n  margin-right: 6px;\n  font-size: 16px;\n}\n\n.intro-text {\n  font-size: 13px;\n  line-height: 1.6;\n  color: #555;\n  font-style: italic;\n  text-align: justify;\n}\n</style> ","import { render } from \"./Garden.vue?vue&type=template&id=01885cbe&scoped=true\"\nimport script from \"./Garden.vue?vue&type=script&lang=js\"\nexport * from \"./Garden.vue?vue&type=script&lang=js\"\n\nimport \"./Garden.vue?vue&type=style&index=0&id=01885cbe&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-01885cbe\"]])\n\nexport default __exports__"],"names":["useCurrencyStore","defineStore","state","coins","parseInt","localStorage","getItem","loading","actions","addCoins","amount","this","saveCoins","deductCoins","setItem","toString","resetCoins","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","$setup","myPlants","length","_hoisted_5","_toDisplayString","plantDays","completedTasksCount","_hoisted_6","_createVNode","_component_el_empty","description","image","_withCtx","_cache","_hoisted_7","_Fragment","_renderList","filteredPlants","plant","key","id","_normalizeClass","isMainPlant","_hoisted_8","_component_WeatherCanvas","weather","width","height","src","getPlantImage","alt","_hoisted_10","_hoisted_11","_hoisted_12","name","_hoisted_13","_component_el_tag","size","type","effect","_hoisted_14","_hoisted_15","_hoisted_16","level","_component_el_progress","percentage","calculatePlantExp","format","expFormat","_hoisted_17","_hoisted_18","active","title","onClick","$event","updatePlantWeather","_hoisted_19","_hoisted_20","_hoisted_21","showingThoughtForPlantId","_id","currentThought","_hoisted_22","_hoisted_23","displayedSegments","segment","index","_hoisted_24","currentTypingText","isTyping","_hoisted_25","_hoisted_26","formatThoughtTime","timestamp","_hoisted_27","_hoisted_28","getPlantIntroduction","_hoisted_29","listenToPlantThought","setAsMainPlant","disabled","_component_PlantDialog","messages","plantStore","thoughts","showPlantThoughtDialog","onPrimaryAction","components","WeatherCanvas","PlantDialog","setup","currencyStore","usePlantStore","taskStore","useTaskStore","selectedPlantForDialog","ref","searchPlant","typeInterval","typingSpeed","segmentDelay","splitMessageIntoSegments","message","split","filter","trim","startTypingEffect","stopTypingEffect","value","segments","currentSegmentIndex","typeNextSegment","finishTyping","currentSegment","charIndex","clearInterval","setInterval","substring","push","setTimeout","error","console","getTimeOfDay","hour","Date","getHours","plantIntros","onUnmounted","plantImages","plant1Level1","plant1Level2","plant1Level3","plant2Level1","plant2Level2","plant2Level3","plant3Level1","plant3Level2","plant3Level3","plant4Level1","plant4Level2","plant4Level3","plant5Level1","plant5Level2","plant5Level3","clampLevel","Math","min","max","plantTypeImages","onMounted","async","plants","fetchPlants","mainPlant","find","p","firstPlant","plantId","updatePlant","log","ElMessage","completedTasks","fetchTasks","currentExp","experience","fallbackPlant","nextLevelExp","round","success","dateString","formatDistance","addSuffix","locale","zhCN","showDialog","fetchPlantThoughts","map","thought","content","context","timeOfDay","recentTasks","slice","task","completed","newThought","generatePlantThought","warning","prevMainPlantId","computed","search","toLowerCase","includes","createdAt","createdDate","today","diffTime","abs","diffDays","ceil","watch","newMainPlant","immediate","__exports__","render"],"sourceRoot":""}
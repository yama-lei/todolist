{"version":3,"file":"js/743.6658ed85.js","mappings":"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","sources":["webpack://zhiyuxinsheng/./src/stores/currency.js","webpack://zhiyuxinsheng/./src/stores/task.js","webpack://zhiyuxinsheng/./src/views/Profile.vue","webpack://zhiyuxinsheng/./src/views/Profile.vue?24e8","webpack://zhiyuxinsheng/./src/services/ossApi.js"],"sourcesContent":["import { defineStore } from 'pinia'\nimport api from '../services/api'\nimport { ElMessage } from 'element-plus'\n\nexport const useCurrencyStore = defineStore('currency', {\n  state: () => ({\n    coins: parseInt(localStorage.getItem('coins') || '100'),\n    loading: false\n  }),\n  \n  actions: {\n    // 增加金币\n    addCoins(amount) {\n      this.coins += amount\n      this.saveCoins()\n    },\n    \n    // 减少金币\n    deductCoins(amount) {\n      if (this.coins >= amount) {\n        this.coins -= amount\n        this.saveCoins()\n        return true\n      }\n      return false\n    },\n    \n    // 保存金币到本地存储\n    saveCoins() {\n      localStorage.setItem('coins', this.coins.toString())\n    },\n    \n    // 重置金币\n    resetCoins() {\n      this.coins = 100\n      this.saveCoins()\n    }\n  }\n}) ","import { defineStore } from 'pinia'\nimport { ref, computed } from 'vue'\nimport { usePlantStore } from './plant'\nimport { taskApi } from '../services/api'\nimport { ElMessage } from 'element-plus'\n\nexport const useTaskStore = defineStore('task', () => {\n  // 所有任务数据\n  const tasks = ref([])\n  const systemTasks = ref([])\n  const completedTasks = ref([])\n  const loading = ref(false)\n  \n  // 计算属性：待完成任务\n  const pendingTasks = computed(() => tasks.value.filter(task => !task.completed))\n  \n  // 获取所有任务\n  const fetchTasks = async () => {\n    try {\n      loading.value = true\n      const response = await taskApi.getTasks()\n      tasks.value = response.tasks.filter(task => !task.completed)\n      completedTasks.value = response.tasks.filter(task => task.completed)\n    } catch (error) {\n      ElMessage.error('获取任务列表失败')\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 获取系统任务\n  const fetchSystemTasks = async () => {\n    try {\n      loading.value = true\n      const response = await taskApi.getSystemTasks()\n      systemTasks.value = response.tasks\n    } catch (error) {\n      ElMessage.error('获取系统任务失败')\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 添加任务\n  const addTask = async (task) => {\n    try {\n      // 确保important是布尔类型\n      const importantBool = task.important === true || task.important === 'true'\n      \n      const response = await taskApi.createTask({\n        title: task.title,\n        description: task.description || '',\n        deadline: task.deadline || '',\n        important: importantBool\n      })\n      \n      // 添加到本地状态\n      tasks.value.push(response.task)\n      \n      // 不再给创建任务增加经验值\n      ElMessage.success('任务创建成功')\n    } catch (error) {\n      ElMessage.error('创建任务失败')\n    }\n  }\n  \n  // 完成任务\n  const completeTask = async (id) => {\n    try {\n      const response = await taskApi.completeTask(id)\n      \n      // 从任务列表中移除\n      const task = tasks.value.find(t => t._id === id)\n      if (task) {\n        // 将任务移动到已完成列表\n        completedTasks.value.unshift({\n          ...task,\n          completed: true,\n          completedAt: new Date().toISOString()\n        })\n        // 从待办任务中移除\n        tasks.value = tasks.value.filter(t => t._id !== id)\n      }\n      \n      // 增加植物经验值\n      const plantStore = usePlantStore()\n      if (plantStore.plants && plantStore.plants.length > 0) {\n        // 获取主植物\n        const mainPlant = plantStore.plants.find(p => p.isMainPlant)\n        if (mainPlant) {\n          const plantId = mainPlant._id || mainPlant.id\n          if (plantId) {\n            // 根据任务是否重要，增加不同的经验值\n            // 普通任务25点，重要任务50点\n            const expAmount = task && task.important ? 50 : 25;\n            await plantStore.gainExperience(plantId, expAmount)\n            \n            // 显示具体获得的经验值\n            ElMessage.success(`任务已完成，获得 ${expAmount} 点经验值！`)\n          }\n        }\n      } else {\n        ElMessage.success('任务已完成')\n      }\n    } catch (error) {\n      ElMessage.error('完成任务失败')\n    }\n  }\n  \n  // 完成系统任务\n  const completeSystemTask = async (id) => {\n    try {\n      const plantStore = usePlantStore()\n      if (!plantStore.currentPlant) {\n        ElMessage.warning('请先添加一个植物')\n        return false\n      }\n      \n      const response = await taskApi.completeSystemTask(id)\n      \n      // 更新任务状态\n      const index = systemTasks.value.findIndex(t => t._id === id)\n      if (index !== -1) {\n        systemTasks.value[index].completed = true\n      }\n      \n      // 如果后端已经处理了经验值奖励，则显示相应的提示\n      if (response.rewards) {\n        ElMessage.success(`完成任务获得 ${response.rewards.experience} 点经验`)\n      } \n      // 如果后端没有处理经验值奖励，则在前端处理\n      else {\n        // 获取主植物\n        const plantId = plantStore.currentPlant._id || plantStore.currentPlant.id\n        if (plantId) {\n          // 系统任务固定增加35点经验值\n          const expAmount = 35;\n          await plantStore.gainExperience(plantId, expAmount)\n          ElMessage.success(`完成系统任务获得 ${expAmount} 点经验值`)\n        }\n      }\n      \n      return true\n    } catch (error) {\n      if (error.response?.status === 400) {\n        ElMessage.warning('今天已经完成过此任务')\n      } else {\n        ElMessage.error('完成系统任务失败')\n      }\n      return false\n    }\n  }\n  \n  // 移除任务\n  const removeTask = async (id) => {\n    try {\n      // 检查ID是否有效\n      if (!id) {\n        ElMessage.error('任务ID无效，无法删除')\n        return\n      }\n      \n      await taskApi.deleteTask(id)\n      tasks.value = tasks.value.filter(task => task._id !== id)\n      ElMessage.success('任务已删除')\n    } catch (error) {\n      console.error('删除任务失败:', error)\n      ElMessage.error('删除任务失败')\n    }\n  }\n  \n  // 删除已完成任务\n  const removeCompletedTask = async (id) => {\n    try {\n      // 检查ID是否有效\n      if (!id) {\n        ElMessage.error('任务ID无效，无法删除')\n        return\n      }\n      \n      await taskApi.deleteTask(id)\n      completedTasks.value = completedTasks.value.filter(task => task._id !== id)\n      ElMessage.success('任务已删除')\n    } catch (error) {\n      console.error('删除任务失败:', error)\n      ElMessage.error('删除任务失败')\n    }\n  }\n  \n  // 更新任务\n  const updateTask = async (updatedTask) => {\n    try {\n      const { _id, title, description, deadline, important } = updatedTask\n      \n      // 确保important是布尔类型\n      const importantBool = important === true || important === 'true'\n      \n      // 保存更新前的任务状态，以便在请求失败时恢复\n      const originalTaskIndex = tasks.value.findIndex(t => t._id === _id)\n      const originalTask = originalTaskIndex !== -1 ? { ...tasks.value[originalTaskIndex] } : null\n      \n      // 先更新本地状态，让UI立即响应\n      if (originalTaskIndex !== -1) {\n        tasks.value[originalTaskIndex] = { \n          ...tasks.value[originalTaskIndex],\n          title,\n          description,\n          deadline,\n          important: importantBool\n        }\n      }\n      \n      // 然后发送请求更新服务器状态\n      const response = await taskApi.updateTask(_id, {\n        title,\n        description,\n        deadline,\n        important: importantBool\n      })\n      \n      // 如果服务器响应成功，使用服务器返回的数据更新本地状态\n      if (response && response.task) {\n        const finalIndex = tasks.value.findIndex(t => t._id === _id)\n        if (finalIndex !== -1) {\n          tasks.value[finalIndex] = response.task\n        }\n      }\n      \n      ElMessage.success('任务已更新')\n    } catch (error) {\n      console.error('更新任务失败:', error)\n      \n      // 如果请求失败，恢复原始状态\n      const failedIndex = tasks.value.findIndex(t => t._id === updatedTask._id)\n      if (failedIndex !== -1 && originalTask) {\n        tasks.value[failedIndex] = originalTask\n      }\n      \n      ElMessage.error('更新任务失败')\n    }\n  }\n  \n  // 切换任务重要性\n  const toggleTaskImportance = async (id) => {\n    const task = tasks.value.find(t => t._id === id)\n    if (task) {\n      try {\n        // 先临时更新本地状态，让UI立即响应\n        console.log('切换任务重要性 - 当前状态:', task.important, '类型:', typeof task.important)\n        \n        // 将字符串类型的important转换为布尔类型\n        const currentImportant = task.important === true || task.important === 'true'\n        const newImportantState = !currentImportant\n        console.log('切换任务重要性 - 新状态:', newImportantState)\n        \n        const taskIndex = tasks.value.findIndex(t => t._id === id)\n        if (taskIndex !== -1) {\n          // 创建一个任务的副本并修改其重要性\n          const updatedTask = { ...tasks.value[taskIndex], important: newImportantState }\n          tasks.value[taskIndex] = updatedTask\n        }\n        \n        // 然后发送请求更新服务器状态\n        const response = await taskApi.updateTask(id, {\n          title: task.title,\n          description: task.description,\n          deadline: task.deadline,\n          important: newImportantState\n        })\n        \n        // 如果服务器响应成功，使用服务器返回的数据更新本地状态\n        if (response && response.task) {\n          const finalIndex = tasks.value.findIndex(t => t._id === id)\n          if (finalIndex !== -1) {\n            tasks.value[finalIndex] = response.task\n          }\n        }\n        \n        ElMessage.success(`任务已${newImportantState ? '标记为重要' : '取消重要标记'}`)\n      } catch (error) {\n        console.error('更新任务重要性失败:', error)\n        // 如果请求失败，恢复原始状态\n        const failedIndex = tasks.value.findIndex(t => t._id === id)\n        if (failedIndex !== -1) {\n          // 恢复原始状态，注意保持原来的类型\n          tasks.value[failedIndex] = { ...tasks.value[failedIndex], important: task.important }\n        }\n        ElMessage.error('更新任务重要性失败')\n      }\n    }\n  }\n\n  // 重新排序任务\n  const reorderTasks = (newOrder) => {\n    if (!newOrder || !Array.isArray(newOrder)) return;\n    \n    // 确保任务的important字段是正确处理的\n    const processedOrder = newOrder.map(task => {\n      // 处理important字段类型\n      const importantBool = task.important === true || task.important === 'true';\n      return {\n        ...task,\n        important: importantBool\n      }\n    });\n    \n    // 更新任务顺序\n    tasks.value = processedOrder;\n  }\n\n  return {\n    tasks,\n    systemTasks,\n    completedTasks,\n    pendingTasks,\n    loading,\n    \n    fetchTasks,\n    fetchSystemTasks,\n    addTask,\n    completeTask,\n    completeSystemTask,\n    removeTask,\n    removeCompletedTask,\n    updateTask,\n    toggleTaskImportance,\n    reorderTasks\n  }\n}) ","<template>\n  <div class=\"profile-page\">\n    <div class=\"profile-container\">\n      <div class=\"page-header\">\n        <h1 class=\"page-title\">个人资料</h1>\n        <el-button type=\"primary\" @click=\"enterEditMode\" v-if=\"!isEditing\">\n          <el-icon><Edit /></el-icon>\n          编辑资料\n        </el-button>\n        <div class=\"header-actions\" v-else>\n          <el-button @click=\"cancelEdit\">取消</el-button>\n          <el-button type=\"primary\" @click=\"saveProfile\" :loading=\"saving\">保存</el-button>\n        </div>\n      </div>\n\n      <div class=\"profile-content\">\n        <div class=\"profile-sidebar\">\n          <div class=\"avatar-container\">\n            <el-avatar :size=\"120\" :src=\"editedProfile.avatar || userAvatar\" @click=\"viewOrEditAvatar\" class=\"clickable-avatar\" v-if=\"!isEditing\" />\n            <div class=\"avatar-upload\" v-else>\n              <el-avatar :size=\"120\" :src=\"editedProfile.avatar || userAvatar\" />\n              <div class=\"avatar-upload-mask\">\n                <el-popover\n                  placement=\"bottom\"\n                  :width=\"300\"\n                  trigger=\"click\"\n                >\n                  <template #reference>\n                    <el-button type=\"primary\" circle>\n                      <el-icon><Camera /></el-icon>\n                    </el-button>\n                  </template>\n                  <div class=\"avatar-options\">\n                    <div class=\"avatar-section\">\n                      <h4>默认头像</h4>\n                      <div class=\"default-avatars\">\n                        <div \n                          v-for=\"(avatar, index) in defaultAvatars\" \n                          :key=\"index\"\n                          class=\"default-avatar-item\"\n                          @click=\"selectDefaultAvatar(avatar)\"\n                        >\n                          <el-avatar :size=\"50\" :src=\"avatar\" />\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"avatar-section\">\n                      <h4>上传头像</h4>\n                      <el-upload\n                        class=\"avatar-uploader\"\n                        action=\"#\"\n                        :auto-upload=\"false\"\n                        :show-file-list=\"false\"\n                        :on-change=\"handleAvatarChange\"\n                        accept=\"image/*\"\n                      >\n                        <el-button type=\"primary\">\n                          <el-icon><Upload /></el-icon>\n                          选择图片\n                        </el-button>\n                      </el-upload>\n                    </div>\n                  </div>\n                </el-popover>\n              </div>\n            </div>\n            <h2 class=\"username\">{{ authStore.userInfo.username }}</h2>\n            <div class=\"user-level\">\n              <el-tag type=\"success\">等级 {{ userLevel }}</el-tag>\n            </div>\n          </div>\n\n          <div class=\"sidebar-stats\">\n            <div class=\"stat-item achievement\">\n              <div class=\"stat-icon\">\n                <el-icon><Trophy /></el-icon>\n              </div>\n              <div class=\"stat-content\">\n                <div class=\"stat-label\">一路走来，你已经完成了 <span class=\"highlight\">{{ completedTasksCount }}</span> 个任务</div>\n              </div>\n            </div>\n            <div class=\"stat-item companion\">\n              <div class=\"stat-icon\">\n                <el-icon><Sunny /></el-icon>\n              </div>\n              <div class=\"stat-content\">\n                <div class=\"stat-label\">你的植物朋友们，已经陪伴了你 <span class=\"highlight\">{{ plantDays }}</span> 天</div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"profile-details\">\n          <el-form :model=\"editedProfile\" label-position=\"top\" :disabled=\"!isEditing\" class=\"modern-form\">\n            <div class=\"form-section\">\n              <h3 class=\"section-title\">基本信息</h3>\n              <el-form-item label=\"用户名\" class=\"form-item-animated\">\n                <el-input v-model=\"editedProfile.username\" placeholder=\"请输入用户名\" class=\"modern-input\" />\n              </el-form-item>\n              <el-form-item label=\"邮箱\" class=\"form-item-animated\">\n                <el-input v-model=\"editedProfile.email\" placeholder=\"请输入邮箱\" disabled class=\"modern-input\" />\n              </el-form-item>\n              <el-form-item label=\"性别\" class=\"form-item-animated\">\n                <el-select v-model=\"editedProfile.gender\" placeholder=\"请选择性别\" class=\"modern-select\">\n                  <el-option label=\"男\" value=\"male\" />\n                  <el-option label=\"女\" value=\"female\" />\n                  <el-option label=\"保密\" value=\"secret\" />\n                </el-select>\n              </el-form-item>\n              <el-form-item label=\"生日\" class=\"form-item-animated\">\n                <el-date-picker\n                  v-model=\"editedProfile.birthday\"\n                  type=\"date\"\n                  placeholder=\"请选择生日\"\n                  format=\"YYYY-MM-DD\"\n                  value-format=\"YYYY-MM-DD\"\n                  :disabled-date=\"disabledDate\"\n                  clearable\n                  class=\"modern-date-picker\"\n                />\n              </el-form-item>\n              <el-form-item label=\"年龄\" class=\"form-item-animated\">\n                <el-input :model-value=\"computedAge\" disabled class=\"modern-input\">\n                  <template #append>岁</template>\n                </el-input>\n              </el-form-item>\n              <el-form-item label=\"所在地\" class=\"form-item-animated\">\n                <el-input v-model=\"editedProfile.location\" placeholder=\"请输入所在地\" class=\"modern-input\" />\n              </el-form-item>\n              <el-form-item label=\"个性签名\" class=\"form-item-animated\">\n                <el-input \n                  v-model=\"editedProfile.signature\" \n                  type=\"textarea\" \n                  :rows=\"2\" \n                  placeholder=\"写下你的个性签名...\" \n                  class=\"modern-textarea\"\n                />\n              </el-form-item>\n              <el-form-item label=\"个人简介\" class=\"form-item-animated\">\n                <el-input \n                  v-model=\"editedProfile.bio\" \n                  type=\"textarea\" \n                  :rows=\"4\" \n                  placeholder=\"介绍一下自己吧...\" \n                  class=\"modern-textarea\"\n                />\n              </el-form-item>\n            </div>\n          </el-form>\n        </div>\n      </div>\n    </div>\n\n    <!-- 修改密码对话框 -->\n    <el-dialog\n      v-model=\"showPasswordDialog\"\n      title=\"修改密码\"\n      width=\"30%\"\n      custom-class=\"modern-dialog\"\n    >\n      <el-form :model=\"passwordForm\" label-width=\"120px\" :rules=\"passwordRules\" ref=\"passwordFormRef\" class=\"modern-form\">\n        <el-form-item label=\"当前密码\" prop=\"currentPassword\" class=\"form-item-animated\">\n          <el-input \n            v-model=\"passwordForm.currentPassword\" \n            type=\"password\" \n            show-password \n            placeholder=\"请输入当前密码\"\n            class=\"modern-input\"\n          />\n        </el-form-item>\n        <el-form-item label=\"新密码\" prop=\"newPassword\" class=\"form-item-animated\">\n          <el-input \n            v-model=\"passwordForm.newPassword\" \n            type=\"password\" \n            show-password \n            placeholder=\"请输入新密码\"\n            class=\"modern-input\"\n          />\n        </el-form-item>\n        <el-form-item label=\"确认新密码\" prop=\"confirmPassword\" class=\"form-item-animated\">\n          <el-input \n            v-model=\"passwordForm.confirmPassword\" \n            type=\"password\" \n            show-password \n            placeholder=\"请再次输入新密码\"\n            class=\"modern-input\"\n          />\n        </el-form-item>\n      </el-form>\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"showPasswordDialog = false\" class=\"cancel-button\">取消</el-button>\n          <el-button type=\"primary\" @click=\"changePassword\" :loading=\"changingPassword\" class=\"save-button\">\n            确认修改\n          </el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script setup>\nimport { ref, computed, watch, onMounted, reactive } from 'vue'\nimport { useAuthStore } from '../stores/auth'\nimport { usePlantStore } from '../stores/plant'\nimport { useTaskStore } from '../stores/task'\nimport { useCurrencyStore } from '../stores/currency'\nimport { Edit, Camera, Upload, Trophy, Sunny } from '@element-plus/icons-vue'\nimport { ElMessage, ElLoading } from 'element-plus'\nimport ossApi from '@/services/ossApi'\n    \n// 计算植物陪伴的天数\nconst plantDays = computed(() => {\n      if (plantStore.plants.length === 0) return 0\n      \n      // 使用第一个植物的创建时间计算\n      const firstPlant = plantStore.plants[0]\n      if (!firstPlant || !firstPlant.createdAt) return 0\n      \n      const createdDate = new Date(firstPlant.createdAt)\n      const today = new Date()\n      const diffTime = Math.abs(today - createdDate)\n      const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))\n      \n      return diffDays\n    })\n    \n// 获取store实例\nconst authStore = useAuthStore()\nconst plantStore = usePlantStore()\nconst taskStore = useTaskStore()\nconst currencyStore = useCurrencyStore()\n\n// 基本数据\nconst isEditing = ref(false)\nconst saving = ref(false)\nconst editedProfile = ref({\n  username: authStore.userInfo.username || '',\n  email: authStore.userInfo.email || '',\n  avatar: authStore.userInfo.avatar || '',\n  bio: authStore.userInfo.bio || '',\n  gender: authStore.userInfo.gender || 'secret',\n  birthday: authStore.userInfo.birthday || '',\n  location: authStore.userInfo.location || '',\n  signature: authStore.userInfo.signature || ''\n})\n\n// 默认头像列表\nconst defaultAvatars = [\n  '/avatars/default1.png',\n  '/avatars/default2.png',\n  '/avatars/default3.png',\n  '/avatars/default4.png',\n  '/avatars/default5.png',\n  '/avatars/default6.png',\n]\n\n// 计算年龄\nconst computedAge = computed(() => {\n  if (!editedProfile.value.birthday) return '保密';\n  const birthDate = new Date(editedProfile.value.birthday);\n  const today = new Date();\n  let age = today.getFullYear() - birthDate.getFullYear();\n  const m = today.getMonth() - birthDate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\n    age--;\n  }\n  return age.toString();\n});\n\n// 禁用未来日期\nconst disabledDate = (time) => {\n  return time.getTime() > Date.now();\n};\n\n// 计算属性\nconst userAvatar = computed(() => {\n  return authStore.userInfo.avatar || 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png'\n})\n\nconst userLevel = computed(() => {\n  return authStore.userInfo.level || 1\n})\n\nconst completedTasksCount = computed(() => {\n  return taskStore.completedTasks?.length || 0\n})\n\nconst plantCount = computed(() => {\n  return plantStore.plants?.length || 0\n})\n\n// 修改密码相关\nconst showPasswordDialog = ref(false)\nconst changingPassword = ref(false)\nconst passwordFormRef = ref(null)\nconst passwordForm = reactive({\n  currentPassword: '',\n  newPassword: '',\n  confirmPassword: ''\n})\n\nconst passwordRules = {\n  currentPassword: [\n    { required: true, message: '请输入当前密码', trigger: 'blur' }\n  ],\n  newPassword: [\n    { required: true, message: '请输入新密码', trigger: 'blur' },\n    { min: 6, message: '密码长度不能少于6个字符', trigger: 'blur' }\n  ],\n  confirmPassword: [\n    { required: true, message: '请确认新密码', trigger: 'blur' },\n    { \n      validator: (rule, value, callback) => {\n        if (value !== passwordForm.newPassword) {\n          callback(new Error('两次输入的密码不一致'))\n        } else {\n          callback()\n        }\n      }, \n      trigger: 'blur' \n    }\n  ]\n}\n\n// 选择默认头像\nconst selectDefaultAvatar = (avatar) => {\n  editedProfile.value.avatar = avatar\n}\n\n// 处理头像变更\nconst handleAvatarChange = async (file) => {\n  try {\n    // 文件类型检查\n    const isImage = file.raw.type.startsWith('image/')\n    if (!isImage) {\n      ElMessage.error('只能上传图片文件！')\n      return\n    }\n    \n    // 文件大小检查（限制为2MB）\n    const isLt2M = file.raw.size / 1024 / 1024 < 5\n    if (!isLt2M) {\n      ElMessage.error('图片大小不能超过5MB！')\n      return\n    }\n    \n    // 显示上传中的加载状态\n    const loading = ElLoading.service({\n      lock: true,\n      text: '头像上传中...',\n      background: 'rgba(0, 0, 0, 0.7)'\n    })\n    \n    try {\n      // 上传图片到OSS\n      const fileUrl = await ossApi.uploadFile(file.raw, 'avatars/')\n      console.log('头像上传成功，URL:', fileUrl)\n      \n      // 更新头像URL\n      editedProfile.value.avatar = fileUrl\n      \n      ElMessage.success('头像上传成功')\n    } finally {\n      loading.close()\n    }\n  } catch (error) {\n    console.error('上传头像失败:', error)\n    ElMessage.error('上传头像失败，请重试')\n  }\n}\n\n// 加载用户数据\nonMounted(async () => {\n  try {\n    // 强制刷新用户信息\n    await authStore.fetchUserInfo()\n    \n    // 更新本地编辑数据\n    editedProfile.value = {\n      username: authStore.userInfo.username || '',\n      email: authStore.userInfo.email || '',\n      avatar: authStore.userInfo.avatar || '',\n      bio: authStore.userInfo.bio || '',\n      gender: authStore.userInfo.gender || 'secret',\n      birthday: authStore.userInfo.birthday || '',\n      location: authStore.userInfo.location || '',\n      signature: authStore.userInfo.signature || ''\n    }\n    \n    console.log('用户头像URL:', authStore.userInfo.avatar)\n  } catch (error) {\n    console.error('加载用户信息失败:', error)\n    ElMessage.error('加载用户信息失败')\n  }\n})\n\n// 进入编辑模式\nconst enterEditMode = () => {\n  isEditing.value = true\n}\n\n// 取消编辑\nconst cancelEdit = () => {\n  isEditing.value = false\n  // 重置编辑数据\n  editedProfile.value = {\n    username: authStore.userInfo.username || '',\n    email: authStore.userInfo.email || '',\n    avatar: authStore.userInfo.avatar || '',\n    bio: authStore.userInfo.bio || '',\n    gender: authStore.userInfo.gender || 'secret',\n    birthday: authStore.userInfo.birthday || '',\n    location: authStore.userInfo.location || '',\n    signature: authStore.userInfo.signature || ''\n  }\n}\n\n// 保存个人资料\nconst saveProfile = async () => {\n  saving.value = true\n  try {\n    // 确保头像URL也被保存\n    const profileToSave = { ...editedProfile.value }\n    \n    // 调用API更新用户资料\n    await authStore.updateProfile(profileToSave)\n    \n    // 重新获取用户信息以确保数据同步\n    await authStore.fetchUserInfo()\n    \n    ElMessage.success('个人资料更新成功')\n    isEditing.value = false\n  } catch (error) {\n    console.error('更新个人资料失败:', error)\n    ElMessage.error('更新个人资料失败')\n  } finally {\n    saving.value = false\n  }\n}\n\n// 显示修改密码对话框\nconst showChangePasswordDialog = () => {\n  showPasswordDialog.value = true\n  // 重置表单\n  passwordForm.currentPassword = ''\n  passwordForm.newPassword = ''\n  passwordForm.confirmPassword = ''\n}\n\n// 修改密码\nconst changePassword = async () => {\n  if (!passwordFormRef.value) return\n  \n  await passwordFormRef.value.validate(async (valid) => {\n    if (!valid) return\n    \n    changingPassword.value = true\n    try {\n      await authStore.changePassword({\n        currentPassword: passwordForm.currentPassword,\n        newPassword: passwordForm.newPassword\n      })\n      \n      ElMessage.success('密码修改成功')\n      showPasswordDialog.value = false\n    } catch (error) {\n      console.error('修改密码失败:', error)\n    } finally {\n      changingPassword.value = false\n    }\n  })\n}\n\n// 查看或修改头像\nconst viewOrEditAvatar = () => {\n  if (isEditing.value) {\n    // 打开头像编辑弹窗\n    ElMessage.info('进入头像编辑模式');\n  } else {\n    // 查看头像逻辑\n    const avatarUrl = editedProfile.value.avatar || 'https://cube.elemecdn.com/3/7c/3ea6beec64369c2642b92c6726f1epng.png';\n    window.open(avatarUrl, '_blank'); // 打开头像图片\n  }\n}\n\n// 显示头像悬停提示文字\nconst showAvatarHover = ref(false)\n</script>\n\n<style scoped>\n.profile-page {\n  padding: 20px;\n  min-height: 100vh;\n}\n\n.profile-container {\n  max-width: 1000px;\n  margin: 0 auto;\n  background-color: #fff;\n  border-radius: 16px;\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.08);\n  padding: 24px;\n  animation: fadeIn 0.5s ease;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.page-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 24px;\n  padding-bottom: 16px;\n  border-bottom: 1px solid #eee;\n}\n\n.page-title {\n  font-size: 24px;\n  margin: 0;\n  color: #303133;\n  font-weight: 600;\n  position: relative;\n  padding-left: 16px;\n}\n\n.page-title::before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 4px;\n  height: 20px;\n  background: linear-gradient(to bottom, #42b983, #2d9cdb);\n  border-radius: 2px;\n}\n\n.header-actions {\n  display: flex;\n  gap: 12px;\n}\n\n.profile-content {\n  display: grid;\n  grid-template-columns: 280px 1fr;\n  gap: 24px;\n}\n\n.profile-sidebar {\n  background: linear-gradient(145deg, #f9fafc, #f5f7fa);\n  border-radius: 16px;\n  padding: 24px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);\n  height: fit-content;\n  border: 1px solid rgba(0, 0, 0, 0.03);\n}\n\n.avatar-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 24px;\n}\n\n.clickable-avatar {\n  border: 4px solid white;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease;\n}\n\n.clickable-avatar:hover {\n  transform: scale(1.05);\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.15);\n}\n\n.username {\n  margin: 16px 0 8px;\n  font-size: 20px;\n  font-weight: 600;\n  color: #303133;\n}\n\n.user-level {\n  margin-bottom: 16px;\n}\n\n.user-level .el-tag {\n  padding: 6px 12px;\n  border-radius: 20px;\n  font-size: 13px;\n  font-weight: 500;\n}\n\n.sidebar-stats {\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  margin-top: 24px;\n}\n\n.stat-item {\n  display: flex;\n  align-items: flex-start;\n  gap: 12px;\n  background: linear-gradient(145deg, #ffffff, #f9fafc);\n  border-radius: 14px;\n  padding: 16px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.04);\n  transition: all 0.3s ease;\n  border: 1px solid rgba(0, 0, 0, 0.03);\n}\n\n.stat-item:hover {\n  transform: translateY(-3px);\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.08);\n}\n\n.stat-icon {\n  width: 40px;\n  height: 40px;\n  border-radius: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n}\n\n.achievement .stat-icon {\n  background: linear-gradient(135deg, #FFA53E, #FF7643);\n  color: white;\n  font-size: 20px;\n}\n\n.companion .stat-icon {\n  background: linear-gradient(135deg, #50C4ED, #7FDBFF);\n  color: white;\n  font-size: 20px;\n}\n\n.stat-content {\n  flex: 1;\n}\n\n.stat-label {\n  font-size: 14px;\n  color: #606266;\n  font-weight: 500;\n  line-height: 1.5;\n}\n\n.highlight {\n  font-size: 18px;\n  font-weight: 700;\n  background: linear-gradient(135deg, #42b983, #2d9cdb);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  padding: 0 2px;\n}\n\n.profile-details {\n  background-color: white;\n  border-radius: 16px;\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.05);\n  border: 1px solid rgba(0, 0, 0, 0.03);\n  overflow: hidden;\n}\n\n.form-section {\n  padding: 0 16px;\n}\n\n.section-title {\n  font-size: 18px;\n  margin: 16px 0;\n  padding: 12px 0;\n  color: #303133;\n  font-weight: 600;\n  position: relative;\n  padding-left: 16px;\n}\n\n.section-title::before {\n  content: '';\n  position: absolute;\n  left: 0;\n  top: 50%;\n  transform: translateY(-50%);\n  width: 4px;\n  height: 18px;\n  background: linear-gradient(to bottom, #42b983, #2d9cdb);\n  border-radius: 2px;\n}\n\n.avatar-upload {\n  position: relative;\n}\n\n.avatar-upload-mask {\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  cursor: pointer;\n  opacity: 0;\n  transition: opacity 0.3s;\n}\n\n.avatar-upload:hover .avatar-upload-mask {\n  opacity: 1;\n}\n\n.avatar-icon {\n  font-size: 24px;\n  color: white;\n}\n\n/* 响应式设计 */\n@media screen and (max-width: 768px) {\n  .profile-content {\n    grid-template-columns: 1fr;\n  }\n  \n  .profile-sidebar {\n    padding: 16px;\n  }\n  \n  .sidebar-stats {\n    grid-template-columns: repeat(3, 1fr);\n  }\n}\n\n.el-form-item {\n  margin-bottom: 20px;\n}\n\n.el-select {\n  width: 100%;\n}\n\n.el-date-picker {\n  width: 100%;\n}\n\n.avatar-options {\n  padding: 16px;\n}\n\n.avatar-section {\n  margin-bottom: 20px;\n}\n\n.avatar-section h4 {\n  margin: 0 0 12px 0;\n  color: #606266;\n  font-weight: 600;\n}\n\n.default-avatars {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  gap: 12px;\n  margin-bottom: 16px;\n}\n\n.default-avatar-item {\n  cursor: pointer;\n  transition: transform 0.3s;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.default-avatar-item:hover {\n  transform: scale(1.1);\n}\n\n.default-avatar-item .el-avatar {\n  border: 2px solid transparent;\n  transition: all 0.3s;\n}\n\n.default-avatar-item:hover .el-avatar {\n  border-color: #42b983;\n  box-shadow: 0 4px 12px rgba(66, 185, 131, 0.2);\n}\n\n.avatar-uploader {\n  text-align: center;\n}\n\n.avatar-uploader :deep(.el-button) {\n  padding: 10px 20px;\n  border-radius: 30px;\n}\n\n.clickable-avatar {\n  cursor: pointer;\n}\n\n/* 美化表单元素 */\n.modern-form :deep(.el-form-item__label) {\n  font-weight: 600;\n  color: #606266;\n  padding-bottom: 8px;\n}\n\n.modern-input :deep(.el-input__wrapper),\n.modern-textarea :deep(.el-textarea__inner),\n.modern-date-picker :deep(.el-input__wrapper),\n.modern-select :deep(.el-input__wrapper) {\n  border-radius: 10px;\n  border: 1px solid #e0e7ff;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.03);\n  transition: all 0.3s;\n}\n\n.modern-input :deep(.el-input__wrapper:hover),\n.modern-textarea :deep(.el-textarea__inner:hover),\n.modern-date-picker :deep(.el-input__wrapper:hover),\n.modern-select :deep(.el-input__wrapper:hover) {\n  border-color: #42b983;\n  box-shadow: 0 4px 8px rgba(66, 185, 131, 0.1);\n}\n\n.modern-input :deep(.el-input__wrapper.is-focus),\n.modern-textarea :deep(.el-textarea__inner:focus),\n.modern-date-picker :deep(.el-input__wrapper.is-focus),\n.modern-select :deep(.el-input__wrapper.is-focus) {\n  border-color: #42b983;\n  box-shadow: 0 0 0 2px rgba(66, 185, 131, 0.2);\n}\n\n.form-item-animated {\n  animation: fadeInUp 0.5s ease;\n  animation-fill-mode: both;\n}\n\n.form-item-animated:nth-child(1) {\n  animation-delay: 0.1s;\n}\n\n.form-item-animated:nth-child(2) {\n  animation-delay: 0.15s;\n}\n\n.form-item-animated:nth-child(3) {\n  animation-delay: 0.2s;\n}\n\n.form-item-animated:nth-child(4) {\n  animation-delay: 0.25s;\n}\n\n.form-item-animated:nth-child(5) {\n  animation-delay: 0.3s;\n}\n\n.form-item-animated:nth-child(6) {\n  animation-delay: 0.35s;\n}\n\n.form-item-animated:nth-child(7) {\n  animation-delay: 0.4s;\n}\n\n.form-item-animated:nth-child(8) {\n  animation-delay: 0.45s;\n}\n\n@keyframes fadeInUp {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* 对话框样式 */\n.modern-dialog :deep(.el-dialog__header) {\n  padding: 20px 24px;\n  border-bottom: 1px solid #eee;\n  background: linear-gradient(135deg, #42b983, #2d9cdb);\n}\n\n.modern-dialog :deep(.el-dialog__title) {\n  color: white;\n  font-size: 20px;\n  font-weight: 500;\n}\n\n.modern-dialog :deep(.el-dialog__headerbtn .el-dialog__close) {\n  color: rgba(255, 255, 255, 0.9);\n}\n\n.modern-dialog :deep(.el-dialog__body) {\n  padding: 24px;\n}\n\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 12px;\n  padding-top: 10px;\n}\n\n.cancel-button,\n.save-button {\n  padding: 10px 20px;\n  border-radius: 30px;\n  border: none;\n  font-size: 14px;\n  font-weight: 600;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.cancel-button {\n  background-color: #f5f7fa;\n  color: #606266;\n}\n\n.cancel-button:hover {\n  background-color: #e9ecf2;\n}\n\n.save-button {\n  background: linear-gradient(135deg, #42b983, #2d9cdb);\n  color: white;\n}\n\n.save-button:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 18px rgba(66, 185, 131, 0.35);\n}\n\n.save-button:active {\n  transform: translateY(1px);\n  box-shadow: 0 2px 8px rgba(66, 185, 131, 0.3);\n}\n</style>","import script from \"./Profile.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Profile.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./Profile.vue?vue&type=style&index=0&id=7ec82c14&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-7ec82c14\"]])\n\nexport default __exports__","import api from './api';\nimport axios from 'axios';\n\n// OSS操作相关API\nconst ossApi = {\n  /**\n   * 获取OSS配置（临时凭证）\n   * @returns {Promise<Object>} OSS配置信息\n   */\n  getOSSConfig() {\n    return api.get('/oss/config');\n  },\n\n  /**\n   * 获取OSS上传策略（Policy）\n   * @param {string} dir 上传目录\n   * @returns {Promise<Object>} 上传策略\n   */\n  getOSSPolicy(dir = 'posts/') {\n    return api.get('/oss/policy', { params: { dir } });\n  },\n\n  /**\n   * 直接上传文件到阿里云OSS\n   * @param {File} file 要上传的文件对象\n   * @param {string} dir 上传目录\n   * @returns {Promise<string>} 文件的URL\n   */\n  async uploadFile(file, dir = 'posts/') {\n    try {\n      // 1. 获取上传策略\n      const policyRes = await this.getOSSPolicy(dir);\n      const policy = policyRes.policy;\n      \n      if (!policy) {\n        throw new Error('获取上传策略失败');\n      }\n      \n      // 检查并处理host，确保是一个有效的URL字符串\n      let host = policy.host;\n      if (typeof host === 'object') {\n        console.error('Host 是一个对象而不是字符串:', host);\n        // 尝试从对象中获取URL，或者构建一个默认URL\n        host = `https://${policy.bucket}.${policy.region}.aliyuncs.com`;\n      }\n      \n      // 确保host是一个有效的URL字符串\n      if (!host.startsWith('http')) {\n        host = `https://${host}`;\n      }\n      \n      // 2. 准备表单数据\n      const formData = new FormData();\n      const key = `${policy.key}${file.name.substring(file.name.lastIndexOf('.'))}`;\n      \n      formData.append('key', key);\n      formData.append('OSSAccessKeyId', policy.accessKeyId);\n      formData.append('policy', policy.policyBase64);\n      formData.append('signature', policy.signature);\n      formData.append('success_action_status', '200');\n      formData.append('file', file);\n      \n      console.log('正在上传文件到:', host);\n      \n      // 3. 上传文件到OSS\n      await axios.post(host, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      \n      // 4. 返回文件URL\n      let cdnHost = policy.cdnHost || host;\n      if (typeof cdnHost === 'object') {\n        cdnHost = host; // 如果cdnHost也是对象，则使用host\n      }\n      \n      // 确保URL格式正确\n      const fileUrl = `${cdnHost}/${key}`;\n      console.log('文件上传成功，URL:', fileUrl);\n      \n      return fileUrl;\n    } catch (error) {\n      console.error('上传文件到OSS失败:', error);\n      throw error;\n    }\n  },\n  \n  /**\n   * 批量上传文件到阿里云OSS\n   * @param {Array<File>} files 要上传的文件对象数组\n   * @param {string} dir 上传目录\n   * @returns {Promise<Array<string>>} 文件URL数组\n   */\n  async uploadMultipleFiles(files, dir = 'posts/') {\n    if (!files || files.length === 0) {\n      return [];\n    }\n    \n    try {\n      // 同时获取一次上传策略\n      const policyRes = await this.getOSSPolicy(dir);\n      const policy = policyRes.policy;\n      \n      if (!policy) {\n        throw new Error('获取上传策略失败');\n      }\n      \n      // 检查并处理host，确保是一个有效的URL字符串\n      let host = policy.host;\n      if (typeof host === 'object') {\n        console.error('Host 是一个对象而不是字符串:', host);\n        // 尝试从对象中获取URL，或者构建一个默认URL\n        host = `https://${policy.bucket}.${policy.region}.aliyuncs.com`;\n      }\n      \n      // 确保host是一个有效的URL字符串\n      if (!host.startsWith('http')) {\n        host = `https://${host}`;\n      }\n      \n      console.log('准备批量上传文件到:', host);\n      \n      // 并行上传所有文件\n      const uploadPromises = files.map(async (file, index) => {\n        try {\n          const formData = new FormData();\n          const key = `${policy.key}-${index}${file.name.substring(file.name.lastIndexOf('.'))}`;\n          \n          formData.append('key', key);\n          formData.append('OSSAccessKeyId', policy.accessKeyId);\n          formData.append('policy', policy.policyBase64);\n          formData.append('signature', policy.signature);\n          formData.append('success_action_status', '200');\n          formData.append('file', file);\n          \n          await axios.post(host, formData, {\n            headers: {\n              'Content-Type': 'multipart/form-data'\n            }\n          });\n          \n          // 处理返回URL\n          let cdnHost = policy.cdnHost || host;\n          if (typeof cdnHost === 'object') {\n            cdnHost = host; // 如果cdnHost也是对象，则使用host\n          }\n          \n          const fileUrl = `${cdnHost}/${key}`;\n          console.log(`文件 ${index+1}/${files.length} 上传成功:`, fileUrl);\n          return fileUrl;\n        } catch (error) {\n          console.error(`文件 ${index+1}/${files.length} 上传失败:`, error);\n          throw error;\n        }\n      });\n      \n      // 等待所有上传完成\n      const fileUrls = await Promise.all(uploadPromises);\n      console.log('所有文件上传完成，URL列表:', fileUrls);\n      return fileUrls;\n    } catch (error) {\n      console.error('批量上传文件到OSS失败:', error);\n      throw error;\n    }\n  }\n};\n\nexport default ossApi; "],"names":["useCurrencyStore","defineStore","state","coins","parseInt","localStorage","getItem","loading","actions","addCoins","amount","this","saveCoins","deductCoins","setItem","toString","resetCoins","useTaskStore","tasks","ref","systemTasks","completedTasks","pendingTasks","computed","value","filter","task","completed","fetchTasks","async","response","taskApi","getTasks","error","ElMessage","fetchSystemTasks","getSystemTasks","addTask","importantBool","important","createTask","title","description","deadline","push","success","completeTask","id","find","t","_id","unshift","completedAt","Date","toISOString","plantStore","usePlantStore","plants","length","mainPlant","p","isMainPlant","plantId","expAmount","gainExperience","completeSystemTask","currentPlant","warning","index","findIndex","rewards","experience","status","removeTask","deleteTask","console","removeCompletedTask","updateTask","updatedTask","originalTaskIndex","finalIndex","failedIndex","originalTask","toggleTaskImportance","log","currentImportant","newImportantState","taskIndex","reorderTasks","newOrder","Array","isArray","processedOrder","map","plantDays","firstPlant","createdAt","createdDate","today","diffTime","Math","abs","diffDays","ceil","authStore","useAuthStore","taskStore","isEditing","saving","editedProfile","username","userInfo","email","avatar","bio","gender","birthday","location","signature","defaultAvatars","computedAge","birthDate","age","getFullYear","m","getMonth","getDate","disabledDate","time","getTime","now","userAvatar","userLevel","level","completedTasksCount","showPasswordDialog","changingPassword","passwordFormRef","passwordForm","reactive","currentPassword","newPassword","confirmPassword","passwordRules","required","message","trigger","min","validator","rule","callback","Error","selectDefaultAvatar","handleAvatarChange","isImage","file","raw","type","startsWith","isLt2M","size","ElLoading","service","lock","text","background","fileUrl","ossApi","uploadFile","close","onMounted","fetchUserInfo","enterEditMode","cancelEdit","saveProfile","profileToSave","updateProfile","changePassword","validate","valid","viewOrEditAvatar","info","avatarUrl","window","open","__exports__","getOSSConfig","api","get","getOSSPolicy","dir","params","policyRes","policy","host","bucket","region","formData","FormData","key","name","substring","lastIndexOf","append","accessKeyId","policyBase64","axios","headers","cdnHost","uploadMultipleFiles","files","uploadPromises","fileUrls","Promise","all"],"sourceRoot":""}
{"version":3,"file":"js/979.4ec15ecd.js","mappings":"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","sources":["webpack://zhiyuxinsheng/./src/stores/task.js","webpack://zhiyuxinsheng/./node_modules/date-fns/compareAsc.js","webpack://zhiyuxinsheng/./node_modules/date-fns/differenceInCalendarMonths.js","webpack://zhiyuxinsheng/./node_modules/date-fns/endOfDay.js","webpack://zhiyuxinsheng/./node_modules/date-fns/endOfMonth.js","webpack://zhiyuxinsheng/./node_modules/date-fns/isLastDayOfMonth.js","webpack://zhiyuxinsheng/./node_modules/date-fns/differenceInMonths.js","webpack://zhiyuxinsheng/./node_modules/date-fns/_lib/getRoundingMethod.js","webpack://zhiyuxinsheng/./node_modules/date-fns/differenceInMilliseconds.js","webpack://zhiyuxinsheng/./node_modules/date-fns/differenceInSeconds.js","webpack://zhiyuxinsheng/./node_modules/date-fns/formatDistance.js","webpack://zhiyuxinsheng/./node_modules/date-fns/locale/zh-CN/_lib/formatDistance.js","webpack://zhiyuxinsheng/./node_modules/date-fns/locale/zh-CN/_lib/formatLong.js","webpack://zhiyuxinsheng/./node_modules/date-fns/isSameWeek.js","webpack://zhiyuxinsheng/./node_modules/date-fns/locale/zh-CN/_lib/formatRelative.js","webpack://zhiyuxinsheng/./node_modules/date-fns/locale/zh-CN/_lib/localize.js","webpack://zhiyuxinsheng/./node_modules/date-fns/locale/zh-CN/_lib/match.js","webpack://zhiyuxinsheng/./node_modules/date-fns/locale/zh-CN.js","webpack://zhiyuxinsheng/./src/components/PlantDialog.vue","webpack://zhiyuxinsheng/./src/components/WeatherCanvas.vue","webpack://zhiyuxinsheng/./src/components/WeatherCanvas.vue?0937"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref, computed } from 'vue'\nimport { usePlantStore } from './plant'\nimport { taskApi } from '../services/api'\nimport { ElMessage } from 'element-plus'\n\nexport const useTaskStore = defineStore('task', () => {\n  // 所有任务数据\n  const tasks = ref([])\n  const systemTasks = ref([])\n  const completedTasks = ref([])\n  const loading = ref(false)\n  \n  // 计算属性：待完成任务\n  const pendingTasks = computed(() => tasks.value.filter(task => !task.completed))\n  \n  // 获取所有任务\n  const fetchTasks = async () => {\n    try {\n      loading.value = true\n      const response = await taskApi.getTasks()\n      tasks.value = response.tasks.filter(task => !task.completed)\n      completedTasks.value = response.tasks.filter(task => task.completed)\n    } catch (error) {\n      ElMessage.error('获取任务列表失败')\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 获取系统任务\n  const fetchSystemTasks = async () => {\n    try {\n      loading.value = true\n      const response = await taskApi.getSystemTasks()\n      systemTasks.value = response.tasks\n    } catch (error) {\n      ElMessage.error('获取系统任务失败')\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 添加任务\n  const addTask = async (task) => {\n    try {\n      // 确保important是布尔类型\n      const importantBool = task.important === true || task.important === 'true'\n      \n      const response = await taskApi.createTask({\n        title: task.title,\n        description: task.description || '',\n        deadline: task.deadline || '',\n        important: importantBool\n      })\n      \n      // 添加到本地状态\n      tasks.value.push(response.task)\n      \n      // 不再给创建任务增加经验值\n      ElMessage.success('任务创建成功')\n    } catch (error) {\n      ElMessage.error('创建任务失败')\n    }\n  }\n  \n  // 完成任务\n  const completeTask = async (id) => {\n    try {\n      const response = await taskApi.completeTask(id)\n      \n      // 从任务列表中移除\n      const task = tasks.value.find(t => t._id === id)\n      if (task) {\n        // 将任务移动到已完成列表\n        completedTasks.value.unshift({\n          ...task,\n          completed: true,\n          completedAt: new Date().toISOString()\n        })\n        // 从待办任务中移除\n        tasks.value = tasks.value.filter(t => t._id !== id)\n      }\n      \n      // 增加植物经验值\n      const plantStore = usePlantStore()\n      if (plantStore.plants && plantStore.plants.length > 0) {\n        // 获取主植物\n        const mainPlant = plantStore.plants.find(p => p.isMainPlant)\n        if (mainPlant) {\n          const plantId = mainPlant._id || mainPlant.id\n          if (plantId) {\n            // 根据任务是否重要，增加不同的经验值\n            // 普通任务25点，重要任务50点\n            const expAmount = task && task.important ? 50 : 25;\n            await plantStore.gainExperience(plantId, expAmount)\n            \n            // 显示具体获得的经验值\n            ElMessage.success(`任务已完成，获得 ${expAmount} 点经验值！`)\n          }\n        }\n      } else {\n        ElMessage.success('任务已完成')\n      }\n    } catch (error) {\n      ElMessage.error('完成任务失败')\n    }\n  }\n  \n  // 完成系统任务\n  const completeSystemTask = async (id) => {\n    try {\n      const plantStore = usePlantStore()\n      if (!plantStore.currentPlant) {\n        ElMessage.warning('请先添加一个植物')\n        return false\n      }\n      \n      const response = await taskApi.completeSystemTask(id)\n      \n      // 更新任务状态\n      const index = systemTasks.value.findIndex(t => t._id === id)\n      if (index !== -1) {\n        systemTasks.value[index].completed = true\n      }\n      \n      // 如果后端已经处理了经验值奖励，则显示相应的提示\n      if (response.rewards) {\n        ElMessage.success(`完成任务获得 ${response.rewards.experience} 点经验`)\n      } \n      // 如果后端没有处理经验值奖励，则在前端处理\n      else {\n        // 获取主植物\n        const plantId = plantStore.currentPlant._id || plantStore.currentPlant.id\n        if (plantId) {\n          // 系统任务固定增加35点经验值\n          const expAmount = 35;\n          await plantStore.gainExperience(plantId, expAmount)\n          ElMessage.success(`完成系统任务获得 ${expAmount} 点经验值`)\n        }\n      }\n      \n      return true\n    } catch (error) {\n      if (error.response?.status === 400) {\n        ElMessage.warning('今天已经完成过此任务')\n      } else {\n        ElMessage.error('完成系统任务失败')\n      }\n      return false\n    }\n  }\n  \n  // 移除任务\n  const removeTask = async (id) => {\n    try {\n      // 检查ID是否有效\n      if (!id) {\n        ElMessage.error('任务ID无效，无法删除')\n        return\n      }\n      \n      await taskApi.deleteTask(id)\n      tasks.value = tasks.value.filter(task => task._id !== id)\n      ElMessage.success('任务已删除')\n    } catch (error) {\n      console.error('删除任务失败:', error)\n      ElMessage.error('删除任务失败')\n    }\n  }\n  \n  // 删除已完成任务\n  const removeCompletedTask = async (id) => {\n    try {\n      // 检查ID是否有效\n      if (!id) {\n        ElMessage.error('任务ID无效，无法删除')\n        return\n      }\n      \n      await taskApi.deleteTask(id)\n      completedTasks.value = completedTasks.value.filter(task => task._id !== id)\n      ElMessage.success('任务已删除')\n    } catch (error) {\n      console.error('删除任务失败:', error)\n      ElMessage.error('删除任务失败')\n    }\n  }\n  \n  // 更新任务\n  const updateTask = async (updatedTask) => {\n    try {\n      const { _id, title, description, deadline, important } = updatedTask\n      \n      // 确保important是布尔类型\n      const importantBool = important === true || important === 'true'\n      \n      // 保存更新前的任务状态，以便在请求失败时恢复\n      const originalTaskIndex = tasks.value.findIndex(t => t._id === _id)\n      const originalTask = originalTaskIndex !== -1 ? { ...tasks.value[originalTaskIndex] } : null\n      \n      // 先更新本地状态，让UI立即响应\n      if (originalTaskIndex !== -1) {\n        tasks.value[originalTaskIndex] = { \n          ...tasks.value[originalTaskIndex],\n          title,\n          description,\n          deadline,\n          important: importantBool\n        }\n      }\n      \n      // 然后发送请求更新服务器状态\n      const response = await taskApi.updateTask(_id, {\n        title,\n        description,\n        deadline,\n        important: importantBool\n      })\n      \n      // 如果服务器响应成功，使用服务器返回的数据更新本地状态\n      if (response && response.task) {\n        const finalIndex = tasks.value.findIndex(t => t._id === _id)\n        if (finalIndex !== -1) {\n          tasks.value[finalIndex] = response.task\n        }\n      }\n      \n      ElMessage.success('任务已更新')\n    } catch (error) {\n      console.error('更新任务失败:', error)\n      \n      // 如果请求失败，恢复原始状态\n      const failedIndex = tasks.value.findIndex(t => t._id === updatedTask._id)\n      if (failedIndex !== -1 && originalTask) {\n        tasks.value[failedIndex] = originalTask\n      }\n      \n      ElMessage.error('更新任务失败')\n    }\n  }\n  \n  // 切换任务重要性\n  const toggleTaskImportance = async (id) => {\n    const task = tasks.value.find(t => t._id === id)\n    if (task) {\n      try {\n        // 先临时更新本地状态，让UI立即响应\n        console.log('切换任务重要性 - 当前状态:', task.important, '类型:', typeof task.important)\n        \n        // 将字符串类型的important转换为布尔类型\n        const currentImportant = task.important === true || task.important === 'true'\n        const newImportantState = !currentImportant\n        console.log('切换任务重要性 - 新状态:', newImportantState)\n        \n        const taskIndex = tasks.value.findIndex(t => t._id === id)\n        if (taskIndex !== -1) {\n          // 创建一个任务的副本并修改其重要性\n          const updatedTask = { ...tasks.value[taskIndex], important: newImportantState }\n          tasks.value[taskIndex] = updatedTask\n        }\n        \n        // 然后发送请求更新服务器状态\n        const response = await taskApi.updateTask(id, {\n          title: task.title,\n          description: task.description,\n          deadline: task.deadline,\n          important: newImportantState\n        })\n        \n        // 如果服务器响应成功，使用服务器返回的数据更新本地状态\n        if (response && response.task) {\n          const finalIndex = tasks.value.findIndex(t => t._id === id)\n          if (finalIndex !== -1) {\n            tasks.value[finalIndex] = response.task\n          }\n        }\n        \n        ElMessage.success(`任务已${newImportantState ? '标记为重要' : '取消重要标记'}`)\n      } catch (error) {\n        console.error('更新任务重要性失败:', error)\n        // 如果请求失败，恢复原始状态\n        const failedIndex = tasks.value.findIndex(t => t._id === id)\n        if (failedIndex !== -1) {\n          // 恢复原始状态，注意保持原来的类型\n          tasks.value[failedIndex] = { ...tasks.value[failedIndex], important: task.important }\n        }\n        ElMessage.error('更新任务重要性失败')\n      }\n    }\n  }\n\n  // 重新排序任务\n  const reorderTasks = (newOrder) => {\n    if (!newOrder || !Array.isArray(newOrder)) return;\n    \n    // 确保任务的important字段是正确处理的\n    const processedOrder = newOrder.map(task => {\n      // 处理important字段类型\n      const importantBool = task.important === true || task.important === 'true';\n      return {\n        ...task,\n        important: importantBool\n      }\n    });\n    \n    // 更新任务顺序\n    tasks.value = processedOrder;\n  }\n\n  return {\n    tasks,\n    systemTasks,\n    completedTasks,\n    pendingTasks,\n    loading,\n    \n    fetchTasks,\n    fetchSystemTasks,\n    addTask,\n    completeTask,\n    completeSystemTask,\n    removeTask,\n    removeCompletedTask,\n    updateTask,\n    toggleTaskImportance,\n    reorderTasks\n  }\n}) ","import { toDate } from \"./toDate.js\";\n\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * @param dateLeft - The first date to compare\n * @param dateRight - The second date to compare\n *\n * @returns The result of the comparison\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * const result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * const result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\nexport function compareAsc(dateLeft, dateRight) {\n  const diff = +toDate(dateLeft) - +toDate(dateRight);\n\n  if (diff < 0) return -1;\n  else if (diff > 0) return 1;\n\n  // Return 0 if diff is 0; return NaN if diff is NaN\n  return diff;\n}\n\n// Fallback for modularized imports:\nexport default compareAsc;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\n\n/**\n * The {@link differenceInCalendarMonths} function options.\n */\n\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of calendar months\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\nexport function differenceInCalendarMonths(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n\n  const yearsDiff = laterDate_.getFullYear() - earlierDate_.getFullYear();\n  const monthsDiff = laterDate_.getMonth() - earlierDate_.getMonth();\n\n  return yearsDiff * 12 + monthsDiff;\n}\n\n// Fallback for modularized imports:\nexport default differenceInCalendarMonths;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfDay} function options.\n */\n\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a day\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * const result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\nexport function endOfDay(date, options) {\n  const _date = toDate(date, options?.in);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfDay;\n","import { toDate } from \"./toDate.js\";\n\n/**\n * The {@link endOfMonth} function options.\n */\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { endOfDay } from \"./endOfDay.js\";\nimport { endOfMonth } from \"./endOfMonth.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * @name isLastDayOfMonth\n * @category Month Helpers\n * @summary Is the given date the last day of a month?\n *\n * @description\n * Is the given date the last day of a month?\n *\n * @param date - The date to check\n * @param options - An object with options\n *\n * @returns The date is the last day of a month\n *\n * @example\n * // Is 28 February 2014 the last day of a month?\n * const result = isLastDayOfMonth(new Date(2014, 1, 28))\n * //=> true\n */\nexport function isLastDayOfMonth(date, options) {\n  const _date = toDate(date, options?.in);\n  return +endOfDay(_date, options) === +endOfMonth(_date, options);\n}\n\n// Fallback for modularized imports:\nexport default isLastDayOfMonth;\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { differenceInCalendarMonths } from \"./differenceInCalendarMonths.js\";\nimport { isLastDayOfMonth } from \"./isLastDayOfMonth.js\";\n\n/**\n * The {@link differenceInMonths} function options.\n */\n\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options\n *\n * @returns The number of full months\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * const result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\nexport function differenceInMonths(laterDate, earlierDate, options) {\n  const [laterDate_, workingLaterDate, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    laterDate,\n    earlierDate,\n  );\n\n  const sign = compareAsc(workingLaterDate, earlierDate_);\n  const difference = Math.abs(\n    differenceInCalendarMonths(workingLaterDate, earlierDate_),\n  );\n\n  if (difference < 1) return 0;\n\n  if (workingLaterDate.getMonth() === 1 && workingLaterDate.getDate() > 27)\n    workingLaterDate.setDate(30);\n\n  workingLaterDate.setMonth(workingLaterDate.getMonth() - sign * difference);\n\n  let isLastMonthNotFull = compareAsc(workingLaterDate, earlierDate_) === -sign;\n\n  if (\n    isLastDayOfMonth(laterDate_) &&\n    difference === 1 &&\n    compareAsc(laterDate_, earlierDate_) === 1\n  ) {\n    isLastMonthNotFull = false;\n  }\n\n  const result = sign * (difference - +isLastMonthNotFull);\n  return result === 0 ? 0 : result;\n}\n\n// Fallback for modularized imports:\nexport default differenceInMonths;\n","export function getRoundingMethod(method) {\n  return (number) => {\n    const round = method ? Math[method] : Math.trunc;\n    const result = round(number);\n    // Prevent negative zero\n    return result === 0 ? 0 : result;\n  };\n}\n","import { toDate } from \"./toDate.js\";\n\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n *\n * @returns The number of milliseconds\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * const result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\nexport function differenceInMilliseconds(laterDate, earlierDate) {\n  return +toDate(laterDate) - +toDate(earlierDate);\n}\n\n// Fallback for modularized imports:\nexport default differenceInMilliseconds;\n","import { getRoundingMethod } from \"./_lib/getRoundingMethod.js\";\nimport { differenceInMilliseconds } from \"./differenceInMilliseconds.js\";\n\n/**\n * The {@link differenceInSeconds} function options.\n */\n\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * @param laterDate - The later date\n * @param earlierDate - The earlier date\n * @param options - An object with options.\n *\n * @returns The number of seconds\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * const result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\nexport function differenceInSeconds(laterDate, earlierDate, options) {\n  const diff = differenceInMilliseconds(laterDate, earlierDate) / 1000;\n  return getRoundingMethod(options?.roundingMethod)(diff);\n}\n\n// Fallback for modularized imports:\nexport default differenceInSeconds;\n","import { defaultLocale } from \"./_lib/defaultLocale.js\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.js\";\nimport { getTimezoneOffsetInMilliseconds } from \"./_lib/getTimezoneOffsetInMilliseconds.js\";\nimport { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { compareAsc } from \"./compareAsc.js\";\nimport { minutesInDay, minutesInMonth } from \"./constants.js\";\nimport { differenceInMonths } from \"./differenceInMonths.js\";\nimport { differenceInSeconds } from \"./differenceInSeconds.js\";\n\n/**\n * The {@link formatDistance} function options.\n */\n\n/**\n * @name formatDistance\n * @category Common Helpers\n * @summary Return the distance between the given dates in words.\n *\n * @description\n * Return the distance between the given dates in words.\n *\n * | Distance between dates                                            | Result              |\n * |-------------------------------------------------------------------|---------------------|\n * | 0 ... 30 secs                                                     | less than a minute  |\n * | 30 secs ... 1 min 30 secs                                         | 1 minute            |\n * | 1 min 30 secs ... 44 mins 30 secs                                 | [2..44] minutes     |\n * | 44 mins ... 30 secs ... 89 mins 30 secs                           | about 1 hour        |\n * | 89 mins 30 secs ... 23 hrs 59 mins 30 secs                        | about [2..24] hours |\n * | 23 hrs 59 mins 30 secs ... 41 hrs 59 mins 30 secs                 | 1 day               |\n * | 41 hrs 59 mins 30 secs ... 29 days 23 hrs 59 mins 30 secs         | [2..30] days        |\n * | 29 days 23 hrs 59 mins 30 secs ... 44 days 23 hrs 59 mins 30 secs | about 1 month       |\n * | 44 days 23 hrs 59 mins 30 secs ... 59 days 23 hrs 59 mins 30 secs | about 2 months      |\n * | 59 days 23 hrs 59 mins 30 secs ... 1 yr                           | [2..12] months      |\n * | 1 yr ... 1 yr 3 months                                            | about 1 year        |\n * | 1 yr 3 months ... 1 yr 9 month s                                  | over 1 year         |\n * | 1 yr 9 months ... 2 yrs                                           | almost 2 years      |\n * | N yrs ... N yrs 3 months                                          | about N years       |\n * | N yrs 3 months ... N yrs 9 months                                 | over N years        |\n * | N yrs 9 months ... N+1 yrs                                        | almost N+1 years    |\n *\n * With `options.includeSeconds == true`:\n * | Distance between dates | Result               |\n * |------------------------|----------------------|\n * | 0 secs ... 5 secs      | less than 5 seconds  |\n * | 5 secs ... 10 secs     | less than 10 seconds |\n * | 10 secs ... 20 secs    | less than 20 seconds |\n * | 20 secs ... 40 secs    | half a minute        |\n * | 40 secs ... 60 secs    | less than a minute   |\n * | 60 secs ... 90 secs    | 1 minute             |\n *\n * @param laterDate - The date\n * @param earlierDate - The date to compare with\n * @param options - An object with options\n *\n * @returns The distance in words\n *\n * @throws `date` must not be Invalid Date\n * @throws `baseDate` must not be Invalid Date\n * @throws `options.locale` must contain `formatDistance` property\n *\n * @example\n * // What is the distance between 2 July 2014 and 1 January 2015?\n * const result = formatDistance(new Date(2014, 6, 2), new Date(2015, 0, 1))\n * //=> '6 months'\n *\n * @example\n * // What is the distance between 1 January 2015 00:00:15\n * // and 1 January 2015 00:00:00, including seconds?\n * const result = formatDistance(\n *   new Date(2015, 0, 1, 0, 0, 15),\n *   new Date(2015, 0, 1, 0, 0, 0),\n *   { includeSeconds: true }\n * )\n * //=> 'less than 20 seconds'\n *\n * @example\n * // What is the distance from 1 January 2016\n * // to 1 January 2015, with a suffix?\n * const result = formatDistance(new Date(2015, 0, 1), new Date(2016, 0, 1), {\n *   addSuffix: true\n * })\n * //=> 'about 1 year ago'\n *\n * @example\n * // What is the distance between 1 August 2016 and 1 January 2015 in Esperanto?\n * import { eoLocale } from 'date-fns/locale/eo'\n * const result = formatDistance(new Date(2016, 7, 1), new Date(2015, 0, 1), {\n *   locale: eoLocale\n * })\n * //=> 'pli ol 1 jaro'\n */\nexport function formatDistance(laterDate, earlierDate, options) {\n  const defaultOptions = getDefaultOptions();\n  const locale = options?.locale ?? defaultOptions.locale ?? defaultLocale;\n  const minutesInAlmostTwoDays = 2520;\n\n  const comparison = compareAsc(laterDate, earlierDate);\n\n  if (isNaN(comparison)) throw new RangeError(\"Invalid time value\");\n\n  const localizeOptions = Object.assign({}, options, {\n    addSuffix: options?.addSuffix,\n    comparison: comparison,\n  });\n\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    ...(comparison > 0 ? [earlierDate, laterDate] : [laterDate, earlierDate]),\n  );\n\n  const seconds = differenceInSeconds(earlierDate_, laterDate_);\n  const offsetInSeconds =\n    (getTimezoneOffsetInMilliseconds(earlierDate_) -\n      getTimezoneOffsetInMilliseconds(laterDate_)) /\n    1000;\n  const minutes = Math.round((seconds - offsetInSeconds) / 60);\n  let months;\n\n  // 0 up to 2 mins\n  if (minutes < 2) {\n    if (options?.includeSeconds) {\n      if (seconds < 5) {\n        return locale.formatDistance(\"lessThanXSeconds\", 5, localizeOptions);\n      } else if (seconds < 10) {\n        return locale.formatDistance(\"lessThanXSeconds\", 10, localizeOptions);\n      } else if (seconds < 20) {\n        return locale.formatDistance(\"lessThanXSeconds\", 20, localizeOptions);\n      } else if (seconds < 40) {\n        return locale.formatDistance(\"halfAMinute\", 0, localizeOptions);\n      } else if (seconds < 60) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", 1, localizeOptions);\n      }\n    } else {\n      if (minutes === 0) {\n        return locale.formatDistance(\"lessThanXMinutes\", 1, localizeOptions);\n      } else {\n        return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n      }\n    }\n\n    // 2 mins up to 0.75 hrs\n  } else if (minutes < 45) {\n    return locale.formatDistance(\"xMinutes\", minutes, localizeOptions);\n\n    // 0.75 hrs up to 1.5 hrs\n  } else if (minutes < 90) {\n    return locale.formatDistance(\"aboutXHours\", 1, localizeOptions);\n\n    // 1.5 hrs up to 24 hrs\n  } else if (minutes < minutesInDay) {\n    const hours = Math.round(minutes / 60);\n    return locale.formatDistance(\"aboutXHours\", hours, localizeOptions);\n\n    // 1 day up to 1.75 days\n  } else if (minutes < minutesInAlmostTwoDays) {\n    return locale.formatDistance(\"xDays\", 1, localizeOptions);\n\n    // 1.75 days up to 30 days\n  } else if (minutes < minutesInMonth) {\n    const days = Math.round(minutes / minutesInDay);\n    return locale.formatDistance(\"xDays\", days, localizeOptions);\n\n    // 1 month up to 2 months\n  } else if (minutes < minutesInMonth * 2) {\n    months = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"aboutXMonths\", months, localizeOptions);\n  }\n\n  months = differenceInMonths(earlierDate_, laterDate_);\n\n  // 2 months up to 12 months\n  if (months < 12) {\n    const nearestMonth = Math.round(minutes / minutesInMonth);\n    return locale.formatDistance(\"xMonths\", nearestMonth, localizeOptions);\n\n    // 1 year up to max Date\n  } else {\n    const monthsSinceStartOfYear = months % 12;\n    const years = Math.trunc(months / 12);\n\n    // N years up to 1 years 3 months\n    if (monthsSinceStartOfYear < 3) {\n      return locale.formatDistance(\"aboutXYears\", years, localizeOptions);\n\n      // N years 3 months up to N years 9 months\n    } else if (monthsSinceStartOfYear < 9) {\n      return locale.formatDistance(\"overXYears\", years, localizeOptions);\n\n      // N years 9 months up to N year 12 months\n    } else {\n      return locale.formatDistance(\"almostXYears\", years + 1, localizeOptions);\n    }\n  }\n}\n\n// Fallback for modularized imports:\nexport default formatDistance;\n","const formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: \"不到 1 秒\",\n    other: \"不到 {{count}} 秒\",\n  },\n\n  xSeconds: {\n    one: \"1 秒\",\n    other: \"{{count}} 秒\",\n  },\n\n  halfAMinute: \"半分钟\",\n\n  lessThanXMinutes: {\n    one: \"不到 1 分钟\",\n    other: \"不到 {{count}} 分钟\",\n  },\n\n  xMinutes: {\n    one: \"1 分钟\",\n    other: \"{{count}} 分钟\",\n  },\n\n  xHours: {\n    one: \"1 小时\",\n    other: \"{{count}} 小时\",\n  },\n\n  aboutXHours: {\n    one: \"大约 1 小时\",\n    other: \"大约 {{count}} 小时\",\n  },\n\n  xDays: {\n    one: \"1 天\",\n    other: \"{{count}} 天\",\n  },\n\n  aboutXWeeks: {\n    one: \"大约 1 个星期\",\n    other: \"大约 {{count}} 个星期\",\n  },\n\n  xWeeks: {\n    one: \"1 个星期\",\n    other: \"{{count}} 个星期\",\n  },\n\n  aboutXMonths: {\n    one: \"大约 1 个月\",\n    other: \"大约 {{count}} 个月\",\n  },\n\n  xMonths: {\n    one: \"1 个月\",\n    other: \"{{count}} 个月\",\n  },\n\n  aboutXYears: {\n    one: \"大约 1 年\",\n    other: \"大约 {{count}} 年\",\n  },\n\n  xYears: {\n    one: \"1 年\",\n    other: \"{{count}} 年\",\n  },\n\n  overXYears: {\n    one: \"超过 1 年\",\n    other: \"超过 {{count}} 年\",\n  },\n\n  almostXYears: {\n    one: \"将近 1 年\",\n    other: \"将近 {{count}} 年\",\n  },\n};\n\nexport const formatDistance = (token, count, options) => {\n  let result;\n\n  const tokenValue = formatDistanceLocale[token];\n  if (typeof tokenValue === \"string\") {\n    result = tokenValue;\n  } else if (count === 1) {\n    result = tokenValue.one;\n  } else {\n    result = tokenValue.other.replace(\"{{count}}\", String(count));\n  }\n\n  if (options?.addSuffix) {\n    if (options.comparison && options.comparison > 0) {\n      return result + \"内\";\n    } else {\n      return result + \"前\";\n    }\n  }\n\n  return result;\n};\n","import { buildFormatLongFn } from \"../../_lib/buildFormatLongFn.js\";\n\nconst dateFormats = {\n  full: \"y'年'M'月'd'日' EEEE\",\n  long: \"y'年'M'月'd'日'\",\n  medium: \"yyyy-MM-dd\",\n  short: \"yy-MM-dd\",\n};\n\nconst timeFormats = {\n  full: \"zzzz a h:mm:ss\",\n  long: \"z a h:mm:ss\",\n  medium: \"a h:mm:ss\",\n  short: \"a h:mm\",\n};\n\nconst dateTimeFormats = {\n  full: \"{{date}} {{time}}\",\n  long: \"{{date}} {{time}}\",\n  medium: \"{{date}} {{time}}\",\n  short: \"{{date}} {{time}}\",\n};\n\nexport const formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: \"full\",\n  }),\n\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: \"full\",\n  }),\n\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: \"full\",\n  }),\n};\n","import { normalizeDates } from \"./_lib/normalizeDates.js\";\nimport { startOfWeek } from \"./startOfWeek.js\";\n\n/**\n * The {@link isSameWeek} function options.\n */\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * @param laterDate - The first date to check\n * @param earlierDate - The second date to check\n * @param options - An object with options\n *\n * @returns The dates are in the same week (and month and year)\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * const result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n *\n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * const result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nexport function isSameWeek(laterDate, earlierDate, options) {\n  const [laterDate_, earlierDate_] = normalizeDates(\n    options?.in,\n    laterDate,\n    earlierDate,\n  );\n  return (\n    +startOfWeek(laterDate_, options) === +startOfWeek(earlierDate_, options)\n  );\n}\n\n// Fallback for modularized imports:\nexport default isSameWeek;\n","import { isSameWeek } from \"../../../isSameWeek.js\";\n\nfunction checkWeek(date, baseDate, options) {\n  const baseFormat = \"eeee p\";\n\n  if (isSameWeek(date, baseDate, options)) {\n    return baseFormat; // in same week\n  } else if (date.getTime() > baseDate.getTime()) {\n    return \"'下个'\" + baseFormat; // in next week\n  }\n  return \"'上个'\" + baseFormat; // in last week\n}\n\nconst formatRelativeLocale = {\n  lastWeek: checkWeek, // days before yesterday, maybe in this week or last week\n  yesterday: \"'昨天' p\",\n  today: \"'今天' p\",\n  tomorrow: \"'明天' p\",\n  nextWeek: checkWeek, // days after tomorrow, maybe in this week or next week\n  other: \"PP p\",\n};\n\nexport const formatRelative = (token, date, baseDate, options) => {\n  const format = formatRelativeLocale[token];\n\n  if (typeof format === \"function\") {\n    return format(date, baseDate, options);\n  }\n\n  return format;\n};\n","import { buildLocalizeFn } from \"../../_lib/buildLocalizeFn.js\";\n\nconst eraValues = {\n  narrow: [\"前\", \"公元\"],\n  abbreviated: [\"前\", \"公元\"],\n  wide: [\"公元前\", \"公元\"],\n};\n\nconst quarterValues = {\n  narrow: [\"1\", \"2\", \"3\", \"4\"],\n  abbreviated: [\"第一季\", \"第二季\", \"第三季\", \"第四季\"],\n  wide: [\"第一季度\", \"第二季度\", \"第三季度\", \"第四季度\"],\n};\n\nconst monthValues = {\n  narrow: [\n    \"一\",\n    \"二\",\n    \"三\",\n    \"四\",\n    \"五\",\n    \"六\",\n    \"七\",\n    \"八\",\n    \"九\",\n    \"十\",\n    \"十一\",\n    \"十二\",\n  ],\n\n  abbreviated: [\n    \"1月\",\n    \"2月\",\n    \"3月\",\n    \"4月\",\n    \"5月\",\n    \"6月\",\n    \"7月\",\n    \"8月\",\n    \"9月\",\n    \"10月\",\n    \"11月\",\n    \"12月\",\n  ],\n\n  wide: [\n    \"一月\",\n    \"二月\",\n    \"三月\",\n    \"四月\",\n    \"五月\",\n    \"六月\",\n    \"七月\",\n    \"八月\",\n    \"九月\",\n    \"十月\",\n    \"十一月\",\n    \"十二月\",\n  ],\n};\n\nconst dayValues = {\n  narrow: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"],\n  short: [\"日\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\"],\n  abbreviated: [\"周日\", \"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\"],\n\n  wide: [\"星期日\", \"星期一\", \"星期二\", \"星期三\", \"星期四\", \"星期五\", \"星期六\"],\n};\n\nconst dayPeriodValues = {\n  narrow: {\n    am: \"上\",\n    pm: \"下\",\n    midnight: \"凌晨\",\n    noon: \"午\",\n    morning: \"早\",\n    afternoon: \"下午\",\n    evening: \"晚\",\n    night: \"夜\",\n  },\n  abbreviated: {\n    am: \"上午\",\n    pm: \"下午\",\n    midnight: \"凌晨\",\n    noon: \"中午\",\n    morning: \"早晨\",\n    afternoon: \"中午\",\n    evening: \"晚上\",\n    night: \"夜间\",\n  },\n  wide: {\n    am: \"上午\",\n    pm: \"下午\",\n    midnight: \"凌晨\",\n    noon: \"中午\",\n    morning: \"早晨\",\n    afternoon: \"中午\",\n    evening: \"晚上\",\n    night: \"夜间\",\n  },\n};\n\nconst formattingDayPeriodValues = {\n  narrow: {\n    am: \"上\",\n    pm: \"下\",\n    midnight: \"凌晨\",\n    noon: \"午\",\n    morning: \"早\",\n    afternoon: \"下午\",\n    evening: \"晚\",\n    night: \"夜\",\n  },\n  abbreviated: {\n    am: \"上午\",\n    pm: \"下午\",\n    midnight: \"凌晨\",\n    noon: \"中午\",\n    morning: \"早晨\",\n    afternoon: \"中午\",\n    evening: \"晚上\",\n    night: \"夜间\",\n  },\n  wide: {\n    am: \"上午\",\n    pm: \"下午\",\n    midnight: \"凌晨\",\n    noon: \"中午\",\n    morning: \"早晨\",\n    afternoon: \"中午\",\n    evening: \"晚上\",\n    night: \"夜间\",\n  },\n};\n\nconst ordinalNumber = (dirtyNumber, options) => {\n  const number = Number(dirtyNumber);\n\n  switch (options?.unit) {\n    case \"date\":\n      return number.toString() + \"日\";\n    case \"hour\":\n      return number.toString() + \"时\";\n    case \"minute\":\n      return number.toString() + \"分\";\n    case \"second\":\n      return number.toString() + \"秒\";\n    default:\n      return \"第 \" + number.toString();\n  }\n};\n\nexport const localize = {\n  ordinalNumber,\n\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: \"wide\",\n  }),\n\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: \"wide\",\n    argumentCallback: (quarter) => quarter - 1,\n  }),\n\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: \"wide\",\n  }),\n\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: \"wide\",\n  }),\n\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: \"wide\",\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: \"wide\",\n  }),\n};\n","import { buildMatchFn } from \"../../_lib/buildMatchFn.js\";\nimport { buildMatchPatternFn } from \"../../_lib/buildMatchPatternFn.js\";\n\nconst matchOrdinalNumberPattern = /^(第\\s*)?\\d+(日|时|分|秒)?/i;\nconst parseOrdinalNumberPattern = /\\d+/i;\n\nconst matchEraPatterns = {\n  narrow: /^(前)/i,\n  abbreviated: /^(前)/i,\n  wide: /^(公元前|公元)/i,\n};\nconst parseEraPatterns = {\n  any: [/^(前)/i, /^(公元)/i],\n};\n\nconst matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^第[一二三四]刻/i,\n  wide: /^第[一二三四]刻钟/i,\n};\nconst parseQuarterPatterns = {\n  any: [/(1|一)/i, /(2|二)/i, /(3|三)/i, /(4|四)/i],\n};\n\nconst matchMonthPatterns = {\n  narrow: /^(一|二|三|四|五|六|七|八|九|十[二一])/i,\n  abbreviated: /^(一|二|三|四|五|六|七|八|九|十[二一]|\\d|1[12])月/i,\n  wide: /^(一|二|三|四|五|六|七|八|九|十[二一])月/i,\n};\nconst parseMonthPatterns = {\n  narrow: [\n    /^一/i,\n    /^二/i,\n    /^三/i,\n    /^四/i,\n    /^五/i,\n    /^六/i,\n    /^七/i,\n    /^八/i,\n    /^九/i,\n    /^十(?!(一|二))/i,\n    /^十一/i,\n    /^十二/i,\n  ],\n\n  any: [\n    /^一|1/i,\n    /^二|2/i,\n    /^三|3/i,\n    /^四|4/i,\n    /^五|5/i,\n    /^六|6/i,\n    /^七|7/i,\n    /^八|8/i,\n    /^九|9/i,\n    /^十(?!(一|二))|10/i,\n    /^十一|11/i,\n    /^十二|12/i,\n  ],\n};\n\nconst matchDayPatterns = {\n  narrow: /^[一二三四五六日]/i,\n  short: /^[一二三四五六日]/i,\n  abbreviated: /^周[一二三四五六日]/i,\n  wide: /^星期[一二三四五六日]/i,\n};\nconst parseDayPatterns = {\n  any: [/日/i, /一/i, /二/i, /三/i, /四/i, /五/i, /六/i],\n};\n\nconst matchDayPeriodPatterns = {\n  any: /^(上午?|下午?|午夜|[中正]午|早上?|下午|晚上?|凌晨|)/i,\n};\nconst parseDayPeriodPatterns = {\n  any: {\n    am: /^上午?/i,\n    pm: /^下午?/i,\n    midnight: /^午夜/i,\n    noon: /^[中正]午/i,\n    morning: /^早上/i,\n    afternoon: /^下午/i,\n    evening: /^晚上?/i,\n    night: /^凌晨/i,\n  },\n};\n\nexport const match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: (value) => parseInt(value, 10),\n  }),\n\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: \"any\",\n    valueCallback: (index) => index + 1,\n  }),\n\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: \"wide\",\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: \"any\",\n  }),\n\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: \"any\",\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: \"any\",\n  }),\n};\n","import { formatDistance } from \"./zh-CN/_lib/formatDistance.js\";\nimport { formatLong } from \"./zh-CN/_lib/formatLong.js\";\nimport { formatRelative } from \"./zh-CN/_lib/formatRelative.js\";\nimport { localize } from \"./zh-CN/_lib/localize.js\";\nimport { match } from \"./zh-CN/_lib/match.js\";\n\n/**\n * @category Locales\n * @summary Chinese Simplified locale.\n * @language Chinese Simplified\n * @iso-639-2 zho\n * @author Changyu Geng [@KingMario](https://github.com/KingMario)\n * @author Song Shuoyun [@fnlctrl](https://github.com/fnlctrl)\n * @author sabrinaM [@sabrinamiao](https://github.com/sabrinamiao)\n * @author Carney Wu [@cubicwork](https://github.com/cubicwork)\n * @author Terrence Lam [@skyuplam](https://github.com/skyuplam)\n */\nexport const zhCN = {\n  code: \"zh-CN\",\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 1 /* Monday */,\n    firstWeekContainsDate: 4,\n  },\n};\n\n// Fallback for modularized imports:\nexport default zhCN;\n","import script from \"./PlantDialog.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./PlantDialog.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./PlantDialog.vue?vue&type=style&index=0&id=ac86cebe&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-ac86cebe\"]])\n\nexport default __exports__","<template>\n  <canvas ref=\"canvas\" class=\"weather-canvas\"></canvas>\n</template>\n\n<script setup>\nimport { ref, onMounted, onUnmounted, watch } from 'vue'\n\nconst props = defineProps({\n  weather: {\n    type: String,\n    required: true,\n    default: 'sunny',\n    validator: (value) => ['sunny', 'rainy', 'cloudy'].includes(value)\n  },\n  width: {\n    type: Number,\n    default: 300\n  },\n  height: {\n    type: Number,\n    default: 300\n  }\n})\n\nconst canvas = ref(null)\nlet ctx = null\nlet animationFrameId = null\nlet particles = []\nlet gradientBg = null\n\n// 初始化画布和粒子\nconst initCanvas = () => {\n  if (!canvas.value) return\n  \n  const dpr = window.devicePixelRatio || 1\n  ctx = canvas.value.getContext('2d')\n  \n  // 设置画布尺寸\n  canvas.value.width = props.width * dpr\n  canvas.value.height = props.height * dpr\n  \n  // 适应高分辨率显示器\n  ctx.scale(dpr, dpr)\n  \n  // 重置粒子数组\n  particles = []\n  \n  // 创建背景渐变\n  createBackgroundGradient()\n  \n  // 根据天气类型初始化不同的粒子\n  if (props.weather === 'rainy') {\n    initRain()\n  } else if (props.weather === 'sunny') {\n    initSun()\n  } else if (props.weather === 'cloudy') {\n    initClouds()\n  }\n  \n  // 开始动画循环\n  startAnimation()\n}\n\n// 创建背景渐变\nconst createBackgroundGradient = () => {\n  if (props.weather === 'sunny') {\n    gradientBg = ctx.createLinearGradient(0, 0, 0, props.height)\n    gradientBg.addColorStop(0, 'rgba(135, 206, 250, 0.3)')\n    gradientBg.addColorStop(1, 'rgba(135, 206, 250, 0)')\n  } else if (props.weather === 'rainy') {\n    gradientBg = ctx.createLinearGradient(0, 0, 0, props.height)\n    gradientBg.addColorStop(0, 'rgba(105, 105, 105, 0.2)')\n    gradientBg.addColorStop(1, 'rgba(105, 105, 105, 0)')\n  } else if (props.weather === 'cloudy') {\n    gradientBg = ctx.createLinearGradient(0, 0, 0, props.height)\n    gradientBg.addColorStop(0, 'rgba(200, 200, 200, 0.2)')\n    gradientBg.addColorStop(1, 'rgba(200, 200, 200, 0)')\n  }\n}\n\n// 雨天效果\nconst initRain = () => {\n  // 雨滴数量和类型\n  const raindropsCount = 180\n  \n  for (let i = 0; i < raindropsCount; i++) {\n    const isSplash = Math.random() > 0.9\n    \n    if (isSplash) {\n      // 水花粒子\n      particles.push({\n        type: 'splash',\n        x: Math.random() * props.width,\n        y: props.height - 10,\n        radius: Math.random() * 3 + 1,\n        speedX: Math.random() * 3 - 1.5,\n        speedY: -Math.random() * 5 - 2,\n        gravity: 0.2,\n        life: Math.random() * 30 + 30,\n        opacity: 0.7\n      })\n    } else {\n      // 雨滴\n      particles.push({\n        type: 'raindrop',\n        x: Math.random() * props.width,\n        y: Math.random() * props.height - props.height,\n        length: Math.random() * 20 + 10,\n        speed: Math.random() * 12 + 8,\n        thickness: Math.random() * 1.8 + 0.5,\n        windOffset: Math.sin(Math.random() * Math.PI) * 0.5\n      })\n    }\n  }\n}\n\n// 晴天效果\nconst initSun = () => {\n  // 太阳 - 尺寸减小30%\n  particles.push({\n    type: 'sun',\n    x: props.width * 0.75,\n    y: props.height * 0.25,\n    radius: props.width * 0.1, // 从0.15减小到0.1\n    rayLength: props.width * 0.08, // 从0.12减小到0.08\n    rayCount: 12,\n    rotation: 0,\n    rotationSpeed: 0.002,\n    pulse: 0,\n    pulseSpeed: 0.03\n  })\n  \n  // 光点\n  for (let i = 0; i < 40; i++) {\n    particles.push({\n      type: 'sparkle',\n      x: Math.random() * props.width,\n      y: Math.random() * props.height,\n      radius: Math.random() * 3 + 1,\n      alpha: Math.random() * 0.5 + 0.3,\n      speed: Math.random() * 0.5 + 0.2,\n      pulse: Math.random() * Math.PI * 2\n    })\n  }\n  \n  // 小云朵装饰\n  for (let i = 0; i < 3; i++) {\n    particles.push({\n      type: 'smallCloud',\n      x: Math.random() * props.width,\n      y: Math.random() * (props.height * 0.4),\n      radius: Math.random() * 20 + 15,\n      speed: Math.random() * 0.3 + 0.1,\n      opacity: Math.random() * 0.2 + 0.1\n    })\n  }\n}\n\n// 多云效果\nconst initClouds = () => {\n  // 大云朵\n  for (let i = 0; i < 5; i++) {\n    particles.push({\n      type: 'bigCloud',\n      x: Math.random() * props.width * 1.5 - props.width * 0.25,\n      y: Math.random() * (props.height * 0.6),\n      radius: Math.random() * 60 + 40,\n      speed: Math.random() * 0.4 + 0.1,\n      opacity: Math.random() * 0.5 + 0.4,\n      details: Math.floor(Math.random() * 3) + 3\n    })\n  }\n  \n  // 小云朵\n  for (let i = 0; i < 8; i++) {\n    particles.push({\n      type: 'smallCloud',\n      x: Math.random() * props.width * 1.5 - props.width * 0.25,\n      y: Math.random() * (props.height * 0.8),\n      radius: Math.random() * 30 + 15,\n      speed: Math.random() * 0.6 + 0.2,\n      opacity: Math.random() * 0.4 + 0.2\n    })\n  }\n}\n\n// 更新雨天粒子\nconst updateRain = () => {\n  ctx.clearRect(0, 0, props.width, props.height)\n  \n  // 绘制背景\n  ctx.fillStyle = gradientBg\n  ctx.fillRect(0, 0, props.width, props.height)\n  \n  particles.forEach((particle, index) => {\n    if (particle.type === 'raindrop') {\n      // 绘制雨滴\n      const rainAlpha = Math.min(1, particle.speed / 15)\n      ctx.strokeStyle = `rgba(174, 194, 224, ${rainAlpha})`\n      ctx.lineCap = 'round'\n      \n      ctx.beginPath()\n      ctx.lineWidth = particle.thickness\n      ctx.moveTo(particle.x, particle.y)\n      ctx.lineTo(\n        particle.x + particle.windOffset,\n        particle.y + particle.length\n      )\n      ctx.stroke()\n      \n      particle.y += particle.speed\n      particle.x += particle.windOffset * 0.5\n      \n      // 如果雨滴落到画布底部，有概率创建水花\n      if (particle.y > props.height) {\n        if (Math.random() > 0.7) {\n          // 创建水花效果\n          for (let i = 0; i < 3; i++) {\n            particles.push({\n              type: 'splash',\n              x: particle.x,\n              y: props.height - 5,\n              radius: Math.random() * 2 + 1,\n              speedX: Math.random() * 3 - 1.5,\n              speedY: -Math.random() * 3 - 2,\n              gravity: 0.15,\n              life: Math.random() * 20 + 10,\n              opacity: 0.7\n            })\n          }\n        }\n        // 重置雨滴位置\n        particle.y = -particle.length\n        particle.x = Math.random() * props.width\n        particle.windOffset = Math.sin(Math.random() * Math.PI) * 0.5\n      }\n    } else if (particle.type === 'splash') {\n      // 绘制水花\n      ctx.fillStyle = `rgba(174, 194, 224, ${particle.opacity})`\n      ctx.beginPath()\n      ctx.arc(particle.x, particle.y, particle.radius, 0, Math.PI * 2)\n      ctx.fill()\n      \n      // 更新水花位置\n      particle.x += particle.speedX\n      particle.y += particle.speedY\n      particle.speedY += particle.gravity\n      particle.life--\n      particle.opacity = particle.life / 40\n      \n      // 移除消失的水花\n      if (particle.life <= 0) {\n        particles.splice(index, 1)\n      }\n    }\n  })\n}\n\n// 更新晴天粒子\nconst updateSun = () => {\n  ctx.clearRect(0, 0, props.width, props.height)\n  \n  // 绘制渐变背景\n  ctx.fillStyle = gradientBg\n  ctx.fillRect(0, 0, props.width, props.height)\n\n  particles.forEach((particle, index) => {\n    if (particle.type === 'sun') {\n      // 绘制太阳\n      const sun = particle\n      \n      // 脉动效果 - 只用于光芒和光晕效果，太阳本体大小保持稳定\n      sun.pulse += sun.pulseSpeed\n      // 将脉动因子设为常数1，不再变化太阳大小\n      const pulseFactor = 1\n      \n      // 外围光晕 - 调整为更温和的颜色\n      const outerGlow = ctx.createRadialGradient(\n        sun.x, sun.y, sun.radius * 0.5,\n        sun.x, sun.y, sun.radius * 3.5\n      )\n      outerGlow.addColorStop(0, 'rgba(255, 220, 130, 0.3)') \n      outerGlow.addColorStop(0.5, 'rgba(255, 210, 100, 0.15)') \n      outerGlow.addColorStop(1, 'rgba(255, 210, 100, 0)')\n      \n      ctx.fillStyle = outerGlow\n      ctx.beginPath()\n      ctx.arc(sun.x, sun.y, sun.radius * 3.5, 0, Math.PI * 2)\n      ctx.fill()\n      \n      // 中间光晕 - 光晕可以有轻微脉动\n      const glowPulse = 1 + Math.sin(sun.pulse * 0.5) * 0.05 // 非常轻微的脉动\n      \n      const middleGlow = ctx.createRadialGradient(\n        sun.x, sun.y, sun.radius * 0.2,\n        sun.x, sun.y, sun.radius * 2 * glowPulse\n      )\n      middleGlow.addColorStop(0, 'rgba(255, 220, 130, 0.7)') \n      middleGlow.addColorStop(0.5, 'rgba(255, 190, 80, 0.3)')\n      middleGlow.addColorStop(1, 'rgba(255, 180, 80, 0)')\n      \n      ctx.fillStyle = middleGlow\n      ctx.beginPath()\n      ctx.arc(sun.x, sun.y, sun.radius * 2 * glowPulse, 0, Math.PI * 2)\n      ctx.fill()\n      \n      // 太阳本体 - 调整为更柔和的黄色系，大小保持稳定\n      const sunCenter = sun.x - sun.radius * 0.3\n      const sunCenterY = sun.y - sun.radius * 0.3\n      \n      const sunGradient = ctx.createRadialGradient(\n        sunCenter, sunCenterY, 0,\n        sun.x, sun.y, sun.radius\n      )\n      sunGradient.addColorStop(0, '#FFF8E1') // 更柔和的乳白色中心\n      sunGradient.addColorStop(0.4, '#FFECB3') // 淡黄色\n      sunGradient.addColorStop(0.8, '#FFD54F') // 温和的黄色\n      sunGradient.addColorStop(1, '#FFB300') // 柔和的琥珀色边缘\n      \n      ctx.fillStyle = sunGradient\n      ctx.beginPath()\n      ctx.arc(sun.x, sun.y, sun.radius, 0, Math.PI * 2)\n      ctx.fill()\n      \n      // 太阳光芒 - 光芒长度可以有变化，但起点固定\n      ctx.strokeStyle = 'rgba(255, 213, 79, 0.7)' // 更柔和的黄色\n      \n      for (let i = 0; i < sun.rayCount; i++) {\n        const angle = (i * (Math.PI * 2) / sun.rayCount) + sun.rotation\n        // 光芒长度随时间变化，但不影响太阳大小\n        const rayLength = sun.rayLength * (0.85 + Math.sin(sun.pulse * 0.8 + i * 0.3) * 0.15)\n        \n        const startX = sun.x + Math.cos(angle) * (sun.radius + 2)\n        const startY = sun.y + Math.sin(angle) * (sun.radius + 2)\n        const endX = sun.x + Math.cos(angle) * (sun.radius + rayLength)\n        const endY = sun.y + Math.sin(angle) * (sun.radius + rayLength)\n        \n        ctx.lineWidth = 2 + Math.sin(sun.pulse + i * 0.5) * 1.5 // 光芒宽度变化\n        ctx.globalAlpha = 0.7 + Math.sin(sun.pulse + i * 0.3) * 0.2\n        \n        ctx.beginPath()\n        ctx.moveTo(startX, startY)\n        ctx.lineTo(endX, endY)\n        ctx.stroke()\n      }\n      \n      // 次要短光芒 - 同样只有长度变化，不影响太阳本体\n      ctx.strokeStyle = 'rgba(255, 213, 79, 0.5)' // 更柔和的黄色\n      ctx.lineWidth = 1.5\n      \n      for (let i = 0; i < sun.rayCount * 2; i++) {\n        const angle = (i * (Math.PI * 2) / (sun.rayCount * 2)) + sun.rotation * 1.5\n        const rayLength = sun.rayLength * 0.4 * (0.7 + Math.sin(sun.pulse * 1.2 + i * 0.5) * 0.3)\n        \n        const startX = sun.x + Math.cos(angle) * (sun.radius + 2)\n        const startY = sun.y + Math.sin(angle) * (sun.radius + 2)\n        const endX = sun.x + Math.cos(angle) * (sun.radius + rayLength)\n        const endY = sun.y + Math.sin(angle) * (sun.radius + rayLength)\n        \n        ctx.globalAlpha = 0.2 + Math.cos(sun.pulse * 0.8 + i) * 0.2\n        \n        ctx.beginPath()\n        ctx.moveTo(startX, startY)\n        ctx.lineTo(endX, endY)\n        ctx.stroke()\n      }\n      \n      // 三角形光晕 - 位置可以轻微变化，但基于固定太阳半径\n      ctx.fillStyle = 'rgba(255, 230, 160, 0.3)' // 更柔和的颜色\n      \n      for (let i = 0; i < 8; i++) {\n        const angle = (i * (Math.PI * 2) / 8) + sun.rotation * 0.7\n        const distance = sun.radius * (1.6 + Math.sin(sun.pulse * 0.9) * 0.15)\n        \n        const point1X = sun.x + Math.cos(angle) * distance\n        const point1Y = sun.y + Math.sin(angle) * distance\n        \n        const point2X = sun.x + Math.cos(angle + 0.2) * (distance * 0.7)\n        const point2Y = sun.y + Math.sin(angle + 0.2) * (distance * 0.7)\n        \n        const point3X = sun.x + Math.cos(angle - 0.2) * (distance * 0.7)\n        const point3Y = sun.y + Math.sin(angle - 0.2) * (distance * 0.7)\n        \n        ctx.globalAlpha = 0.15 + Math.sin(sun.pulse + i * 0.7) * 0.1 // 透明度变化\n        \n        ctx.beginPath()\n        ctx.moveTo(point1X, point1Y)\n        ctx.lineTo(point2X, point2Y)\n        ctx.lineTo(point3X, point3Y)\n        ctx.closePath()\n        ctx.fill()\n      }\n      \n      // 太阳表面光斑 - 位置变化，大小保持稳定\n      ctx.fillStyle = 'rgba(255, 250, 230, 0.7)' // 更柔和的亮点\n      \n      for (let i = 0; i < 3; i++) {\n        const spotAngle = sun.rotation * 2 + i * Math.PI / 2.5\n        const spotDistance = sun.radius * 0.5 * Math.random()\n        const spotX = sun.x + Math.cos(spotAngle) * spotDistance\n        const spotY = sun.y + Math.sin(spotAngle) * spotDistance\n        const spotSize = sun.radius * (0.04 + Math.random() * 0.06)\n        \n        ctx.globalAlpha = 0.2 + Math.random() * 0.3\n        \n        ctx.beginPath()\n        ctx.arc(spotX, spotY, spotSize, 0, Math.PI * 2)\n        ctx.fill()\n      }\n      \n      // 重置全局透明度\n      ctx.globalAlpha = 1\n      \n      // 更新太阳旋转\n      sun.rotation += sun.rotationSpeed * (1 + Math.sin(sun.pulse * 0.3) * 0.1)\n    } else if (particle.type === 'sparkle') {\n      // 更新漂浮光点 - 增强星光闪烁效果\n      const sparkle = particle\n      sparkle.pulse += 0.08 + Math.random() * 0.02\n      \n      // 更有变化的闪烁\n      const alphaFactor = 0.5 + Math.sin(sparkle.pulse) * 0.5\n      \n      // 不同亮度的星光\n      if (Math.random() > 0.97) {\n        // 偶尔出现更亮的闪烁\n        ctx.fillStyle = `rgba(255, 255, 250, ${sparkle.alpha * 1.5})`\n        ctx.shadowColor = 'rgba(255, 255, 200, 0.8)'\n        ctx.shadowBlur = 5\n      } else {\n        ctx.fillStyle = `rgba(255, 255, 220, ${sparkle.alpha * alphaFactor})`\n        ctx.shadowBlur = 0\n      }\n      \n      ctx.beginPath()\n      ctx.arc(sparkle.x, sparkle.y, sparkle.radius * (0.8 + alphaFactor * 0.4), 0, Math.PI * 2)\n      ctx.fill()\n      \n      // 重置阴影\n      ctx.shadowBlur = 0\n      \n      // 光点移动路径更自然（轻微的正弦波动）\n      sparkle.y += sparkle.speed\n      sparkle.x += Math.sin(sparkle.pulse * 0.2) * 0.3\n      \n      // 重置到顶部\n      if (sparkle.y > props.height) {\n        sparkle.y = 0\n        sparkle.x = Math.random() * props.width\n      }\n    } else if (particle.type === 'smallCloud') {\n      // 绘制小云朵\n      drawCloud(particle.x, particle.y, particle.radius, particle.opacity)\n      \n      particle.x += particle.speed\n      \n      // 当云移出画布时，重置位置\n      if (particle.x > props.width + particle.radius) {\n        particle.x = -particle.radius * 2\n        particle.y = Math.random() * (props.height / 2)\n      }\n    }\n  })\n}\n\n// 更新多云粒子\nconst updateClouds = () => {\n  ctx.clearRect(0, 0, props.width, props.height)\n  \n  // 绘制渐变背景\n  ctx.fillStyle = gradientBg\n  ctx.fillRect(0, 0, props.width, props.height)\n  \n  // 按大小排序云朵绘制（小的在前，大的在后）\n  particles.sort((a, b) => a.radius - b.radius)\n  \n  particles.forEach(cloud => {\n    if (cloud.type === 'bigCloud') {\n      // 绘制大云朵\n      drawDetailedCloud(cloud.x, cloud.y, cloud.radius, cloud.opacity, cloud.details)\n    } else {\n      // 绘制小云朵\n      drawCloud(cloud.x, cloud.y, cloud.radius, cloud.opacity)\n    }\n    \n    cloud.x += cloud.speed\n    \n    // 当云移出画布时，重置位置\n    if (cloud.x > props.width + cloud.radius) {\n      cloud.x = -cloud.radius * 2\n      cloud.y = Math.random() * (props.height * 0.6)\n      // 随机调整下一次的高度\n      cloud.radius = cloud.type === 'bigCloud' \n        ? Math.random() * 60 + 40 \n        : Math.random() * 30 + 15\n    }\n  })\n}\n\n// 绘制基本云朵\nconst drawCloud = (x, y, radius, opacity) => {\n  ctx.fillStyle = `rgba(220, 220, 220, ${opacity})`\n  \n  // 绘制云朵（由多个圆形组成）\n  ctx.beginPath()\n  ctx.arc(x, y, radius * 0.5, 0, Math.PI * 2)\n  ctx.arc(x + radius * 0.35, y - radius * 0.2, radius * 0.4, 0, Math.PI * 2)\n  ctx.arc(x + radius * 0.75, y, radius * 0.45, 0, Math.PI * 2)\n  ctx.arc(x + radius * 0.4, y + radius * 0.2, radius * 0.35, 0, Math.PI * 2)\n  ctx.fill()\n  \n  // 云朵亮边\n  ctx.fillStyle = `rgba(250, 250, 250, ${opacity * 0.6})`\n  ctx.beginPath()\n  ctx.arc(x, y - radius * 0.12, radius * 0.35, 0, Math.PI * 2)\n  ctx.arc(x + radius * 0.35, y - radius * 0.3, radius * 0.25, 0, Math.PI * 2)\n  ctx.fill()\n}\n\n// 绘制详细云朵\nconst drawDetailedCloud = (x, y, radius, opacity, details) => {\n  // 绘制云朵阴影\n  ctx.fillStyle = `rgba(180, 180, 180, ${opacity * 0.5})`\n  ctx.beginPath()\n  ctx.arc(x + 5, y + 5, radius * 0.6, 0, Math.PI * 2)\n  ctx.arc(x + radius * 0.35 + 5, y - radius * 0.2 + 5, radius * 0.5, 0, Math.PI * 2)\n  ctx.arc(x + radius * 0.75 + 5, y + 5, radius * 0.55, 0, Math.PI * 2)\n  ctx.fill()\n  \n  // 绘制主体云朵\n  ctx.fillStyle = `rgba(220, 220, 220, ${opacity})`\n  ctx.beginPath()\n  ctx.arc(x, y, radius * 0.6, 0, Math.PI * 2)\n  ctx.arc(x + radius * 0.35, y - radius * 0.2, radius * 0.5, 0, Math.PI * 2)\n  ctx.arc(x + radius * 0.75, y, radius * 0.55, 0, Math.PI * 2)\n  ctx.arc(x + radius * 0.4, y + radius * 0.3, radius * 0.45, 0, Math.PI * 2)\n  \n  // 添加额外的细节\n  for (let i = 0; i < details; i++) {\n    const offsetX = Math.cos(i * Math.PI / 4) * radius * 0.6\n    const offsetY = Math.sin(i * Math.PI / 4) * radius * 0.4\n    ctx.arc(x + offsetX, y + offsetY, radius * 0.3, 0, Math.PI * 2)\n  }\n  \n  ctx.fill()\n  \n  // 绘制云朵亮边\n  ctx.fillStyle = `rgba(250, 250, 250, ${opacity * 0.7})`\n  ctx.beginPath()\n  ctx.arc(x, y - radius * 0.15, radius * 0.4, 0, Math.PI * 2)\n  ctx.arc(x + radius * 0.35, y - radius * 0.35, radius * 0.3, 0, Math.PI * 2)\n  ctx.fill()\n}\n\n// 动画循环\nconst animate = () => {\n  if (props.weather === 'rainy') {\n    updateRain()\n  } else if (props.weather === 'sunny') {\n    updateSun()\n  } else if (props.weather === 'cloudy') {\n    updateClouds()\n  }\n  \n  animationFrameId = requestAnimationFrame(animate)\n}\n\n// 开始动画\nconst startAnimation = () => {\n  if (animationFrameId) {\n    cancelAnimationFrame(animationFrameId)\n  }\n  animate()\n}\n\n// 监听天气变化\nwatch(() => props.weather, (newWeather) => {\n  if (animationFrameId) {\n    cancelAnimationFrame(animationFrameId)\n  }\n  particles = []\n  \n  // 更新背景渐变\n  createBackgroundGradient()\n  \n  if (newWeather === 'rainy') {\n    initRain()\n  } else if (newWeather === 'sunny') {\n    initSun()\n  } else if (newWeather === 'cloudy') {\n    initClouds()\n  }\n  \n  startAnimation()\n})\n\n// 组件挂载时初始化\nonMounted(() => {\n  initCanvas()\n  \n  // 监听窗口大小变化，重新调整画布\n  window.addEventListener('resize', initCanvas)\n})\n\n// 组件卸载时清理\nonUnmounted(() => {\n  if (animationFrameId) {\n    cancelAnimationFrame(animationFrameId)\n  }\n  window.removeEventListener('resize', initCanvas)\n})\n</script>\n\n<style scoped>\n.weather-canvas {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n  pointer-events: none; /* 允许点击穿透到下层元素 */\n}\n</style> ","import script from \"./WeatherCanvas.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./WeatherCanvas.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./WeatherCanvas.vue?vue&type=style&index=0&id=5cceed66&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5cceed66\"]])\n\nexport default __exports__"],"names":["useTaskStore","defineStore","tasks","ref","systemTasks","completedTasks","loading","pendingTasks","computed","value","filter","task","completed","fetchTasks","async","response","taskApi","getTasks","error","ElMessage","fetchSystemTasks","getSystemTasks","addTask","importantBool","important","createTask","title","description","deadline","push","success","completeTask","id","find","t","_id","unshift","completedAt","Date","toISOString","plantStore","usePlantStore","plants","length","mainPlant","p","isMainPlant","plantId","expAmount","gainExperience","completeSystemTask","currentPlant","warning","index","findIndex","rewards","experience","status","removeTask","deleteTask","console","removeCompletedTask","updateTask","updatedTask","originalTaskIndex","finalIndex","failedIndex","originalTask","toggleTaskImportance","log","currentImportant","newImportantState","taskIndex","reorderTasks","newOrder","Array","isArray","processedOrder","map","compareAsc","dateLeft","dateRight","diff","toDate","differenceInCalendarMonths","laterDate","earlierDate","options","laterDate_","earlierDate_","normalizeDates","in","yearsDiff","getFullYear","monthsDiff","getMonth","endOfDay","date","_date","setHours","endOfMonth","month","setFullYear","isLastDayOfMonth","differenceInMonths","workingLaterDate","sign","difference","Math","abs","getDate","setDate","setMonth","isLastMonthNotFull","result","getRoundingMethod","method","number","round","trunc","differenceInMilliseconds","differenceInSeconds","roundingMethod","formatDistance","defaultOptions","getDefaultOptions","locale","defaultLocale","minutesInAlmostTwoDays","comparison","isNaN","RangeError","localizeOptions","Object","assign","addSuffix","seconds","offsetInSeconds","getTimezoneOffsetInMilliseconds","minutes","months","includeSeconds","minutesInDay","hours","minutesInMonth","days","nearestMonth","monthsSinceStartOfYear","years","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","xHours","aboutXHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","token","count","tokenValue","replace","String","dateFormats","full","long","medium","short","timeFormats","dateTimeFormats","formatLong","buildFormatLongFn","formats","defaultWidth","time","dateTime","isSameWeek","startOfWeek","checkWeek","baseDate","baseFormat","getTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","formatRelative","format","eraValues","narrow","abbreviated","wide","quarterValues","monthValues","dayValues","dayPeriodValues","am","pm","midnight","noon","morning","afternoon","evening","night","formattingDayPeriodValues","ordinalNumber","dirtyNumber","Number","unit","toString","localize","era","buildLocalizeFn","values","quarter","argumentCallback","day","dayPeriod","formattingValues","defaultFormattingWidth","matchOrdinalNumberPattern","parseOrdinalNumberPattern","matchEraPatterns","parseEraPatterns","any","matchQuarterPatterns","parseQuarterPatterns","matchMonthPatterns","parseMonthPatterns","matchDayPatterns","parseDayPatterns","matchDayPeriodPatterns","parseDayPeriodPatterns","match","buildMatchPatternFn","matchPattern","parsePattern","valueCallback","parseInt","buildMatchFn","matchPatterns","defaultMatchWidth","parsePatterns","defaultParseWidth","zhCN","code","weekStartsOn","firstWeekContainsDate","__exports__","props","__props","canvas","ctx","animationFrameId","particles","gradientBg","initCanvas","dpr","window","devicePixelRatio","getContext","width","height","scale","createBackgroundGradient","weather","initRain","initSun","initClouds","startAnimation","createLinearGradient","addColorStop","raindropsCount","i","isSplash","random","type","x","y","radius","speedX","speedY","gravity","life","opacity","speed","thickness","windOffset","sin","PI","rayLength","rayCount","rotation","rotationSpeed","pulse","pulseSpeed","alpha","details","floor","updateRain","clearRect","fillStyle","fillRect","forEach","particle","rainAlpha","min","strokeStyle","lineCap","beginPath","lineWidth","moveTo","lineTo","stroke","arc","fill","splice","updateSun","sun","outerGlow","createRadialGradient","glowPulse","middleGlow","sunCenter","sunCenterY","sunGradient","angle","startX","cos","startY","endX","endY","globalAlpha","distance","point1X","point1Y","point2X","point2Y","point3X","point3Y","closePath","spotAngle","spotDistance","spotX","spotY","spotSize","sparkle","alphaFactor","shadowColor","shadowBlur","drawCloud","updateClouds","sort","a","b","cloud","drawDetailedCloud","offsetX","offsetY","animate","requestAnimationFrame","cancelAnimationFrame","watch","newWeather","onMounted","addEventListener","onUnmounted","removeEventListener"],"sourceRoot":""}
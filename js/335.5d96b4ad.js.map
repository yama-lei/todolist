{"version":3,"file":"js/335.5d96b4ad.js","mappings":"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","sources":["webpack://zhiyuxinsheng/./src/stores/task.js","webpack://zhiyuxinsheng/./src/views/Task.vue","webpack://zhiyuxinsheng/./node_modules/date-fns/parseISO.js","webpack://zhiyuxinsheng/./src/views/Task.vue?5a2d"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { ref, computed } from 'vue'\nimport { usePlantStore } from './plant'\nimport { taskApi } from '../services/api'\nimport { ElMessage } from 'element-plus'\n\nexport const useTaskStore = defineStore('task', () => {\n  // 所有任务数据\n  const tasks = ref([])\n  const systemTasks = ref([])\n  const completedTasks = ref([])\n  const loading = ref(false)\n  \n  // 计算属性：待完成任务\n  const pendingTasks = computed(() => tasks.value.filter(task => !task.completed))\n  \n  // 获取所有任务\n  const fetchTasks = async () => {\n    try {\n      loading.value = true\n      const response = await taskApi.getTasks()\n      tasks.value = response.tasks.filter(task => !task.completed)\n      completedTasks.value = response.tasks.filter(task => task.completed)\n    } catch (error) {\n      ElMessage.error('获取任务列表失败')\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 获取系统任务\n  const fetchSystemTasks = async () => {\n    try {\n      loading.value = true\n      const response = await taskApi.getSystemTasks()\n      systemTasks.value = response.tasks\n    } catch (error) {\n      ElMessage.error('获取系统任务失败')\n    } finally {\n      loading.value = false\n    }\n  }\n  \n  // 添加任务\n  const addTask = async (task) => {\n    try {\n      // 确保important是布尔类型\n      const importantBool = task.important === true || task.important === 'true'\n      \n      const response = await taskApi.createTask({\n        title: task.title,\n        description: task.description || '',\n        deadline: task.deadline || '',\n        important: importantBool\n      })\n      \n      // 添加到本地状态\n      tasks.value.push(response.task)\n      \n      // 不再给创建任务增加经验值\n      ElMessage.success('任务创建成功')\n    } catch (error) {\n      ElMessage.error('创建任务失败')\n    }\n  }\n  \n  // 完成任务\n  const completeTask = async (id) => {\n    try {\n      const response = await taskApi.completeTask(id)\n      \n      // 从任务列表中移除\n      const task = tasks.value.find(t => t._id === id)\n      if (task) {\n        // 将任务移动到已完成列表\n        completedTasks.value.unshift({\n          ...task,\n          completed: true,\n          completedAt: new Date().toISOString()\n        })\n        // 从待办任务中移除\n        tasks.value = tasks.value.filter(t => t._id !== id)\n      }\n      \n      // 增加植物经验值\n      const plantStore = usePlantStore()\n      if (plantStore.plants && plantStore.plants.length > 0) {\n        // 获取主植物\n        const mainPlant = plantStore.plants.find(p => p.isMainPlant)\n        if (mainPlant) {\n          const plantId = mainPlant._id || mainPlant.id\n          if (plantId) {\n            // 根据任务是否重要，增加不同的经验值\n            // 普通任务25点，重要任务50点\n            const expAmount = task && task.important ? 50 : 25;\n            await plantStore.gainExperience(plantId, expAmount)\n            \n            // 显示具体获得的经验值\n            ElMessage.success(`任务已完成，获得 ${expAmount} 点经验值！`)\n          }\n        }\n      } else {\n        ElMessage.success('任务已完成')\n      }\n    } catch (error) {\n      ElMessage.error('完成任务失败')\n    }\n  }\n  \n  // 完成系统任务\n  const completeSystemTask = async (id) => {\n    try {\n      const plantStore = usePlantStore()\n      if (!plantStore.currentPlant) {\n        ElMessage.warning('请先添加一个植物')\n        return false\n      }\n      \n      const response = await taskApi.completeSystemTask(id)\n      \n      // 更新任务状态\n      const index = systemTasks.value.findIndex(t => t._id === id)\n      if (index !== -1) {\n        systemTasks.value[index].completed = true\n      }\n      \n      // 如果后端已经处理了经验值奖励，则显示相应的提示\n      if (response.rewards) {\n        ElMessage.success(`完成任务获得 ${response.rewards.experience} 点经验`)\n      } \n      // 如果后端没有处理经验值奖励，则在前端处理\n      else {\n        // 获取主植物\n        const plantId = plantStore.currentPlant._id || plantStore.currentPlant.id\n        if (plantId) {\n          // 系统任务固定增加35点经验值\n          const expAmount = 35;\n          await plantStore.gainExperience(plantId, expAmount)\n          ElMessage.success(`完成系统任务获得 ${expAmount} 点经验值`)\n        }\n      }\n      \n      return true\n    } catch (error) {\n      if (error.response?.status === 400) {\n        ElMessage.warning('今天已经完成过此任务')\n      } else {\n        ElMessage.error('完成系统任务失败')\n      }\n      return false\n    }\n  }\n  \n  // 移除任务\n  const removeTask = async (id) => {\n    try {\n      // 检查ID是否有效\n      if (!id) {\n        ElMessage.error('任务ID无效，无法删除')\n        return\n      }\n      \n      await taskApi.deleteTask(id)\n      tasks.value = tasks.value.filter(task => task._id !== id)\n      ElMessage.success('任务已删除')\n    } catch (error) {\n      console.error('删除任务失败:', error)\n      ElMessage.error('删除任务失败')\n    }\n  }\n  \n  // 删除已完成任务\n  const removeCompletedTask = async (id) => {\n    try {\n      // 检查ID是否有效\n      if (!id) {\n        ElMessage.error('任务ID无效，无法删除')\n        return\n      }\n      \n      await taskApi.deleteTask(id)\n      completedTasks.value = completedTasks.value.filter(task => task._id !== id)\n      ElMessage.success('任务已删除')\n    } catch (error) {\n      console.error('删除任务失败:', error)\n      ElMessage.error('删除任务失败')\n    }\n  }\n  \n  // 更新任务\n  const updateTask = async (updatedTask) => {\n    try {\n      const { _id, title, description, deadline, important } = updatedTask\n      \n      // 确保important是布尔类型\n      const importantBool = important === true || important === 'true'\n      \n      // 保存更新前的任务状态，以便在请求失败时恢复\n      const originalTaskIndex = tasks.value.findIndex(t => t._id === _id)\n      const originalTask = originalTaskIndex !== -1 ? { ...tasks.value[originalTaskIndex] } : null\n      \n      // 先更新本地状态，让UI立即响应\n      if (originalTaskIndex !== -1) {\n        tasks.value[originalTaskIndex] = { \n          ...tasks.value[originalTaskIndex],\n          title,\n          description,\n          deadline,\n          important: importantBool\n        }\n      }\n      \n      // 然后发送请求更新服务器状态\n      const response = await taskApi.updateTask(_id, {\n        title,\n        description,\n        deadline,\n        important: importantBool\n      })\n      \n      // 如果服务器响应成功，使用服务器返回的数据更新本地状态\n      if (response && response.task) {\n        const finalIndex = tasks.value.findIndex(t => t._id === _id)\n        if (finalIndex !== -1) {\n          tasks.value[finalIndex] = response.task\n        }\n      }\n      \n      ElMessage.success('任务已更新')\n    } catch (error) {\n      console.error('更新任务失败:', error)\n      \n      // 如果请求失败，恢复原始状态\n      const failedIndex = tasks.value.findIndex(t => t._id === updatedTask._id)\n      if (failedIndex !== -1 && originalTask) {\n        tasks.value[failedIndex] = originalTask\n      }\n      \n      ElMessage.error('更新任务失败')\n    }\n  }\n  \n  // 切换任务重要性\n  const toggleTaskImportance = async (id) => {\n    const task = tasks.value.find(t => t._id === id)\n    if (task) {\n      try {\n        // 先临时更新本地状态，让UI立即响应\n        console.log('切换任务重要性 - 当前状态:', task.important, '类型:', typeof task.important)\n        \n        // 将字符串类型的important转换为布尔类型\n        const currentImportant = task.important === true || task.important === 'true'\n        const newImportantState = !currentImportant\n        console.log('切换任务重要性 - 新状态:', newImportantState)\n        \n        const taskIndex = tasks.value.findIndex(t => t._id === id)\n        if (taskIndex !== -1) {\n          // 创建一个任务的副本并修改其重要性\n          const updatedTask = { ...tasks.value[taskIndex], important: newImportantState }\n          tasks.value[taskIndex] = updatedTask\n        }\n        \n        // 然后发送请求更新服务器状态\n        const response = await taskApi.updateTask(id, {\n          title: task.title,\n          description: task.description,\n          deadline: task.deadline,\n          important: newImportantState\n        })\n        \n        // 如果服务器响应成功，使用服务器返回的数据更新本地状态\n        if (response && response.task) {\n          const finalIndex = tasks.value.findIndex(t => t._id === id)\n          if (finalIndex !== -1) {\n            tasks.value[finalIndex] = response.task\n          }\n        }\n        \n        ElMessage.success(`任务已${newImportantState ? '标记为重要' : '取消重要标记'}`)\n      } catch (error) {\n        console.error('更新任务重要性失败:', error)\n        // 如果请求失败，恢复原始状态\n        const failedIndex = tasks.value.findIndex(t => t._id === id)\n        if (failedIndex !== -1) {\n          // 恢复原始状态，注意保持原来的类型\n          tasks.value[failedIndex] = { ...tasks.value[failedIndex], important: task.important }\n        }\n        ElMessage.error('更新任务重要性失败')\n      }\n    }\n  }\n\n  // 重新排序任务\n  const reorderTasks = (newOrder) => {\n    if (!newOrder || !Array.isArray(newOrder)) return;\n    \n    // 确保任务的important字段是正确处理的\n    const processedOrder = newOrder.map(task => {\n      // 处理important字段类型\n      const importantBool = task.important === true || task.important === 'true';\n      return {\n        ...task,\n        important: importantBool\n      }\n    });\n    \n    // 更新任务顺序\n    tasks.value = processedOrder;\n  }\n\n  return {\n    tasks,\n    systemTasks,\n    completedTasks,\n    pendingTasks,\n    loading,\n    \n    fetchTasks,\n    fetchSystemTasks,\n    addTask,\n    completeTask,\n    completeSystemTask,\n    removeTask,\n    removeCompletedTask,\n    updateTask,\n    toggleTaskImportance,\n    reorderTasks\n  }\n}) ","<template>\n  <div class=\"task-page\">\n    <div class=\"container\">\n      <div class=\"task-header\">\n        <h1>任务管理</h1>\n        <div class=\"task-actions\">\n          <el-button type=\"primary\" @click=\"openTaskForm\">\n            <el-icon><Plus /></el-icon> 新建任务\n          </el-button>\n        </div>\n      </div>\n      \n      <!-- 系统任务 -->\n      <div class=\"system-tasks-card card\">\n        <div class=\"card-header\">\n          <h2>每日任务</h2>\n          <div class=\"task-info\">\n            完成任务可以获得经验值，帮助植物成长\n          </div>\n        </div>\n        \n        <div class=\"tasks-list system-tasks\">\n          <div\n            v-for=\"task in taskStore.systemTasks\"\n            :key=\"task._id\"\n            class=\"task-item\"\n            :class=\"{ 'completed': task.completed }\"\n          >\n            <div class=\"task-icon\">{{ task.icon }}</div>\n            <div class=\"task-content\">\n              <div class=\"task-title\">{{ task.title }}</div>\n              <div class=\"task-description\">{{ task.description }}</div>\n            </div>\n            <div class=\"task-actions\">\n              <el-button\n                :type=\"task.completed ? 'success' : 'primary'\"\n                :disabled=\"task.completed\"\n                @click=\"completeSystemTask(task._id)\"\n              >\n                {{ task.completed ? '已完成' : '完成' }}\n              </el-button>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 用户任务 -->\n      <div class=\"user-tasks-card card\">\n        <div class=\"card-header\">\n          <h2>我的任务</h2>\n          <div class=\"task-status\">\n            <span>{{ taskStore.pendingTasks.length }} 个待完成</span>\n          </div>\n        </div>\n        \n        <div v-if=\"taskStore.pendingTasks.length === 0\" class=\"empty-tasks\">\n          <el-empty description=\"暂无任务，点击右上角添加新任务吧！\" />\n        </div>\n        \n        <div v-else class=\"tasks-list user-tasks\">\n          <div\n            v-for=\"task in taskStore.pendingTasks\"\n            :key=\"task._id\"\n            class=\"task-item\"\n            :class=\"{ 'important': task.important }\"\n          >\n            <div class=\"task-content\">\n              <div class=\"task-title\">{{ task.title }}</div>\n              <div class=\"task-description\">{{ task.description }}</div>\n              <div class=\"task-meta\">\n                <span v-if=\"task.deadline\" class=\"task-deadline\">\n                  <el-icon><Clock /></el-icon>\n                  {{ formatDate(task.deadline) }}\n                </span>\n              </div>\n            </div>\n            <div class=\"task-actions\">\n              <el-button-group>\n                <el-button\n                  type=\"primary\"\n                  @click=\"completeUserTask(task._id)\"\n                >\n                  完成\n                </el-button>\n                <el-button\n                  type=\"default\"\n                  @click=\"editTask(task)\"\n                >\n                  编辑\n                </el-button>\n                <el-button\n                  type=\"danger\"\n                  @click=\"deleteTask(task._id)\"\n                >\n                  删除\n                </el-button>\n              </el-button-group>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- 已完成任务 -->\n      <div class=\"completed-tasks-card card\" v-if=\"taskStore.completedTasks.length > 0\">\n        <div class=\"card-header\">\n          <h2>已完成任务</h2>\n          <div class=\"completed-count\">\n            {{ taskStore.completedTasks.length }} 个任务\n          </div>\n        </div>\n        \n        <div class=\"tasks-list completed-tasks\">\n          <div\n            v-for=\"task in taskStore.completedTasks\"\n            :key=\"task._id\"\n            class=\"task-item completed\"\n          >\n            <div class=\"task-content\">\n              <div class=\"task-title\">{{ task.title }}</div>\n              <div class=\"task-meta\">\n                <span class=\"completed-at\">\n                  完成于 {{ formatDate(task.completedAt) }}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <!-- 任务表单对话框 -->\n    <el-dialog\n      v-model=\"showTaskForm\"\n      :title=\"editingTask ? '编辑任务' : '新建任务'\"\n      width=\"500px\"\n    >\n      <el-form :model=\"taskForm\" label-position=\"top\">\n        <el-form-item label=\"任务标题\" required>\n          <el-input v-model=\"taskForm.title\" placeholder=\"输入任务标题\" />\n        </el-form-item>\n        \n        <el-form-item label=\"任务描述\">\n          <el-input\n            v-model=\"taskForm.description\"\n            type=\"textarea\"\n            :rows=\"3\"\n            placeholder=\"输入任务描述\"\n          />\n        </el-form-item>\n        \n        <el-form-item label=\"截止日期\">\n          <el-date-picker\n            v-model=\"taskForm.deadline\"\n            type=\"datetime\"\n            placeholder=\"选择截止日期\"\n            value-format=\"YYYY-MM-DDTHH:mm:ss\"\n            format=\"YYYY-MM-DD HH:mm\"\n            style=\"width: 100%\"\n          />\n        </el-form-item>\n        \n        <el-form-item>\n          <el-checkbox v-model=\"taskForm.important\">标记为重要</el-checkbox>\n        </el-form-item>\n      </el-form>\n      \n      <template #footer>\n        <span class=\"dialog-footer\">\n          <el-button @click=\"showTaskForm = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"saveTask\">\n            保存\n          </el-button>\n        </span>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, onMounted } from 'vue'\nimport { useTaskStore } from '../stores/task'\nimport { usePlantStore } from '../stores/plant'\nimport { ElMessageBox } from 'element-plus'\nimport { format, parseISO } from 'date-fns'\nimport { Plus, Clock } from '@element-plus/icons-vue'\n\nexport default {\n  name: 'TaskPage',\n  components: {\n    Plus,\n    Clock\n  },\n  setup() {\n    const taskStore = useTaskStore()\n    const plantStore = usePlantStore()\n    \n    const showTaskForm = ref(false)\n    const editingTask = ref(null)\n    \n    const taskForm = reactive({\n      id: null,\n      title: '',\n      description: '',\n      deadline: '',\n      important: false\n    })\n    \n    // 获取任务数据\n    onMounted(async () => {\n      console.log('任务页面加载')\n      // 如果植物商店没有加载，获取植物\n      if (!plantStore.currentPlant) {\n        await plantStore.fetchPlants()\n      }\n      \n      // 获取任务和系统任务\n      try {\n      await Promise.all([\n        taskStore.fetchTasks(),\n        taskStore.fetchSystemTasks()\n      ])\n        console.log('任务数据加载成功')\n      } catch (error) {\n        console.error('加载任务数据失败:', error)\n      }\n    })\n    \n    // 打开任务表单\n    const openTaskForm = () => {\n      resetTaskForm()\n      showTaskForm.value = true\n    }\n    \n    // 重置表单\n    const resetTaskForm = () => {\n      taskForm.id = null\n      taskForm.title = ''\n      taskForm.description = ''\n      taskForm.deadline = ''\n      taskForm.important = false\n      editingTask.value = null\n    }\n    \n    // 完成系统任务\n    const completeSystemTask = async (taskId) => {\n      // 确保有当前植物\n      if (!plantStore.currentPlant) {\n        ElMessageBox.alert('请先在花园中添加一个植物', '提示', {\n          confirmButtonText: '确定'\n        })\n        return\n      }\n      \n      // 完成任务\n      await taskStore.completeSystemTask(taskId)\n    }\n    \n    // 完成用户任务\n    const completeUserTask = async (taskId) => {\n      await taskStore.completeTask(taskId)\n    }\n    \n    // 编辑任务\n    const editTask = (task) => {\n      editingTask.value = task\n      taskForm.id = task._id\n      taskForm.title = task.title\n      taskForm.description = task.description || ''\n      taskForm.deadline = task.deadline || ''\n      taskForm.important = task.important || false\n      showTaskForm.value = true\n    }\n    \n    // 删除任务\n    const deleteTask = (taskId) => {\n      ElMessageBox.confirm(\n        '确定要删除这个任务吗？',\n        '删除任务',\n        {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }\n      ).then(() => {\n        taskStore.removeTask(taskId)\n      }).catch(() => {})\n    }\n    \n    // 保存任务\n    const saveTask = () => {\n      if (!taskForm.title.trim()) {\n        ElMessageBox.alert('请输入任务标题', '提示', {\n          confirmButtonText: '确定'\n        })\n        return\n      }\n      \n      if (editingTask.value) {\n        // 更新任务\n        taskStore.updateTask({\n          _id: taskForm.id,\n          title: taskForm.title,\n          description: taskForm.description,\n          deadline: taskForm.deadline,\n          important: taskForm.important\n        })\n      } else {\n        // 添加新任务\n        taskStore.addTask({\n          title: taskForm.title,\n          description: taskForm.description,\n          deadline: taskForm.deadline,\n          important: taskForm.important\n        })\n      }\n      \n      showTaskForm.value = false\n      resetTaskForm()\n    }\n    \n    // 格式化日期\n    const formatDate = (dateString) => {\n      if (!dateString) return ''\n      \n      try {\n        return format(parseISO(dateString), 'yyyy-MM-dd HH:mm')\n      } catch (e) {\n        return dateString\n      }\n    }\n    \n    return {\n      taskStore,\n      plantStore,\n      showTaskForm,\n      taskForm,\n      editingTask,\n      \n      openTaskForm,\n      completeSystemTask,\n      completeUserTask,\n      editTask,\n      deleteTask,\n      saveTask,\n      formatDate\n    }\n  }\n}\n</script>\n\n<style scoped>\n.task-page {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.container {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  gap: 20px;\n}\n\n.task-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 10px;\n}\n\n.task-header h1 {\n  margin: 0;\n  font-size: 24px;\n  font-weight: 600;\n}\n\n.card {\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.05);\n  padding: 20px;\n  margin-bottom: 20px;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 15px;\n}\n\n.card-header h2 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.tasks-list {\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n}\n\n.task-item {\n  display: flex;\n  align-items: center;\n  padding: 15px;\n  border-radius: 8px;\n  background-color: #f9f9f9;\n  transition: all 0.3s;\n}\n\n.task-item:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.05);\n}\n\n.task-item.important {\n  border-left: 4px solid var(--el-color-danger);\n}\n\n.task-item.completed {\n  opacity: 0.7;\n  background-color: #f5f7fa;\n}\n\n.task-icon {\n  font-size: 24px;\n  margin-right: 15px;\n}\n\n.task-content {\n  flex: 1;\n}\n\n.task-title {\n  font-weight: 500;\n  margin-bottom: 5px;\n}\n\n.task-description {\n  font-size: 14px;\n  color: #606266;\n  margin-bottom: 5px;\n}\n\n.task-meta {\n  display: flex;\n  gap: 15px;\n  font-size: 12px;\n  color: #909399;\n}\n\n.task-deadline {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.empty-tasks {\n  padding: 30px 0;\n}\n\n.system-tasks .task-item {\n  background-color: rgba(var(--el-color-primary-rgb), 0.05);\n}\n\n.completed-tasks .task-item {\n  padding: 12px 15px;\n}\n\n@media (max-width: 768px) {\n  .task-item {\n    flex-direction: column;\n    align-items: flex-start;\n  }\n  \n  .task-actions {\n    margin-top: 10px;\n    align-self: flex-end;\n  }\n}\n</style> ","import {\n  millisecondsInHour,\n  millisecondsInMinute,\n} from \"./constants.js\";\nimport { constructFrom } from \"./constructFrom.js\";\nimport { toDate } from \"./toDate.js\";\n\n/**\n * The {@link parseISO} function options.\n */\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n * @typeParam ResultDate - The result `Date` type, it is the type returned from the context function if it is passed, or inferred from the arguments.\n *\n * @param argument - The value to convert\n * @param options - An object with options\n *\n * @returns The parsed date in the local time zone\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\nexport function parseISO(argument, options) {\n  const invalidDate = () => constructFrom(options?.in, NaN);\n\n  const additionalDigits = options?.additionalDigits ?? 2;\n  const dateStrings = splitDateString(argument);\n\n  let date;\n  if (dateStrings.date) {\n    const parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(+date)) return invalidDate();\n\n  const timestamp = +date;\n  let time = 0;\n  let offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n    if (isNaN(time)) return invalidDate();\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n    if (isNaN(offset)) return invalidDate();\n  } else {\n    const tmpDate = new Date(timestamp + time);\n    const result = toDate(0, options?.in);\n    result.setFullYear(\n      tmpDate.getUTCFullYear(),\n      tmpDate.getUTCMonth(),\n      tmpDate.getUTCDate(),\n    );\n    result.setHours(\n      tmpDate.getUTCHours(),\n      tmpDate.getUTCMinutes(),\n      tmpDate.getUTCSeconds(),\n      tmpDate.getUTCMilliseconds(),\n    );\n    return result;\n  }\n\n  return toDate(timestamp + time + offset, options?.in);\n}\n\nconst patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/,\n};\n\nconst dateRegex =\n  /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nconst timeRegex =\n  /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nconst timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  const dateStrings = {};\n  const array = dateString.split(patterns.dateTimeDelimiter);\n  let timeString;\n\n  // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(\n        dateStrings.date.length,\n        dateString.length,\n      );\n    }\n  }\n\n  if (timeString) {\n    const token = patterns.timezone.exec(timeString);\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], \"\");\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  const regex = new RegExp(\n    \"^(?:(\\\\d{4}|[+-]\\\\d{\" +\n      (4 + additionalDigits) +\n      \"})|(\\\\d{2}|[+-]\\\\d{\" +\n      (2 + additionalDigits) +\n      \"})$)\",\n  );\n\n  const captures = dateString.match(regex);\n  // Invalid ISO-formatted year\n  if (!captures) return { year: NaN, restDateString: \"\" };\n\n  const year = captures[1] ? parseInt(captures[1]) : null;\n  const century = captures[2] ? parseInt(captures[2]) : null;\n\n  // either year or century is null, not both\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length),\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n\n  const captures = dateString.match(dateRegex);\n  // Invalid ISO-formatted string\n  if (!captures) return new Date(NaN);\n\n  const isWeekDate = !!captures[4];\n  const dayOfYear = parseDateUnit(captures[1]);\n  const month = parseDateUnit(captures[2]) - 1;\n  const day = parseDateUnit(captures[3]);\n  const week = parseDateUnit(captures[4]);\n  const dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    const date = new Date(0);\n    if (\n      !validateDate(year, month, day) ||\n      !validateDayOfYearDate(year, dayOfYear)\n    ) {\n      return new Date(NaN);\n    }\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  const captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  const hours = parseTimeUnit(captures[1]);\n  const minutes = parseTimeUnit(captures[2]);\n  const seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return (\n    hours * millisecondsInHour + minutes * millisecondsInMinute + seconds * 1000\n  );\n}\n\nfunction parseTimeUnit(value) {\n  return (value && parseFloat(value.replace(\",\", \".\"))) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === \"Z\") return 0;\n\n  const captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n\n  const sign = captures[1] === \"+\" ? -1 : 1;\n  const hours = parseInt(captures[2]);\n  const minutes = (captures[3] && parseInt(captures[3])) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * millisecondsInHour + minutes * millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  const date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  const fourthOfJanuaryDay = date.getUTCDay() || 7;\n  const diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}\n\n// Validation functions\n\n// February is null to handle the leap year (using ||)\nconst daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || (year % 4 === 0 && year % 100 !== 0);\n}\n\nfunction validateDate(year, month, date) {\n  return (\n    month >= 0 &&\n    month <= 11 &&\n    date >= 1 &&\n    date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28))\n  );\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return (\n    seconds >= 0 &&\n    seconds < 60 &&\n    minutes >= 0 &&\n    minutes < 60 &&\n    hours >= 0 &&\n    hours < 25\n  );\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n// Fallback for modularized imports:\nexport default parseISO;\n","import { render } from \"./Task.vue?vue&type=template&id=d4de7ee6&scoped=true\"\nimport script from \"./Task.vue?vue&type=script&lang=js\"\nexport * from \"./Task.vue?vue&type=script&lang=js\"\n\nimport \"./Task.vue?vue&type=style&index=0&id=d4de7ee6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-d4de7ee6\"]])\n\nexport default __exports__"],"names":["useTaskStore","defineStore","tasks","ref","systemTasks","completedTasks","loading","pendingTasks","computed","value","filter","task","completed","fetchTasks","async","response","taskApi","getTasks","error","ElMessage","fetchSystemTasks","getSystemTasks","addTask","importantBool","important","createTask","title","description","deadline","push","success","completeTask","id","find","t","_id","unshift","completedAt","Date","toISOString","plantStore","usePlantStore","plants","length","mainPlant","p","isMainPlant","plantId","expAmount","gainExperience","completeSystemTask","currentPlant","warning","index","findIndex","rewards","experience","status","removeTask","deleteTask","console","removeCompletedTask","updateTask","updatedTask","originalTaskIndex","finalIndex","failedIndex","originalTask","toggleTaskImportance","log","currentImportant","newImportantState","taskIndex","reorderTasks","newOrder","Array","isArray","processedOrder","map","class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_createVNode","_component_el_button","type","onClick","$setup","openTaskForm","_component_el_icon","_component_Plus","_hoisted_5","_hoisted_6","_Fragment","_renderList","taskStore","key","_normalizeClass","_hoisted_7","_toDisplayString","icon","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","disabled","$event","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_component_el_empty","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_component_Clock","formatDate","_hoisted_22","_component_el_button_group","completeUserTask","_cache","editTask","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_component_el_dialog","showTaskForm","editingTask","width","footer","_withCtx","_hoisted_31","saveTask","_component_el_form","model","taskForm","_component_el_form_item","label","required","_component_el_input","placeholder","rows","_component_el_date_picker","format","style","_component_el_checkbox","parseISO","argument","options","invalidDate","constructFrom","in","NaN","additionalDigits","dateStrings","splitDateString","date","parseYearResult","parseYear","parseDate","restDateString","year","isNaN","timestamp","offset","time","parseTime","timezone","tmpDate","result","toDate","setFullYear","getUTCFullYear","getUTCMonth","getUTCDate","setHours","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","parseTimezone","patterns","dateTimeDelimiter","timeZoneDelimiter","dateRegex","timeRegex","timezoneRegex","dateString","array","split","timeString","test","substr","token","exec","replace","regex","RegExp","captures","match","parseInt","century","slice","isWeekDate","dayOfYear","parseDateUnit","month","day","week","dayOfWeek","validateWeekDate","dayOfISOWeekYear","validateDate","validateDayOfYearDate","setUTCFullYear","Math","max","hours","parseTimeUnit","minutes","seconds","validateTime","millisecondsInHour","millisecondsInMinute","parseFloat","timezoneString","sign","validateTimezone","isoWeekYear","fourthOfJanuaryDay","getUTCDay","diff","setUTCDate","daysInMonths","isLeapYearIndex","_year","_hours","name","components","Plus","Clock","setup","reactive","onMounted","fetchPlants","Promise","all","resetTaskForm","taskId","ElMessageBox","alert","confirmButtonText","confirm","cancelButtonText","then","catch","trim","e","__exports__","render"],"sourceRoot":""}